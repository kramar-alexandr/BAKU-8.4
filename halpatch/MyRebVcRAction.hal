external updating procedure SednMarcCampVcToCRM(var record MarcCampVc);

global
updating function LongInt MyRebVcRecordCheck(var record MyRebVc MyRebr,record MyRebVc MyReb2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Integer insertmode;
  record MyRebVc locMyRebr;
  row MyRebVc MyRebrw; //Edit***************************Sasha2,13:36 23.12.2015
  Integer rwcnt,i; //Edit***************************Sasha2,13:36 23.12.2015
  record INVc INr; //Edit***************************Sasha2,13:37 23.12.2015
  Boolean foundf; //Edit***************************Sasha2,14:15 23.12.2015
  vector longint doublrow;
  record MarcCampVc MCr;
  row MarcCampVc MCrw;
  record RLinkVc RLr;
  integer curcomp;
	record NewClassifChBlock NCb;
	record ObjVc OBjr;

  
	blockload(NCb);
	curcomp = currentcompany;  

  logtext(0,"MyRebVcRecordCheck");
  
  res = 0;
  insertmode = 1;
  
	for (i=0;i<MatRowCnt(MyRebr);i=i+1) begin // Edit ********************** Ihor Trubachov 20*12*2021
    MatRowGet(MyRebr,i,MyRebrw);
		if(nonblank(MyRebrw.Collection)) then begin
			MyRebrw.Collection = UpperCase(trim(MyRebrw.Collection));
			MatRowPut(MyRebr,i,MyRebrw);
		end;
	end;
	
	
	
  if(stat==Rs_Insert)then begin
  	if(MyRebr.Code=="0%")then begin
  		res = -1;
			RecordCheckError(36222,"",-1,"Code");      
			goto LMyRebVcRecordCheck;    
  	end;
  end;
    
  if blank(MyRebr.Comment) then begin
    res = -1;
    RecordCheckError(1058,"",-1,"Comment");      
    goto LMyRebVcRecordCheck;     
  end; 
  
	
	if(blank(MyRebr.Object))then begin // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:22 27.06.2019
		RecordCheckError(36257,"",-1,"Object");      
		res = -1; 
		goto LMyRebVcRecordCheck;
	end else begin
		OBjr.Code = MyRebr.Object;
		if(ReadFIrstMain(OBjr,1,true))then begin
			if(OBjr.OTCode!="PROMO")then begin
				RecordCheckError(36257,"",-1,"Object");      
				res = -1; 
				goto LMyRebVcRecordCheck;
			end;
		end else begin
			RecordCheckError(36257,"",-1,"Object");      
			res = -1; 
			goto LMyRebVcRecordCheck;
		end;
	end;
	
  if blank(MyRebr.Code) then begin
    res = -1;
    RecordCheckError(1959,"",-1,"Code");      
    goto LMyRebVcRecordCheck;     
  end;  
  if BlankDate(MyRebr.FromDate) then begin
    res = -1;
    RecordCheckError(1058,"",-1,"FromDate");      
    goto LMyRebVcRecordCheck; 
  end;      
  if BlankDate(MyRebr.ToDate) then begin
    res = -1;
    RecordCheckError(1058,"",-1,"ToDate");      
    goto LMyRebVcRecordCheck;     
  end;  
  /*if (stat==insertmode) then begin
     if (nonblankdate(MyRebr.FromDate) or nonblankdate(MyRebr.ToDate)) then begin
       if (blank(MyRebr.Replaces)) then begin
         RecordCheckError(1058,"",-1,"Replaces");      
         res = -1; 
         goto LMyRebVcRecordCheck;     
       end;
     end;
     locMyRebr.Replaces = MyRebr.Replaces;
     locMyRebr.FromDate = MyRebr.FromDate;
     if (ReadLastKey("Replaces",locMyRebr,2,false)) then begin
       if (locMyRebr.Replaces==MyRebr.Replaces) then begin
         if (nonblankdate(MyRebr.FromDate)) then begin
           if (locMyRebr.FromDate!=MyRebr.FromDate) then begin
             if (locMyRebr.ToDate!=MyRebr.ToDate) then begin
               if (DateInRange(MyRebr.FromDate,locMyRebr.FromDate,locMyRebr.ToDate)) then begin
                 RecordCheckError(2030,"",-1,"FromDate");      
                 res = -1; 
                 goto LMyRebVcRecordCheck;     
               end;  
             end;
           end;
           if (locMyRebr.FromDate==MyRebr.FromDate) then begin
             RecordCheckError(2030,"",-1,"FromDate");      
             res = -1; 
             goto LMyRebVcRecordCheck;     
           end;           
           if (locMyRebr.ToDate==MyRebr.ToDate) then begin
             RecordCheckError(2030,"",-1,"ToDate");      
             res = -1; 
             goto LMyRebVcRecordCheck;     
           end;           
         end;
       end;
     end;  
     locMyRebr.Replaces = MyRebr.Replaces;
     locMyRebr.ToDate = MyRebr.ToDate;
     if (ReadFirstKey("ToDate",locMyRebr,2,false)) then begin
       if (locMyRebr.Replaces==MyRebr.Replaces) then begin
         if (nonblankdate(MyRebr.FromDate)) then begin
           if (locMyRebr.FromDate!=MyRebr.FromDate) then begin
             if (locMyRebr.ToDate!=MyRebr.ToDate) then begin
               if (DateInRange(MyRebr.ToDate,locMyRebr.FromDate,locMyRebr.ToDate)) then begin
                 RecordCheckError(2030,"",-1,"ToDate");      
                 res = -1; 
                 goto LMyRebVcRecordCheck;     
               end;  
             end;
           end;
         end;
       end;  
     end;  
  end;*/  
  /*if (nonblank(MyRebr.Replaces)) then begin
    locMyRebr.Code = MyRebr.Replaces;
    if (ReadFirstMain(locMyRebr,1,true)==false) then begin
      RecordCheckError(1290,"",-1,"Replaces");      
      res = -1; 
      goto LMyRebVcRecordCheck;     
    end;
  end else begin
    if (nonblankdate(MyRebr.FromDate)) or (nonblankdate(MyRebr.ToDate)) then begin
      if (blank(MyRebr.Replaces)) then begin
        RecordCheckError(1058,"",-1,"Replaces");      
        res = -1; 
        goto LMyRebVcRecordCheck;     
      end;
    end;
  end;*/
  rwcnt = MatRowCnt(MyRebr); 
  
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(MyRebr,i,MyRebrw);
    if (doublrow[MyRebrw.CodeType & ":" & MyRebrw.ITCode]==-1) then begin
      doublrow[MyRebrw.CodeType & ":" & MyRebrw.ITCode] = i;
    end else begin
      RecordCheckError(35112,": " & USetStr(15095) & " " & doublrow[MyRebrw.CodeType & ":" & MyRebrw.ITCode]+1 & ", " & i+1,doublrow[MyRebrw.CodeType & ":" & MyRebrw.ITCode],"ITCode");      
      res = -1; 
      goto LMyRebVcRecordCheck;   
    end;
    /*if (MyRebrw.CodeType==1 and NonBlank(MyRebrw.ITCode)) then begin
      INr.Code = MyRebrw.ITCode;
      if (ReadFirstMain(INr,1,true)==false) then begin
        foundf = false;
        INr.AlternativeCode = MyRebrw.ITCode;
        if (ReadFirstKey("AlternativeCode",INr,1,true)) then begin
          foundf = true;
        end else begin
          INr.BarCode = MyRebrw.ITCode;
          if (ReadFirstKey("BarCode",INr,1,true)) then begin
            foundf = true;
          end;
        end;
        if (foundf) then begin
          MyRebrw.ITCode = INr.Code;
          MatRowPut(MyRebr,i,MyRebrw);
        end;
      end;
    end;*/
		if(nonblank(MyRebrw.MtObject))then begin
			OBjr.Code = MyRebrw.MtObject;
			if(ReadFIrstMain(OBjr,1,true))then begin
				if(OBjr.OTCode!="PROMO")then begin
					RecordCheckError(36261,"",i,"MtObject");      
					res = -1; 
					goto LMyRebVcRecordCheck;
				end;
			end else begin
				RecordCheckError(36261,"",i,"MtObject");      
				res = -1; 
				goto LMyRebVcRecordCheck;
			end;
		end;
  end; //Edit***************************Sasha2,14:09 23.12.2015 }
  // Edit Start ---------------------------------------------- Edit Start
	//Tuesday, 27 March 2018 14:58:51
	
  if(MyRebr.Code=="0%")then begin
  	if(nonblankdate(MyRebr.FromDate)) and (nonblankdate(MyRebr.ToDate))then begin
  		locMyRebr.Code = "";
  		while(loopmain(locMyRebr,1,true))begin
  			if(locMyRebr.Code!=MyRebr.Code and MyRebr.FromDate==locMyRebr.FromDate and MyRebr.ToDate==locMyRebr.ToDate)then begin
  				rwcnt = MatRowCnt(locMyRebr);
  				For(i=0;i<rwcnt;i=i+1) begin
	  				matrowdelete(locMyRebr,0);
					end; 
					rwcnt = MatRowCnt(MyRebr);
					For(i=0;i<rwcnt;i=i+1) begin
	  				MatRowGet(MyRebr,i,MyRebrw);
	  				MatRowPut(locMyRebr,i,MyRebrw);
					end; 
  				recordstore(locMyRebr,true);
  			end;
  		end;
  	end;
  end;
  
	// Edit End ---------------------------------------------- Edit End
	
	/*MCr.Code = CurrentCompany & "_M_" & MyRebr.Code;
	MCr.sDate = MyRebr.FromDate;
	MCr.CompNr = CurrentCompany;
	ReadFirstMain(MCr,3,true);*/
	if(ReadRecordLink(MyRebr,1,MCr,RLr)==false) then begin
		RecordNew(MCr);
		MCr.Code = CurrentCompany & "_M_" & MyRebr.Code;
		MCr.sDate = MyRebr.FromDate;
		MCr.vra0 = MyRebr.vra0;
		MCr.CompNr = CurrentCompany;
		MCr.Comment = MyRebr.Comment;
		MCr.Name = MyRebr.Comment;
		MCr.eDate = MyRebr.ToDate;
		for(i=0;i<matrowcnt(MyRebr);i=i+1) begin
			matrowget(MyRebr,i,MyRebrw);
			MCrw.ItemCode = MyRebrw.ITCode;
			MCrw.vRebate = MyRebrw.vra0;
			matrowput(MCr,i,MCrw);
		end;
		SednMarcCampVcToCRM(MCr);
		recordstore(MCr,true);
		CreateRecordLink(MyRebr,curcomp,MCr,curcomp);
		CreateRecordLink(MCr,curcomp,MyRebr,curcomp);
	end else begin
		MCr.Code = CurrentCompany & "_M_" & MyRebr.Code;
		MCr.sDate = MyRebr.FromDate;
		MCr.vra0 = MyRebr.vra0;
		MCr.CompNr = CurrentCompany;
		MCr.Comment = MyRebr.Comment;
		MCr.Name = MyRebr.Comment;
		MCr.eDate = MyRebr.ToDate;	
		SednMarcCampVcToCRM(MCr);
		recordstore(MCr,true);
	end;
	NCb.Update = 1;
	BlockStore(NCb);
LMyRebVcRecordCheck:;  
  MyRebVcRecordCheck = res;
  RETURN;
END;



global
updating function LongInt OnePOneRebVcRecordCheck(var record OnePOneRebVc OPORebr,record OnePOneRebVc OPOReb2r,LongInt stat,LongInt long4)  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger11:37 09.04.2019
BEGIN
  LongInt res;
  Integer insertmode;
  record OnePOneRebVc locOPORebr;
  row OnePOneRebVc OPORebrw; 
  Integer rwcnt,i; 
  record INVc INr; 
  Boolean foundf; 
  vector longint doublrow;
  record MarcCampVc MCr;
  row MarcCampVc MCrw;
  record RLinkVc RLr;
  integer curcomp;
	val rebate;
	vector boolean FirstItemf, SecondItemf;

  logtext(0,"MyRebVcRecordCheck");
  
  res = 0;
  if(OPORebr.SerNr<1)then begin
		OPORebr.SerNr = NextSerNr("OnePOneRebVc",OPORebr.FromDate,-1,false,"");
		if(OPORebr.SerNr<1)then begin
			OPORebr.SerNr = 1;
		end;
	end;
  if blank(OPORebr.Comment) then begin
    res = -1;
    RecordCheckError(1058,"",-1,"Comment");      
    goto LOnePOneRebVcRecordCheck;     
  end; 
  
  if blank(OPORebr.SerNr) then begin
    res = -1;
    RecordCheckError(1959,"",-1,"SerNr");      
    goto LOnePOneRebVcRecordCheck;     
  end;  
  if BlankDate(OPORebr.FromDate) then begin
    res = -1;
    RecordCheckError(1058,"",-1,"FromDate");      
    goto LOnePOneRebVcRecordCheck; 
  end;      
  if BlankDate(OPORebr.ToDate) then begin
    res = -1;
    RecordCheckError(1058,"",-1,"ToDate");      
    goto LOnePOneRebVcRecordCheck;     
  end;  
	if (OPORebr.vra0==blankval) then begin
    res = -1;
    RecordCheckError(1058,"",-1,"vra0");      
    goto LOnePOneRebVcRecordCheck;     
  end;  
	if(OPORebr.Recalcf==1)then begin
		rebate = OPORebr.vra0;
		if(OPORebr.vra1==blankval or (OPORebr.vra0!=OPOReb2r.vra0 and OPORebr.vra1==OPOReb2r.vra1))then begin
			OPORebr.vra1 = rebate;
		end else begin
			rebate = OPORebr.vra1;
		end;
		if(OPORebr.vra2==blankval or (OPORebr.vra1!=OPOReb2r.vra1 and OPORebr.vra2==OPOReb2r.vra2))then begin
			OPORebr.vra2 = rebate;
		end else begin
			rebate = OPORebr.vra2;
		end;
		if(OPORebr.vra3==blankval or (OPORebr.vra2!=OPOReb2r.vra2 and OPORebr.vra3==OPOReb2r.vra3))then begin
			OPORebr.vra3 = rebate;
		end else begin
			rebate = OPORebr.vra3;
		end;
		if(OPORebr.vra4==blankval or (OPORebr.vra3!=OPOReb2r.vra3 and OPORebr.vra4==OPOReb2r.vra4))then begin
			OPORebr.vra4 = rebate;
		end else begin
			rebate = OPORebr.vra4;
		end;
		if(OPORebr.vra5==blankval or (OPORebr.vra4!=OPOReb2r.vra4 and OPORebr.vra5==OPOReb2r.vra5))then begin
			OPORebr.vra5 = rebate;
		end else begin
			rebate = OPORebr.vra5;
		end;
		if(OPORebr.vra6==blankval or (OPORebr.vra5!=OPOReb2r.vra5 and OPORebr.vra6==OPOReb2r.vra6))then begin
			OPORebr.vra6 = rebate;
		end else begin
			rebate = OPORebr.vra6;
		end;
		if(OPORebr.vra7==blankval or (OPORebr.vra6!=OPOReb2r.vra6 and OPORebr.vra7==OPOReb2r.vra7))then begin
			OPORebr.vra7 = rebate;
		end else begin
			rebate = OPORebr.vra7;
		end;
		if(OPORebr.vra8==blankval or (OPORebr.vra7!=OPOReb2r.vra7 and OPORebr.vra8==OPOReb2r.vra8))then begin
			OPORebr.vra8 = rebate;
		end else begin
			rebate = OPORebr.vra8;
		end;
		if(OPORebr.vra9==blankval or (OPORebr.vra8!=OPOReb2r.vra8 and OPORebr.vra9==OPOReb2r.vra9))then begin
			OPORebr.vra9 = rebate;
		end else begin
			rebate = OPORebr.vra9;
		end;
		if(OPORebr.vra10==blankval or (OPORebr.vra9!=OPOReb2r.vra9 and OPORebr.vra10==OPOReb2r.vra10))then begin
			OPORebr.vra10 = rebate;
		end else begin
			rebate = OPORebr.vra10;
		end;
	end;
	rwcnt = matrowcnt(OPORebr);
	for (i=0;i<rwcnt;i=i+1) begin
		matrowget(OPORebr,i,OPORebrw);
		if(nonblank(OPORebrw.FirstItmCode))then begin
			FirstItemf[OPORebrw.FirstItmCode] = true;
		end;
		if(nonblank(OPORebrw.SecondItmCode))then begin
			SecondItemf[OPORebrw.SecondItmCode] = true;
		end;
		if(FirstItemf[OPORebrw.SecondItmCode])then begin
			res = -1;
			RecordCheckError(36226,"",i,"SecondItmCode");      
			goto LOnePOneRebVcRecordCheck;     
		end;
		if(SecondItemf[OPORebrw.FirstItmCode])then begin
			res = -1;
			RecordCheckError(36226,"",i,"FirstItmCode"); 
			goto LOnePOneRebVcRecordCheck; 
		end;
	end;
LOnePOneRebVcRecordCheck:;  
	OPORebr.Recalcf = 0;
  OnePOneRebVcRecordCheck = res;
  RETURN;
END;



global 
function Boolean MyRebVcRecordShouldBeSynchronised(record MyRebVc MyRebr,string tagstr)
begin
  Boolean res;
  
  res = true;
  MyRebVcRecordShouldBeSynchronised = res;
  return;
end;

global 
function Boolean MyRebVcRecordSync(record MyRebVc MyRebr,string tagstr)
begin
  Boolean res;
  
  res = true;
  MyRebVcRecordSync = res;
  return;
end;
