global
updating procedure HTSCSGetBankStatementIdleTask(string arg)
begin
  /*Area a_req;
  Integer i,rwcnt;
  Integer oldcomp;
  record CompaniesBlock Compb;
  row CompaniesBlock Comprw;
  record EInvoiceBlock EIb;
  Boolean stopidletaskf;
  Time t;
  record ServiceCacheVc SCr;
  record DBERecordsBlock DBERb;
  
  stopidletaskf = true;

  BlockLoad(DBERb);
  if (DBERb.DBStatus==1) then begin
    SCr.Code = "SENDEPAYMENTSEB";
    if (ReadFirstMain(SCr,1,true)) then begin
      oldcomp = CurrentCompany;  
      BlockLoad(Compb);
      rwcnt = MatRowCnt(Compb);  
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(Compb,i,Comprw);
        if (blank(Comprw.TCPIP)) then begin
          if (SetCompanyCode(Comprw.CompCode,false)) then begin
            BlockLoad(EIb);
            if (EIb.OutEPayments!=0 or EIb.DefaultEBehave!=0) then begin
              SendFunctionVersion("52.0","",a_req);
              SendTextParameter(CreateCompID,a_req);
              SendEOLParameter(a_req);
              if (ServiceRequestAsync("BANKSTATEMENT","SEB",true,a_req,"HTSCSGetBankStatementReply")==false) then begin
              end;
              stopidletaskf = false;
            end;
          end;
        end;
        ResetCompany(oldcomp);
      end;
    end else begin
      LookupServiceAsync("BANKSTATEMENT","SEB",true);
      LookupServiceAsync("SENDEPAYMENTSEB","",true);
      LookupServiceAsync("BANKSTATEMENTCONFIRM","",true);
      stopidletaskf = false;
    end;
  end;
  if (stopidletaskf) then begin
    t = CurrentTime;
    t.second = t.second + 10;
    NewTimedTask("Remove_GetBankStatement","Remove GetBankStatement","HTSCSGetBankStatementRemoveIdleTask","",CurrentDate,t,"","");
  end;*/
  return;
end;
