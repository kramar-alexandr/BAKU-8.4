remote procedure RemoteAPI2CloseShift(record CassaIDBlock,var area); // by Ira
remote procedure ZReportReq(var area,string);// Edit ********************** Ihor Trubachov 17*05*2021
remote procedure ZReportReq2(area,string);// Edit ********************** Ihor Trubachov 19*05*2021
remote procedure TransactionHistoryReq(area,string,string,string);// Edit ********************** Ihor Trubachov 31*05*2021
remote procedure TransactionHistoryAnsw(area);// Edit ********************** Ihor Trubachov 31*05*2021
remote procedure RemoteAPI2Login(var area,string,string);// Edit ************************** BPI Ukraine - KramarAlexandr - 03, 20 01 2021 y. at 11:43:00 AM
remote procedure RemoteAPI2OpenShift(record CassaIDBlock,var area);// Edit ************************** BPI Ukraine - KramarAlexandr - 03, 20 01 2021 y. at 11:43:00 AM
remote procedure APIv2SendSale_Remote(string,var area, record IVVc,record RcVc);
remote procedure APIv2SendReturnAuto_Remote(string,var area,record IVVc,record IVVc);
remote procedure APIv2Deposit_Remote(var area, val);  //  by Ira
remote procedure APIv2Withdraw_Remote(var area, val);  //  by Ira
remote procedure APIv2RollBack_Remote(string,var area,string);
remote procedure WriteCustomLogOnServer(area,string);
remote function string 255 NormalizeStrToJson (string);
external procedure IVDClass_RefreshStringList(Integer,record IVVc);
external function LongInt POSNETHexToLong(string);
remote procedure RA_ProceedFiscalAvancev2(string,var area,record RcVc);
remote updating procedure RA_POSButtonsToAll(record POSButtonsVc);
remote updating procedure ServerShiftZReportHandPr(record ZRepVc);// Edit ************************** Ihor Trubachov 26*05*2021


SetLangMode(LangRussian,"RUS",0);

global
function string 255 ChekUnicode(string str)
begin
  string 10 c, c1;
  string 10 ucode;
  string 255 res,tmp; 
  integer slen,i,int;
  longint lmes;
  
  res = str;
  i=0;
  slen = Len(res);
	
	if(slen>0)then begin
		for(i=0;i<slen;i=i+1)begin
			c = mid(res,i,2);
			if(c==(chr(92) & "u"))then begin
				ucode = mid(res,i,6);
				lmes = POSNETHexToLong(ucode);
				int = lmes;
				res = left(res,i) & uchr(int) & right(res, (len(res)-(i+6)));
				slen = Len(res);
			end;
		end;
	end;
		
  ChekUnicode = res;
  return;
end;

global updating procedure Fiscal_AutoReturn()  // by Ira
begin
	Integer wn,nwn,i;
	record IVVc IVr;
	record RcVc RepSpec;
	wn = CurWindow;
	getwindowrecord(wn,IVr);
	if(ReadFirstMain(IVr,1,true))then begin
		if(IVr.OKFlag==1)then begin
			RepSpec.long1 = IVr.SerNr;
			nwn = OpenWindow("APIv2AutoReturnVClass",1,wn,"","",RepSpec);
		end else begin
			messagebox(0,"Печать доступнатолько из утвержденной сч/ф");
		end;
	end;
return;
end;


global updating procedure Fiscal_Rollback()  // by Ira
begin
	Integer wn,nwn,i;
	record IVVc IVr;
	record RcVc RepSpec;
	wn = CurWindow;
	getwindowrecord(wn,IVr);
	if(ReadFirstMain(IVr,1,true))then begin
		if(IVr.OKFlag==1)then begin
			RepSpec.long1 = IVr.SerNr;
			nwn = OpenWindow("APIv2RollbackVClass",1,wn,"","",RepSpec);
		end else begin
			messagebox(0,"Печать доступнатолько из утвержденной сч/ф");
		end;
	end;
return;
end;

global updating procedure Fiscal_Sale()   // by Ira
begin
	Integer wn,nwn,i;
	record IVVc IVr;
	record RcVc RepSpec;
	wn = CurWindow;
	getwindowrecord(wn,IVr);
	if(ReadFirstMain(IVr,1,true))then begin
		if(IVr.OKFlag==1)then begin
			RepSpec.long1 = IVr.SerNr;
			nwn = OpenWindow("APIv2SendSaleVClass",1,wn,"","",RepSpec);
		end else begin
			messagebox(0,"Печать доступнатолько из утвержденной сч/ф");
		end;
	end;
return;
end;




global procedure SendFiscalLogToServer(string docnr,string doctype,area req,area reply)
begin
	area logarea,biglogarea,tmpar1,tmpar2;
	
	setareazerosize(logarea);
	addtexttoarea(chr(13) & chr(10) & "=========================" & doctype & "=" & docnr & "================================" & chr(13) & chr(10) & "{",logarea);
	addtexttoarea("\"Date\":" & "\"" & currentdate & "\"," & chr(13) & chr(10),logarea);
	addtexttoarea("\"SendData\":" & chr(13) & chr(10),logarea);
	
	setareazerosize(tmpar1);
	insertareabeforearea(logarea,tmpar1);
	insertareabeforearea(biglogarea,tmpar1);
	setareazerosize(biglogarea);
	insertareabeforearea(tmpar1,biglogarea);
	
	writeareatofile(logarea,"FiscalPrinter.log",1);

	setareazerosize(tmpar1);
	insertareabeforearea(req,tmpar1);
	insertareabeforearea(biglogarea,tmpar1);
	setareazerosize(biglogarea);
	insertareabeforearea(tmpar1,biglogarea);
	
	writeareatofile(req,"FiscalPrinter.log",1);
	setareazerosize(logarea);
	addtexttoarea("," & chr(13) & chr(10),logarea);
	addtexttoarea("\"ResponseData\":",logarea);
	
	setareazerosize(tmpar1);
	insertareabeforearea(logarea,tmpar1);
	insertareabeforearea(biglogarea,tmpar1);
	setareazerosize(biglogarea);
	insertareabeforearea(tmpar1,biglogarea);
	
	writeareatofile(logarea,"FiscalPrinter.log",1);
	
	setareazerosize(tmpar1);
	insertareabeforearea(reply,tmpar1);
	insertareabeforearea(biglogarea,tmpar1);
	setareazerosize(biglogarea);
	insertareabeforearea(tmpar1,biglogarea);
	
	writeareatofile(reply,"FiscalPrinter.log",1);
	
	
	setareazerosize(logarea);
	addtexttoarea("}",logarea);
	
	setareazerosize(tmpar1);
	insertareabeforearea(logarea,tmpar1);
	insertareabeforearea(biglogarea,tmpar1);
	setareazerosize(biglogarea);
	insertareabeforearea(tmpar1,biglogarea);
	
	writeareatofile(logarea,"FiscalPrinter.log",1);
	
	WriteCustomLogOnServer(biglogarea,"FiscalPrinterAllLog.log");

return;
end;

global updating procedure LoginToKassaDsm(boolean autologin)
begin
	Integer wn,mwn,rownr,mtrw,i,j,k;
  record RcVc RepSpec;
  record IPVc IPr;
  record UserVc Userr;
  row IPVc IPrw;
  Area req,reply; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 host,page,tstr,login,password; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  LongInt port; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  boolean status; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 category, transactionId, parentDocument;
  json jsresponse;
  val cash, terminal, discount,loyalty,bonus,vatsum;
  record IVTaxTrVc IVTaxTr;// Edit ************************** BPI Ukraine - KramarAlexandr - 06, 24 10 2020 y. at 6:39:37 PM
	record PMBlock PMb;
  row PMBlock PMrw;
	area logarea,biglogarea,tmpar1,tmpar2;
	vector val vatperc;
	array string 50 vtags;
	record CassaIDBlock CIDb;
	
	logtext(0,"LoginToKassaDsm");
	
  host = "10.12.11.11"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  page = "/v2"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  port = 8989; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
	blockload(CIDb);
	
	Userr.Code = CurrentUser;
	if (ReadFirstMain(Userr,1,true)) then begin
		host = Userr.KassaIPAddr;
	end;
	
	login = "API";
	password = "1";
	if(nonblank(CIDb.APILogin))then begin
	  login = CIDb.APILogin;
    password = CIDb.APIPassword;
	end;
	RemoteAPI2Login(req,login,password);	
	
	SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5); // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  jsresponse = ParseJSONArea(reply);
	writeareatofile(reply,"LogitReply.txt",1);
	//access_token": "7dOF7HlXb/uG2J/FD+GtjA==", "code": 1,
	if(nonblank(JSONGet(jsresponse,"access_token")))then begin
		
		CIDb.CassaToken = urldecode(ChekUnicode(JSONGet(jsresponse,"access_token")));
		blockstore(CIDb);
	end;
	if(autologin)then begin
		if(nonblank(JSONGet(jsresponse,"code")))then begin
			if(JSONGet(jsresponse,"code")=="0")then begin
				messagebox(0,"Операция успешна");
			end else begin
				messagebox(0,JSONGet(jsresponse,"message"));
			end;
		end else begin
			messagebox(0,"Связь с кассой нарушена. Проверьте сообщения об ошибках");
		end;
	end;
	SendFiscalLogToServer("","LOGIN",req,reply);
	
return;
end;


global updating procedure Fiscal_Login()   // by Ira
begin

	LoginToKassaDsm(true);
	
return;
end;


global updating procedure DepositToKassaDsm()   //  by Ira
begin
	Integer wn,nwn;
	record RcVc RepSpec;
	wn = CurWindow;
	nwn = OpenWindow("DepositToKassaVClass",1,wn,"","",RepSpec);
return;

return;
end;


global updating procedure WithdrawDsm()   //  by Ira
begin
	Integer wn,nwn;
	record RcVc RepSpec;
	wn = CurWindow;
	nwn = OpenWindow("WithdrawVClass",1,wn,"","",RepSpec);
return;

return;
end;


global
updating procedure APIv2Withdraw()   //  by Ira
begin
  Integer wn,mwn;
  record RcVc RepSpec;
  record IVVc IVr;
  row IVVc IVrw;
  Area req,reply; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 host,page; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  LongInt port; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  json jsresponse;
	record CassaIDBlock CIDb;
	
  wn = CurWindow;
	deselectwindow(wn,true);
	getwindowrecord(wn, RepSpec);
  
  host = "10.10.12.116"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  page = "/v2"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  port = 8989; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
	
	APIv2Withdraw_Remote(req, RepSpec.vals0);
  writeareatofile(req,"1.txt",1);
  
  SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5); // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30

  jsresponse = ParseJSONArea(reply);
  if(nonblank(JSONGet(jsresponse,"code")))then begin
		if(JSONGet(jsresponse,"code")=="0")then begin
			messagebox(0,"Операция успешна");
		end else begin
			messagebox(0,JSONGet(jsresponse,"message"));
		end;
	end else begin
		messagebox(0,"Связь с кассой нарушена. Проверьте сообщения об ошибках");
	end;
	writeareatofile(reply,"2.txt",1);
	
	closewindow(wn);
  return;
end;


global
updating procedure APIv2Deposit()   //  by Ira
begin
  Integer wn,mwn;
  record RcVc RepSpec;
  record IVVc IVr;
  row IVVc IVrw;
  Area req,reply; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 host,page; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  LongInt port; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  json jsresponse;
	record CassaIDBlock CIDb;
	
  wn = CurWindow;
	deselectwindow(wn,true);
	getwindowrecord(wn, RepSpec);
  
  host = "10.10.12.116"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  page = "/v2"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  port = 8989; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30

	APIv2Deposit_Remote(req, RepSpec.vals0);
  writeareatofile(req,"1.txt",1);
  
  SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5); // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30

  jsresponse = ParseJSONArea(reply);
  if(nonblank(JSONGet(jsresponse,"code")))then begin
		if(JSONGet(jsresponse,"code")=="0")then begin
			messagebox(0,"Операция успешна");
		end else begin
			messagebox(0,JSONGet(jsresponse,"message"));
		end;
	end else begin
		messagebox(0,"Связь с кассой нарушена. Проверьте сообщения об ошибках");
	end;
	writeareatofile(reply,"2.txt",1);
	
	closewindow(wn);
  return;
end;



global updating procedure CloseShiftKassaDsm()  //  by Ira
begin
	Integer wn,mwn,rownr,mtrw,i,j,k;
  record RcVc RepSpec;
  record IPVc IPr;
  record UserVc Userr;
  row IPVc IPrw;
  Area req,reply; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 host,page,tstr; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  LongInt port; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  boolean status; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 category, transactionId, parentDocument;
  json jsresponse;
  val cash, terminal, discount,loyalty,bonus,vatsum;
  record IVTaxTrVc IVTaxTr;// Edit ************************** BPI Ukraine - KramarAlexandr - 06, 24 10 2020 y. at 6:39:37 PM
	record PMBlock PMb;
  row PMBlock PMrw;
	area logarea,biglogarea,tmpar1,tmpar2;
	vector val vatperc;
	array string 50 vtags;
	record CassaIDBlock CIDb;
	
	logtext(0,"LoginToKassaDsm");
	
  host = "10.12.11.11"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  page = "/v2"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  port = 8989; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
	
	Userr.Code = CurrentUser;
	if (ReadFirstMain(Userr,1,true)) then begin
		host = Userr.KassaIPAddr;
	end;
	
	blockload(CIDb);
	RemoteAPI2CloseShift(CIDb,req);	
	SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5); // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  jsresponse = ParseJSONArea(reply);
  if(nonblank(JSONGet(jsresponse,"code")))then begin
		if(JSONGet(jsresponse,"code")=="0")then begin
			messagebox(0,"Операция успешна");
		end else begin
			messagebox(0,JSONGet(jsresponse,"message"));
		end;
	end else begin
		messagebox(0,"Связь с кассой нарушена. Проверьте сообщения об ошибках");
	end;
	SendFiscalLogToServer("","CLOSE_SHIFT",req,reply);
	
return;
end;



global updating procedure OpenShiftKassaDsm()
begin
	Integer wn,mwn,rownr,mtrw,i,j,k;
  record RcVc RepSpec;
  record IPVc IPr;
  record UserVc Userr;
  row IPVc IPrw;
  Area req,reply; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 host,page,tstr; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  LongInt port; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  boolean status; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 category, transactionId, parentDocument;
  json jsresponse;
  val cash, terminal, discount,loyalty,bonus,vatsum;
  record IVTaxTrVc IVTaxTr;// Edit ************************** BPI Ukraine - KramarAlexandr - 06, 24 10 2020 y. at 6:39:37 PM
	record PMBlock PMb;
  row PMBlock PMrw;
	area logarea,biglogarea,tmpar1,tmpar2;
	vector val vatperc;
	array string 50 vtags;
	record CassaIDBlock CIDb;
	
	logtext(0,"LoginToKassaDsm");
	
  host = "10.12.11.11"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  page = "/v2"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  port = 8989; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
	
	Userr.Code = CurrentUser;
	if (ReadFirstMain(Userr,1,true)) then begin
		host = Userr.KassaIPAddr;
	end;
	
	blockload(CIDb);
	RemoteAPI2OpenShift(CIDb,req);	
	SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5); // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  jsresponse = ParseJSONArea(reply);
  if(nonblank(JSONGet(jsresponse,"code")))then begin
		if(JSONGet(jsresponse,"code")=="0")then begin
			messagebox(0,"Операция успешна");
		end else begin
			messagebox(0,JSONGet(jsresponse,"message"));
		end;
	end else begin
		messagebox(0,"Связь с кассой нарушена. Проверьте сообщения об ошибках");
	end;
	SendFiscalLogToServer("","OPEN_SHIFT",req,reply);
	
return;
end;

global
updating procedure APIv2SendSaleDsm()
begin
  Integer wn,mwn,rownr,mtrw,i,j,k;
  record RcVc RepSpec;
  record IVVc IVr;
  record UserVc Userr;
  row IVVc IVrw;
  Area req,reply; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 host,page,tstr; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  LongInt port; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  boolean status; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 category, transactionId, parentDocument;
  json jsresponse;
  val cash, terminal, discount,loyalty,bonus,vatsum;
  record IVTaxTrVc IVTaxTr;// Edit ************************** BPI Ukraine - KramarAlexandr - 06, 24 10 2020 y. at 6:39:37 PM
	record PMBlock PMb;
  row PMBlock PMrw;
	area logarea,biglogarea,tmpar1,tmpar2;
	vector val vatperc;
	array string 50 vtags;
	boolean isnewrec,issecond;
	record CassaIDBlock CIDb;
	
	
  wn = CurWindow;
	
	mwn = motherwindow(wn);
  getwindowrecord(wn,RepSpec);
  closewindow(wn);
	getwindowrecord(mwn,IVr);
	
	if(IVr.SerNr<0)then begin
		isnewrec = true;
	end;
	
  IVr.SerNr = RepSpec.long1;
  ReadFirstMain(IVr,1,true);
	
	if(IVr.OKFlag==0)then begin
		messagebox(0,"Сначала завершите сч/ф");
  	goto LAPIv2SendSaleDsm;
	end;
	blockload(CIDb);
	if(blank(CIDb.CassaToken))then begin
LbeginLogin:;
		LoginToKassaDsm(false);
		blockload(CIDb);
		if(blank(CIDb.CassaToken))then begin
			messagebox(0,"Залогинтесь в кассу");
			goto LAPIv2SendSaleDsm;
		end;
	end;
	
  blockload(PMb);
  
  host = "10.10.12.116"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  page = "/v2"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  port = 8989; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  //http://192.168.5.236:8989
  
	Userr.Code = CurrentUser;
	if (ReadFirstMain(Userr,1,true)) then begin
		host = Userr.KassaIPAddr;
	end;
	setareazerosize(req);
	setareazerosize(reply);
	APIv2SendSale_Remote(CIDb.CassaToken,req,IVr,RepSpec);
  writeareatofile(req,"SendTAXRequest.txt",1);
  SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5); // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30

  jsresponse = ParseJSONArea(reply);
	writeareatofile(reply,"SendTAXResponse.txt",1);
	SendFiscalLogToServer(IVr.SerNr,"SALE",req,reply);
	if(nonblank(JSONGet(jsresponse,"code")))then begin
		if(JSONGet(jsresponse,"code")=="0")then begin
		end else begin
			if(JSONGet(jsresponse,"code")=="401")then begin
				if(issecond)then begin
					messagebox(0,JSONGet(jsresponse,"message"));
					goto LAPIv2SendSaleDsm;
				end else begin
					issecond = true;
					goto LbeginLogin;
				end;
			end else begin
				messagebox(0,JSONGet(jsresponse,"message"));
				goto LAPIv2SendSaleDsm;
			end;
		end;
	end else begin
		messagebox(0,"Связь с кассой нарушена. Проверьте сообщения об ошибках");
		goto LAPIv2SendSaleDsm;
	end;	
	
	if(nonblank(JSONGet(jsresponse,"short_id")))then begin
		transactionId = JSONGet(jsresponse,"short_id");
		IVr.TaxTransactionCode = transactionId;
		IVr.TaxTransactionDate=CurrentDate;
		parentDocument = JSONGet(jsresponse,"long_id");
		IVr.TaxParentDocument = parentDocument;
	
		IVTaxTr.SerNr = IVr.SerNr;// Edit ************************** BPI Ukraine - KramarAlexandr - 06, 24 10 2020 y. at 6:41:19 PM
		if(readfirstmain(IVTaxTr,1,true))then begin
			IVTaxTr.TaxTransactionCode = IVr.TaxTransactionCode;
			IVTaxTr.document_number = JSONGet(jsresponse,"document_number");
			IVTaxTr.long_id = JSONGet(jsresponse,"long_id");
			IVTaxTr.short_id = JSONGet(jsresponse,"short_id");
			IVTaxTr.shift_document_nubber = JSONGet(jsresponse,"shift_document_number");
			recordstore(IVTaxTr,true);
		end else begin
			IVTaxTr.SerNr = IVr.SerNr;
			IVTaxTr.TaxTransactionCode = IVr.TaxTransactionCode;
			
			IVTaxTr.document_number = JSONGet(jsresponse,"document_number");
			IVTaxTr.long_id = JSONGet(jsresponse,"long_id");
			IVTaxTr.short_id = JSONGet(jsresponse,"short_id");
			IVTaxTr.shift_document_nubber = JSONGet(jsresponse,"shift_document_number");
			 recordstore(IVTaxTr,true);
		end;
	
		RecordStore(IVr,true);
		if(isnewrec==false)then begin
			//putwindowrecord(mwn,IVr);
			//ReRunWindowDef(mwn);
			//IVDClass_RefreshStringList(mwn,IVr);
		end;
	end;
	
LAPIv2SendSaleDsm:;
	
  return;
end;

global updating procedure APIv2SendSale()
begin
	record RcVc RepSpec;
	integer wn,mwn;
	
	wn = curwindow;
	mwn = motherwindow(wn);
	closewindow(wn);
	selectwindow(mwn);
	APIv2SendSaleDsm;
	
return;
end;


global
updating procedure APIv2SendReturnAutoDsm()//Новая процедура возврата
begin
  Integer wn,mwn,rownr,mtrw,i,loopcount,quant,sum,rwcnt,j;
  record RcVc RepSpec;
  record IVVc IVr,IV2r;
  record UserVc Userr;
  row IVVc IVrw;
  Area req,reply; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 host,page,tstr; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  LongInt port; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  boolean status; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 category, transactionId,parentDocument;
  json jsresponse;
  val cash,terminal,discount,summary,loyalty,bonus,vatsum;
  array string 50 artCode;
	record IVTaxTrVc IVTaxTr;// Edit ************************** BPI Ukraine - KramarAlexandr - 06, 24 10 2020 y. at 7:01:40 PM
	area logarea,tmpar1,tmpar2,biglogarea;
	record PMBlock PMb;
  row PMBlock PMrw;
	string 255 orTaxTransactionCode,orTaxParentDocument;
	record CassaIDBlock CIDb;
	boolean isnewrec;
	
  wn = CurWindow;
	
  DeselectWindow(wn,true);
	getwindowrecord(wn,RepSpec);
  closewindow(wn);
	if(IVr.SerNr<0)then begin
		isnewrec = true;
	end;
	
  IVr.SerNr = RepSpec.long1;
  ReadFirstMain(IVr,1,true);
  //getwindowrecord(wn,IVr);
	

	
  rwcnt = matrowcnt(IVr);
  for(i=0;i<rwcnt;i=i+1)begin
  	matrowget(IVr,i,IVrw);
  	if(IVrw.stp==kInvoiceRowTypeNormal)then begin
  		if(IVrw.Quant>=0 and IVr.InvType==kInvoiceTypeNormal)then begin
				messagebox(0,"При возврате все кол-ва товаров в сч/ф должны быть < 0");
				goto LAPIv2SendReturnAutoDsm;
  		end;
  	end;
  	if(IVr.InvType==kInvoiceTypeCredit)then begin
  		IV2r.SerNr = IVr.CredInv;
  		if(readfirstmain(IV2r,1,true))then begin
  			if(readfirstmain(IV2r,1,true))then begin
					if(blank(IV2r.TaxTransactionCode) or blank(IV2r.TaxParentDocument))then begin
						messagebox(0,"Сч/ф продажи не содержит данных по чеку. Создайте возврат через ручной ввод фискального номера");
						goto LAPIv2SendReturnAutoDsm;
					end else begin
						if(blank(orTaxTransactionCode) and blank(orTaxParentDocument))then begin
							orTaxTransactionCode = IV2r.TaxTransactionCode;
							orTaxParentDocument = IV2r.TaxParentDocument;
						end else begin
							if(orTaxTransactionCode!=IV2r.TaxTransactionCode)then begin
								messagebox(0,"В одном чеке можно вернуть только товары проданные в одном чеке. Проверьте возврат");
								goto LAPIv2SendReturnAutoDsm;
							end;
						end;
					end;
				end else begin
					messagebox(0,"Оригинальная сч/ф продажи не найдена");
					goto LAPIv2SendReturnAutoDsm;
				end;
  		end;
  	end else begin
			if(IVrw.stp==kInvoiceRowTypeNormal)then begin
				if(IVrw.Quant<0)then begin
					if(IVrw.IVForRetNr<0)then begin
						messagebox(0,"Возвращаемый товар не связан с сч/ф продажи");
						goto LAPIv2SendReturnAutoDsm;
					end else begin
						IV2r.SerNr = IVrw.IVForRetNr;
						if(readfirstmain(IV2r,1,true))then begin
							if(blank(IV2r.TaxTransactionCode) or blank(IV2r.TaxParentDocument))then begin
								messagebox(0,"Сч/ф продажи не содержит данных по чеку. Создайте возврат через ручной ввод фискального номера");
								goto LAPIv2SendReturnAutoDsm;
							end else begin
								if(blank(orTaxTransactionCode) and blank(orTaxParentDocument))then begin
									orTaxTransactionCode = IV2r.TaxTransactionCode;
									orTaxParentDocument = IV2r.TaxParentDocument;
								end else begin
									if(orTaxTransactionCode!=IV2r.TaxTransactionCode)then begin
										messagebox(0,"В одном чеке можно вернуть только товары проданные в одном чеке. Проверьте возврат");
										goto LAPIv2SendReturnAutoDsm;
									end;
								end;
							end;
						end else begin
							messagebox(0,"Оригинальная сч/ф продажи не найдена");
							goto LAPIv2SendReturnAutoDsm;
						end;
					end;
				end;
			end;
  	end;
  end;

  if(true)then begin
		if(true)then begin	
			blockload(CIDb);
			if(IVr.SerNr<0) then begin
				goto LAPIv2SendReturnAutoDsm;
			end;
			blockload(PMb);
			host = "10.12.11.11"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
			page = "/"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
			port = 8989; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
			//http://192.168.5.236:8989
	
			Userr.Code = CurrentUser;
			if (ReadFirstMain(Userr,1,true)) then begin
					host = Userr.KassaIPAddr;
			end;

			APIv2SendReturnAuto_Remote(CIDb.CassaToken,req,IVr,IV2r);
			writeareatofile(req,"SendTAXRequest.txt",1);
	
			SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5); // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30

			jsresponse = ParseJSONArea(reply);
			writeareatofile(reply,"SendTAXResponse.txt",1);
			SendFiscalLogToServer(IVr.SerNr,"RETURN",req,reply);
			if(nonblank(JSONGet(jsresponse,"code")))then begin
				if(JSONGet(jsresponse,"code")=="0")then begin

				end else begin
					messagebox(0,JSONGet(jsresponse,"message"));
					goto LAPIv2SendReturnAutoDsm;
				end;
			end else begin
				messagebox(0,"Связь с кассой нарушена. Проверьте сообщения об ошибках");
				goto LAPIv2SendReturnAutoDsm;
			end;
			
			if(nonblank(JSONGet(jsresponse,"short_id")))then begin
        transactionId = JSONGet(jsresponse,"short_id");
        IVr.TaxTransactionCode = transactionId;
        IVr.TaxTransactionDate=CurrentDate;
        parentDocument = JSONGet(jsresponse,"long_id");
        IVr.TaxParentDocument = parentDocument;
  
        IVTaxTr.SerNr = IVr.SerNr;// Edit ************************** BPI Ukraine - KramarAlexandr - 06, 24 10 2020 y. at 6:41:19 PM
        if(readfirstmain(IVTaxTr,1,true))then begin
          IVTaxTr.TaxTransactionCode = IVr.TaxTransactionCode;
          IVTaxTr.document_number = JSONGet(jsresponse,"document_number");
          IVTaxTr.long_id = JSONGet(jsresponse,"long_id");
          IVTaxTr.short_id = JSONGet(jsresponse,"short_id");
          IVTaxTr.shift_document_nubber = JSONGet(jsresponse,"shift_document_number");
          recordstore(IVTaxTr,true);
        end else begin
          IVTaxTr.SerNr = IVr.SerNr;
          IVTaxTr.TaxTransactionCode = IVr.TaxTransactionCode;
      
          IVTaxTr.document_number = JSONGet(jsresponse,"document_number");
          IVTaxTr.long_id = JSONGet(jsresponse,"long_id");
          IVTaxTr.short_id = JSONGet(jsresponse,"short_id");
          IVTaxTr.shift_document_nubber = JSONGet(jsresponse,"shift_document_number");
           recordstore(IVTaxTr,true);
        end;
  
        RecordStore(IVr,true);
			end;
			
		end else begin
		end;
	end else begin
	end;
	
LAPIv2SendReturnAutoDsm:;
 
  return;
end;

//Пока что не испольуется
global procedure ProceedFiscalAvance2v()
begin
	Integer wn,mwn,rownr,mtrw,i,j,k;
  record RcVc RepSpec;
  record IPVc IPr;
  record UserVc Userr;
  row IPVc IPrw;
  Area req,reply; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 host,page,tstr; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  LongInt port; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  boolean status; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 category, transactionId, parentDocument;
  json jsresponse;
  val cash, terminal, discount,loyalty,bonus,vatsum;
  record IVTaxTrVc IVTaxTr;// Edit ************************** BPI Ukraine - KramarAlexandr - 06, 24 10 2020 y. at 6:39:37 PM
	record PMBlock PMb;
  row PMBlock PMrw;
	area logarea,biglogarea,tmpar1,tmpar2;
	vector val vatperc;
	array string 50 vtags;
	string 255 token;
	
	
	
  wn = CurWindow;
  deselectwindow(wn,true);
  getwindowrecord(wn,RepSpec);
  
  
  host = "10.12.11.116"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  page = "/"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  port = 8989; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
	
	Userr.Code = CurrentUser;
	if (ReadFirstMain(Userr,1,true)) then begin
		host = Userr.KassaIPAddr;
	end;
  
  if(RepSpec.vals0!=0 or RepSpec.vals1!=1)then begin
  	RA_ProceedFiscalAvancev2(token,req,RepSpec);
  	SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5); // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  	
  	writeareatofile(reply,"SendTAXResponse.txt",1);
	
		setareazerosize(logarea);
		addtexttoarea(chr(13) & chr(10) & "=========================PREPAYMENT=================================" & chr(13) & chr(10) & "{",logarea);
		addtexttoarea("\"Date\":" & "\"" & currentdate & "\"," & chr(13) & chr(10),logarea);
		addtexttoarea("\"Paymet\":" & "\"" & IPr.SerNr & "\"," & chr(13) & chr(10),logarea);
		addtexttoarea("\"SendData\":" & chr(13) & chr(10),logarea);
		
		setareazerosize(tmpar1);
		insertareabeforearea(logarea,tmpar1);
		insertareabeforearea(biglogarea,tmpar1);
		setareazerosize(biglogarea);
		insertareabeforearea(tmpar1,biglogarea);
		
		writeareatofile(logarea,"FiscalPrinter.log",1);

		setareazerosize(tmpar1);
		insertareabeforearea(req,tmpar1);
		insertareabeforearea(biglogarea,tmpar1);
		setareazerosize(biglogarea);
		insertareabeforearea(tmpar1,biglogarea);
		
		writeareatofile(req,"FiscalPrinter.log",1);
		setareazerosize(logarea);
		addtexttoarea("," & chr(13) & chr(10),logarea);
		addtexttoarea("\"ResponseData\":",logarea);
		
		setareazerosize(tmpar1);
		insertareabeforearea(logarea,tmpar1);
		insertareabeforearea(biglogarea,tmpar1);
		setareazerosize(biglogarea);
		insertareabeforearea(tmpar1,biglogarea);
		
		writeareatofile(logarea,"FiscalPrinter.log",1);
		
		setareazerosize(tmpar1);
		insertareabeforearea(reply,tmpar1);
		insertareabeforearea(biglogarea,tmpar1);
		setareazerosize(biglogarea);
		insertareabeforearea(tmpar1,biglogarea);
		
		writeareatofile(reply,"FiscalPrinter.log",1);
		
		
		setareazerosize(logarea);
		addtexttoarea("}",logarea);
		
		setareazerosize(tmpar1);
		insertareabeforearea(logarea,tmpar1);
		insertareabeforearea(biglogarea,tmpar1);
		setareazerosize(biglogarea);
		insertareabeforearea(tmpar1,biglogarea);
		
		writeareatofile(logarea,"FiscalPrinter.log",1);
		
		WriteCustomLogOnServer(biglogarea,"FiscalPrinterAllLog.log");
  	closewindow(wn);
  end;
  
  
return;
end;





global updating procedure ZReportDsm() // Edit ********************** Ihor Trubachov 17*05*2021
BEGIN

	string 255 host,page,token;
	Area req,reply;
	LongInt port;
	json jsresponse;
	record CassaIDBlock CIDb;
	record UserVc Userr;
	record ZREpVc ZREpr;
	row ZREpVc ZREprw;
	Integer cnt,i,j,cnt2,ZREpcnt;
	boolean issecond;
	
	
	
	
	logtext(0,"ZReportDsm");
	
  host = "10.12.11.11"; 
  page = "/v2"; 
  port = 8989; 
	blockload(CIDb);
	if(blank(CIDb.CassaToken))then begin
		LbeginLogin2:;
		LoginToKassaDsm(false);
		blockload(CIDb);
		if(blank(CIDb.CassaToken))then begin
			messagebox(0,"Залогинтесь в кассу");
			goto LZReportDsm;
		end;
	end;
	Userr.Code = CurrentUser;
	if (ReadFirstMain(Userr,1,true)) then begin
		host = Userr.KassaIPAddr;
	end;

	if(nonblank(CIDb.APILogin))then begin
	  	token = CIDb.CassaToken;
	end;
	//token = "7dOF7HlXb/uG2J/FD+GtjA==";

	ZReportReq(req,token);
  
  SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5);

//
//	SetAreaZeroSize(reply);
//	AddFileToArea("zAnswer.txt",reply,false);
//

	jsresponse = ParseJSONArea(reply);
	if(nonblank(JSONGet(jsresponse,"code")))then begin
		if(JSONGet(jsresponse,"code")=="0")then begin
			ZREpr.SerNr = NextSerNr("ZREpVc",CurrentDate,-1,false,"");
			ZREpr.Code = JSONGet(jsresponse,"code");
			ZREpr.TransDate = CurrentDate;
			ZREpr.TransTime = CurrentTime;
			if(nonblank(JSONGet(jsresponse,"data"))) then begin
				ZREpr.createdAtUtc = JSONGet(jsresponse,"data/createdAtUtc");
				cnt = JSONCountChildren(jsresponse,"data/currencies");
				for(i=0;i<cnt;i=i+1) begin
					ZREpr.correctionBonusSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/correctionBonusSum"),M4Val);
					ZREpr.correctionCashSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/correctionCashSum"),M4Val);
					ZREpr.correctionCashlessSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/correctionCashlessSum"),M4Val);
					ZREpr.correctionCount = StringToLongInt(JSONGet(jsresponse,"data/currencies/["  & i & "]/correctionCount"));
					ZREpr.correctionCreditSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/correctionCreditSum"),M4Val);
					ZREpr.correctionPrepaymentSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/correctionPrepaymentSum"),M4Val);
					ZREpr.correctionSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/correctionSum"),M4Val);
					//messagebox(0,ZREpr.correctionSum);
					ZREpr.currency = JSONGet(jsresponse,"data/currencies/["  & i & "]/currency");
					ZREpr.depositCount = StringToLongInt(JSONGet(jsresponse,"data/currencies/["  & i & "]/depositCount"));
					ZREpr.depositSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/depositSum"),M4Val);
					ZREpr.moneyBackBonusSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/moneyBackBonusSum"),M4Val);
					//messagebox(0,ZREpr.moneyBackBonusSum);
					ZREpr.moneyBackCashSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/moneyBackCashSum"),M4Val);
					ZREpr.moneyBackCashlessSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/moneyBackCashlessSum"),M4Val);
					ZREpr.moneyBackCount = StringToLongInt(JSONGet(jsresponse,"data/currencies/["  & i & "]/moneyBackCount"));
					ZREpr.moneyBackCreditSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/moneyBackCreditSum"),M4Val);
					ZREpr.moneyBackPrepaymentSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/moneyBackPrepaymentSum"),M4Val);
					ZREpr.moneyBackSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/moneyBackSum"),M4Val);
					ZREpr.rollbackBonusSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/rollbackBonusSum"),M4Val);
					ZREpr.rollbackCashSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/rollbackCashSum"),M4Val);
					ZREpr.rollbackCashlessSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/rollbackCashlessSum"),M4Val);
					ZREpr.rollbackCount = StringToLongInt(JSONGet(jsresponse,"data/currencies/["  & i & "]/rollbackCount"));
					ZREpr.rollbackCreditSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/rollbackCreditSum"),M4Val);
					ZREpr.rollbackPrepaymentSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/rollbackPrepaymentSum"),M4Val);
					ZREpr.rollbackSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/rollbackSum"),M4Val);
					ZREpr.saleBonusSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/saleBonusSum"),M4Val);
					ZREpr.saleCashSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/saleCashSum"),M4Val);
					ZREpr.saleCount = StringToLongInt(JSONGet(jsresponse,"data/currencies/["  & i & "]/saleCount"));
					ZREpr.saleCreditSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/saleCreditSum"),M4Val);
					ZREpr.salePrepaymentSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/salePrepaymentSum"),M4Val);
					ZREpr.saleSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/saleSum"),M4Val);
					ZREpr.saleCashlessSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/saleCashlessSum"),M4Val);
					ZREpr.withdrawCount = StringToLongInt(JSONGet(jsresponse,"data/currencies/["  & i & "]/withdrawCount"));
					ZREpr.withdrawSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/withdrawSum"),M4Val);
					cnt2 = JSONCountChildren(jsresponse,"data/currencies/["  & i & "]/correctionVatAmounts");
					for(j=0;j<cnt2;j=j+1) begin
						ZREpcnt = matrowcnt(ZREpr);
						ZREprw.Type = "Correction vat amounts";
						ZREprw.VatPercent = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/correctionVatAmounts/["  & j & "]/VatPercent"),M4Val);
						ZREprw.VatSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/correctionVatAmounts/["  & j & "]/VatSum"),M4Val);
						matrowput(ZREpr,ZREpcnt,ZREprw);
					end;
					cnt2 = JSONCountChildren(jsresponse,"data/currencies/["  & i & "]/moneyBackVatAmounts");
					for(j=0;j<cnt2;j=j+1) begin
						ZREpcnt = matrowcnt(ZREpr);
						ZREprw.Type = "Money back vat amounts";
						ZREprw.VatPercent = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/moneyBackVatAmounts/["  & j & "]/VatPercent"),M4Val);
						ZREprw.VatSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/moneyBackVatAmounts/["  & j & "]/VatSum"),M4Val);
						matrowput(ZREpr,ZREpcnt,ZREprw);
					end;
					cnt2 = JSONCountChildren(jsresponse,"data/currencies/["  & i & "]/rollbackVatAmounts");
					for(j=0;j<cnt2;j=j+1) begin
						ZREpcnt = matrowcnt(ZREpr);
						ZREprw.Type = "Rollback vat amounts";
						ZREprw.VatPercent = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/rollbackVatAmounts/["  & j & "]/VatPercent"),M4Val);
						ZREprw.VatSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/rollbackVatAmounts/["  & j & "]/VatSum"),M4Val);
						matrowput(ZREpr,ZREpcnt,ZREprw);
					end;
					cnt2 = JSONCountChildren(jsresponse,"data/currencies/["  & i & "]/saleVatAmounts");
					for(j=0;j<cnt2;j=j+1) begin
						ZREpcnt = matrowcnt(ZREpr);
						ZREprw.Type = "Sale vat amounts";
						ZREprw.VatPercent = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/saleVatAmounts/["  & j & "]/VatPercent"),M4Val);
						ZREprw.VatSum = StringToVal(JSONGet(jsresponse,"data/currencies/["  & i & "]/saleVatAmounts/["  & j & "]/VatSum"),M4Val);
						matrowput(ZREpr,ZREpcnt,ZREprw);
					end;
					//messagebox(0,ZREpr.withdrawSum);
				end;
				ZREpr.docCountToSend = StringToLongInt(JSONGet(jsresponse,"data/docCountToSend"));
				//messagebox(0,ZREpr.docCountToSend);
				ZREpr.document_id = JSONGet(jsresponse,"data/document_id");
				ZREpr.firstDocNumber = StringToLongInt(JSONGet(jsresponse,"data/firstDocNumber"));
				ZREpr.lastDocNumber = StringToLongInt(JSONGet(jsresponse,"data/lastDocNumber"));
				ZREpr.reportNumber = StringToLongInt(JSONGet(jsresponse,"data/reportNumber"));
				ZREpr.shiftOpenAtUtc = JSONGet(jsresponse,"data/shiftOpenAtUtc");
				//messagebox(0,ZREpr.shiftOpenAtUtc);
				messagebox(0,"Ок!");
			end;
			
			if(recordstore(ZREpr,true)) then begin
				ZReportReq2(reply,ZREpr.SerNr);
			end;
		end else begin
			if(JSONGet(jsresponse,"code")=="401")then begin
				if(issecond)then begin
					messagebox(0,JSONGet(jsresponse,"message"));
					goto LZReportDsm;
				end else begin
					issecond = true;
					goto LbeginLogin2;
				end;
			end else begin
				messagebox(0,JSONGet(jsresponse,"message"));
				goto LZReportDsm;
			end;
		end;
	end else begin
		messagebox(0,"Связь с кассой нарушена. Проверьте сообщения об ошибках");
		goto LZReportDsm;
	end;	


	LZReportDsm:;
	
	
return;
END;




global updating procedure ZReportHandDsm() // Edit ********************** Ihor Trubachov 24*05*2021
BEGIN
Integer nwn, wn;
record ZRepVc ZRepr;
record IVVc IVr;

	wn = CurWindow;
	getwindowrecord(wn,IVr);
	if(ReadFirstMain(IVr,1,true))then begin
		nwn = OpenWindow("ShiftZReportHandNPTSOClass",1,wn,"","",ZRepr);
	end;
	//messagebox(0,"Okey");

return;
END;

global updating procedure TransactionHistoryDsm() // Edit ********************** Ihor Trubachov 31*05*2021
BEGIN

string 255 host,page,token;
	Area req,reply;
	LongInt port;
	json jsresponse;
	record CassaIDBlock CIDb;
	record UserVc Userr;
	Integer cnt,i,j,cnt2;
	boolean issecond;
	
	token = "7dOF7HlXb/uG2J/FD+GtjA==";
	TransactionHistoryReq(req,token,"2021-05-15 00:00:00","2021-04-15 23:59:59");/////////////////////////////////////////////////////////////
	Delete_File("TransactionHistory/Tr_Hist_" & CurrentUser & ".txt");
	if(!FileExists("TransactionHistory/Tr_Hist_" & CurrentUser & ".txt")) then begin
		CreateFile("TransactionHistory/Tr_Hist_" & CurrentUser & ".txt");
	end;
	writeareatofile(req,"TransactionHistory/Tr_Hist_" & CurrentUser & ".txt",1);

	
	logtext(0,"TransactionHistoryDsm");
	
  host = "10.12.11.11"; 
  page = "/v2"; 
  port = 8989; 
	blockload(CIDb);
	if(blank(CIDb.CassaToken))then begin
		LbeginLoginTransHist:;
		LoginToKassaDsm(false);
		blockload(CIDb);
		if(blank(CIDb.CassaToken))then begin
			messagebox(0,"Залогинтесь в кассу");
			goto LTransactionHistoryDsm;
		end;
	end;
	Userr.Code = CurrentUser;
	if (ReadFirstMain(Userr,1,true)) then begin
		host = Userr.KassaIPAddr;
	end;

	if(nonblank(CIDb.APILogin))then begin
	  	token = CIDb.CassaToken;
	end;
	//


	// TransactionHistoryReq(req,token,"2021-05-15 00:00:00","2021-04-15 23:59:59");/////////////////////////////////////////////////////////////
  
  SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5);

//
//	SetAreaZeroSize(reply);
//	AddFileToArea("TrancHis.txt",reply,false);
//
	// TransactionHistoryAnsw(req);
	jsresponse = ParseJSONArea(reply);
	if(nonblank(JSONGet(jsresponse,"message")) and nonblank(JSONGet(jsresponse,"code")))then begin
		if(JSONGet(jsresponse,"message")=="success" and JSONGet(jsresponse,"code")=="0")then begin
			// TransactionHistoryAnsw(reply);
		end else begin
			if(JSONGet(jsresponse,"code")=="401")then begin
				if(issecond)then begin
					messagebox(0,JSONGet(jsresponse,"message"));
					goto LTransactionHistoryDsm;
				end else begin
					issecond = true;
					goto LbeginLoginTransHist;
				end;
			end else begin
				messagebox(0,JSONGet(jsresponse,"message"));
				goto LTransactionHistoryDsm;
			end;
		end;
	end else begin
		messagebox(0,"Связь с кассой нарушена. Проверьте сообщения об ошибках");
		goto LTransactionHistoryDsm;
	end;	


	LTransactionHistoryDsm:;

return;
END;



global updating procedure ShiftZReportHandPr() // Edit ********************** Ihor Trubachov 27*05*2021
BEGIN

record ZRepVc ZRepr;
Integer wn;

	wn = CurWindow;
	getwindowrecord(wn,ZRepr);
	ServerShiftZReportHandPr(ZRepr);

	CloseWindow(wn);
	MessageBox(0,"Ok");
return;
END;


global updating procedure Fiscal_DepositToKassa()   // by Ira
begin
	DepositToKassaDsm;
return;
end;

global updating procedure Fiscal_Withdraw()   // by Ira
begin
	WithdrawDsm;
return;
end;

global updating procedure Fiscal_CloseShift()   // by Ira
begin
	CloseShiftKassaDsm;
return;
end;


global updating procedure Fiscal_OpenShift()   // by Ira
begin
	OpenShiftKassaDsm;
	messagebox(0,"FiscalOpenShift");
return;
end;

global updating procedure CloseShiftZReport()    // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:34 20.05.2021
begin
	ZReportDsm;
return;
end;

global updating procedure ShiftZReportHand()   // Edit ********************** Ihor Trubachov 24*05*2021
begin
	ZReportHandDsm;
return;
end;

global updating procedure TransactionHistory()   // Edit ********************** Ihor Trubachov 31*05*2021
begin
	TransactionHistoryDsm;
return;
end;





global updating procedure POSButtonsToAllDsm()
begin
	record POSButtonsVc POSBr,POSB2r;
	row POSButtonsVc POSBrw;
	integer rwcnt,oldcomp,i,wn,CompQty,j,curcpm,lastpage;
  record CompaniesBlock Compb;
  row CompaniesBlock Comprw;
  boolean TrHs,foundf;
	
	blockload(Compb);
	curcpm = currentcompany;
	wn = curwindow;
	getwindowrecord(wn,POSBr);
	RA_POSButtonsToAll(POSBr);

return;
end;

global
updating procedure ProceedSendTaxIPV2()
begin
  Integer wn,mwn,rownr,mtrw,i,j,k;
  record IPVc IPr;
  record RcVc RepSpec;
  record UserVc Userr;
  row IPVc IPrw;
  Area req,reply; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 host,page,tstr; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  LongInt port; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  boolean status,isterminal,iscash; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 category, transactionId, parentDocument;
  json jsresponse;
  val cash, terminal, discount,loyalty,bonus,vatsum;
  record IVTaxTrVc IVTaxTr;// Edit ************************** BPI Ukraine - KramarAlexandr - 06, 24 10 2020 y. at 6:39:37 PM
	record PMBlock PMb;
  row PMBlock PMrw;
	area logarea,biglogarea,tmpar1,tmpar2;
	vector val vatperc;
	array string 50 vtags;
	record IVVc IVr;
	record CassaIDBlock CIDb;
	
	blockload(PMb);
	blockload(CIDb);
	wn = curwindow;
	getwindowrecord(wn,RepSpec);
	mwn = motherwindow(wn);
	
	
  IPr.SerNr = RepSpec.long1;
  ReadFirstMain(IPr,1,true);
  
  for(j=0;j<matrowcnt(PMb);j=j+1)begin
		matrowget(PMb,j,PMrw);
		if(PMrw.Code==IPr.PayMode)then begin
			if(PMrw.AccNr=="51")then begin
				isterminal = true;
			end;
			if(PMrw.AccNr=="50")then begin
				iscash = true;
			end;
		end;
	end;
  
  if(RepSpec.flags[1]>-1)then begin
  	matrowget(IPr,RepSpec.flags[1],IPrw);
  	if(IPrw.InvoiceNr>0 and IPrw.InvoiceNr==RepSpec.long2)then begin
  		IVr.SerNr = IPrw.InvoiceNr;
  		if(readfirstmain(IVr,1,true))then begin
  			if(IVr.CurncyCode=="AZN")then begin
  				if(iscash)then begin
  					RepSpec.vals3 = IPrw.InvVal;
  				end;
  				if(isterminal)then begin
  					RepSpec.vals4 = IPrw.InvVal;
  				end;
  				if(IPrw.BankCurncy=="AZN")then begin
  				  if(iscash)then begin
              RepSpec.vals3 = IPrw.BankVal;
            end;
            if(isterminal)then begin
              RepSpec.vals4 = IPrw.BankVal;
            end;
  				end;
  			end else begin
  				if(iscash)then begin
  					RepSpec.vals3 = IPrw.InvVal*IVr.ToRateB1;
  				end;
  				if(isterminal)then begin
  					RepSpec.vals4 = IPrw.InvVal*IVr.ToRateB1;
  				end;
  				if(IPrw.BankCurncy=="AZN")then begin
            if(iscash)then begin
              RepSpec.vals3 = IPrw.BankVal;
            end;
            if(isterminal)then begin
              RepSpec.vals4 = IPrw.BankVal;
            end;
          end;
  			end;
  		end;
  	end;
  end;

  host = "10.10.12.116"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  page = "/"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  port = 8989; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  
    Userr.Code = CurrentUser;
    if (ReadFirstMain(Userr,1,true)) then begin
      host = Userr.KassaIPAddr;
    end;
	cash = 0.0;
	terminal = 0.0;
	discount = 0.0;
	loyalty = 0;
	
	//ProceedCredirRepayment_Remote(req,IPr);
	APIv2SendSale_Remote(CIDb.CassaToken,req,IVr,RepSpec);
  writeareatofile(req,"SendTAXRequest.txt",1);
  
  SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5); // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30

  jsresponse = ParseJSONArea(reply);
	if(nonblank(JSONGet(jsresponse,"code")))then begin
		if(JSONGet(jsresponse,"code")=="0")then begin

		end else begin
			messagebox(0,JSONGet(jsresponse,"message"));
		end;
	end else begin
		messagebox(0,"Связь с кассой нарушена. Проверьте сообщения об ошибках");
	end;
	writeareatofile(reply,"SendTAXResponse.txt",1);
	
		setareazerosize(logarea);
		addtexttoarea(chr(13) & chr(10) & "=========================IPVC " & IPr.SerNr &  "=================================" & chr(13) & chr(10) & "{",logarea);
		addtexttoarea("\"Date\":" & "\"" & currentdate & "\"," & chr(13) & chr(10),logarea);
		addtexttoarea("\"Paymet\":" & "\"" & IPr.SerNr & "\"," & chr(13) & chr(10),logarea);
		addtexttoarea("\"SendData\":" & chr(13) & chr(10),logarea);
		
		setareazerosize(tmpar1);
		insertareabeforearea(logarea,tmpar1);
		insertareabeforearea(biglogarea,tmpar1);
		setareazerosize(biglogarea);
		insertareabeforearea(tmpar1,biglogarea);
		
		writeareatofile(logarea,"FiscalPrinter.log",1);

		setareazerosize(tmpar1);
		insertareabeforearea(req,tmpar1);
		insertareabeforearea(biglogarea,tmpar1);
		setareazerosize(biglogarea);
		insertareabeforearea(tmpar1,biglogarea);
		
		writeareatofile(req,"FiscalPrinter.log",1);
		setareazerosize(logarea);
		addtexttoarea("," & chr(13) & chr(10),logarea);
		addtexttoarea("\"ResponseData\":",logarea);
		
		setareazerosize(tmpar1);
		insertareabeforearea(logarea,tmpar1);
		insertareabeforearea(biglogarea,tmpar1);
		setareazerosize(biglogarea);
		insertareabeforearea(tmpar1,biglogarea);
		
		writeareatofile(logarea,"FiscalPrinter.log",1);
		
		setareazerosize(tmpar1);
		insertareabeforearea(reply,tmpar1);
		insertareabeforearea(biglogarea,tmpar1);
		setareazerosize(biglogarea);
		insertareabeforearea(tmpar1,biglogarea);
		
		writeareatofile(reply,"FiscalPrinter.log",1);
		
		setareazerosize(logarea);
		addtexttoarea("}",logarea);
		
		setareazerosize(tmpar1);
		insertareabeforearea(logarea,tmpar1);
		insertareabeforearea(biglogarea,tmpar1);
		setareazerosize(biglogarea);
		insertareabeforearea(tmpar1,biglogarea);
		
		writeareatofile(logarea,"FiscalPrinter.log",1);
		
		WriteCustomLogOnServer(biglogarea,"FiscalPrinterAllLog.log");
	
	if(nonblank(JSONGet(jsresponse,"short_id")))then begin
		if(RepSpec.flags[1]>-1)then begin
			matrowget(IPr,RepSpec.flags[1],IPrw);
			transactionId=JSONGet(jsresponse,"short_id");
			IPrw.TaxTransactionCode = transactionId;
			IPrw.TaxTransactionDate=CurrentDate;
			parentDocument = JSONGet(jsresponse,"long_id");
			IPrw.TaxParentDocument = parentDocument;
			matrowput(IPr,RepSpec.flags[1],IPrw);  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:16 21.05.2021
		end;
		
		RecordStore(IPr,true);
		putwindowrecord(mwn,IPr);
	end;

  DeselectWindow(wn,true);
  CloseWindow(wn);

  return;
end;



global
updating procedure APIv2SendRollBackDsm()//отмена
begin
  Integer wn,mwn,rownr,mtrw,i,loopcount,quant,sum,rwcnt,j;
  record RcVc RepSpec;
  record IVVc IVr,IV2r;
  record UserVc Userr;
  row IVVc IVrw;
  Area req,reply; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 host,page,tstr; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  LongInt port; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  boolean status; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 category, transactionId,parentDocument;
  json jsresponse;
  val cash,terminal,discount,summary,loyalty,bonus,vatsum;
  array string 50 artCode;
	record IVTaxTrVc IVTaxTr;// Edit ************************** BPI Ukraine - KramarAlexandr - 06, 24 10 2020 y. at 7:01:40 PM
	area logarea,tmpar1,tmpar2,biglogarea;
	record PMBlock PMb;
  row PMBlock PMrw;
	string 255 orTaxTransactionCode,orTaxParentDocument;
	record CassaIDBlock CIDb;
	boolean isnewrec;
	
  wn = CurWindow;
	
  DeselectWindow(wn,true);
	getwindowrecord(wn,RepSpec);
  closewindow(wn);
	if(RepSpec.long1<0)then begin
		goto LAPIv2SendRollBackDsm;
	end;
	
  IVr.SerNr = RepSpec.long1;
  ReadFirstMain(IVr,1,true);
	
  blockload(CIDb);
  if(IVr.SerNr<0)then begin
    goto LAPIv2SendRollBackDsm;
  end;
  
  blockload(PMb);
  host = "10.12.11.11"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  page = "/"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  port = 8989; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  //http://192.168.5.236:8989

  Userr.Code = CurrentUser;
  if (ReadFirstMain(Userr,1,true)) then begin
    host = Userr.KassaIPAddr;
  end;

  APIv2RollBack_Remote(CIDb.CassaToken,req,IVr.TaxParentDocument);
  writeareatofile(req,"SendTAXRequest.txt",1);

  SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5); // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30

  jsresponse = ParseJSONArea(reply);
  writeareatofile(reply,"SendTAXResponse.txt",1);
  SendFiscalLogToServer(IVr.SerNr,"RollBack",req,reply);
  if(nonblank(JSONGet(jsresponse,"code")))then begin
    if(JSONGet(jsresponse,"code")=="0")then begin

    end else begin
      messagebox(0,JSONGet(jsresponse,"message"));
      goto LAPIv2SendRollBackDsm;
    end;
  end else begin
    messagebox(0,"Связь с кассой нарушена. Проверьте сообщения об ошибках");
    goto LAPIv2SendRollBackDsm;
  end;
	
LAPIv2SendRollBackDsm:;
 
  return;
end;


global
updating procedure APIv2SendRollBackIPDsm()//отмена
begin
  Integer wn,mwn,rownr,mtrw,i,loopcount,quant,sum,rwcnt,j;
  record RcVc RepSpec;
  record IPVc IPr;
	row IPVc IPrw;
  record UserVc Userr;
  Area req,reply; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 host,page,tstr; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  LongInt port; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  boolean status; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 category, transactionId,parentDocument;
  json jsresponse;
  val cash,terminal,discount,summary,loyalty,bonus,vatsum;
  array string 50 artCode;
	record IVTaxTrVc IVTaxTr;// Edit ************************** BPI Ukraine - KramarAlexandr - 06, 24 10 2020 y. at 7:01:40 PM
	area logarea,tmpar1,tmpar2,biglogarea;
	record PMBlock PMb;
  row PMBlock PMrw;
	string 255 orTaxTransactionCode,orTaxParentDocument;
	record CassaIDBlock CIDb;
	boolean isnewrec;
	
  wn = CurWindow;
	
  DeselectWindow(wn,true);
	getwindowrecord(wn,RepSpec);
	
  IPr.SerNr = RepSpec.long1;
  ReadFirstMain(IPr,1,true);
  
  if(RepSpec.flags[1]>-1)then begin
  	matrowget(IPr,RepSpec.flags[1],IPrw);
  end;
	
  blockload(CIDb);
  blockload(PMb);
  host = "10.12.11.11"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  page = "/"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  port = 8989; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  //http://192.168.5.236:8989

  Userr.Code = CurrentUser;
  if (ReadFirstMain(Userr,1,true)) then begin
    host = Userr.KassaIPAddr;
  end;

  APIv2RollBack_Remote(CIDb.CassaToken,req,IPrw.TaxParentDocument);
  writeareatofile(req,"SendTAXRequest.txt",1);

  SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5); // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30

  jsresponse = ParseJSONArea(reply);
  writeareatofile(reply,"SendTAXResponse.txt",1);
  SendFiscalLogToServer(IPr.SerNr,"RollBackIP",req,reply);
  if(nonblank(JSONGet(jsresponse,"code")))then begin
    if(JSONGet(jsresponse,"code")=="0")then begin

    end else begin
      messagebox(0,JSONGet(jsresponse,"message"));
      goto LAPIv2SendRollBackIPDsm;
    end;
  end else begin
    messagebox(0,"Связь с кассой нарушена. Проверьте сообщения об ошибках");
    goto LAPIv2SendRollBackIPDsm;
  end;
	
LAPIv2SendRollBackIPDsm:;
	closewindow(wn);
  return;
end;


