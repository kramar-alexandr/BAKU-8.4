remote procedure RemoteAPI2Login(var area,string,string);// Edit ************************** BPI Ukraine - KramarAlexandr - 03, 20 01 2021 y. at 11:43:00 AM
remote procedure RemoteAPI2OpenShift(record CassaIDBlock,var area);// Edit ************************** BPI Ukraine - KramarAlexandr - 03, 20 01 2021 y. at 11:43:00 AM
remote procedure APIv2SendSale_Remote(string,var area, record IVVc);
remote procedure APIv2SendReturnAuto_Remote(string,var area,record IVVc,record IVVc);
remote procedure APIv2Deposit_Remote(var area, val);  //  by Ira
remote procedure APIv2Withdraw_Remote(var area, val);  //  by Ira
remote procedure WriteCustomLogOnServer(area,string);
remote function string 255 NormalizeStrToJson (string);
external procedure IVDClass_RefreshStringList(Integer,record IVVc);
external function LongInt POSNETHexToLong(string);

SetLangMode(LangRussian,"RUS",0);

global
function string 255 ChekUnicode(string str)
begin
  string 10 c, c1;
  string 10 ucode;
  string 255 res,tmp; 
  integer slen,i,int;
  longint lmes;
  
  res = str;
  i=0;
  slen = Len(res);
	
	if(slen>0)then begin
		for(i=0;i<slen;i=i+1)begin
			c = mid(res,i,2);
			if(c==(chr(92) & "u"))then begin
				ucode = mid(res,i,6);
				lmes = POSNETHexToLong(ucode);
				int = lmes;
				res = left(res,i) & uchr(int) & right(res, (len(res)-(i+6)));
				slen = Len(res);
			end;
		end;
	end;
		
  ChekUnicode = res;
  return;
end;


global updating procedure Fiscal_Login()   // by Ira
begin
	messagebox(0,"FiscalLogin");
return;
end;

global updating procedure Fiscal_Sale()   // by Ira
begin
	Integer wn,nwn,i;
	record IVVc IVr;
	record RcVc RepSpec;
	wn = CurWindow;
	getwindowrecord(wn,IVr);
	if(ReadFirstMain(IVr,1,true))then begin
		if(IVr.OKFlag==1)then begin
			RepSpec.long1 = IVr.SerNr;
			nwn = OpenWindow("APIv2SendSaleVClass",1,wn,"","",RepSpec);
		end else begin
			messagebox(0,"Печать доступнатолько из утвержденной сч/ф");
		end;
	end;
return;
end;

global updating procedure Fiscal_OpenShift()   // by Ira
begin
	messagebox(0,"FiscalOpenShift");
return;
end;

global updating procedure Fiscal_AutoReturn()  // by Ira
begin
	record RcVc RepSpec;
	
	
	messagebox(0,"FiscalAutoReturn");
return;
end;




global procedure SendFiscalLogToServer(string docnr,string doctype,area req,area reply)
begin
	area logarea,biglogarea,tmpar1,tmpar2;
	
	setareazerosize(logarea);
	addtexttoarea(chr(13) & chr(10) & "=========================" & doctype & "=" & docnr & "================================" & chr(13) & chr(10) & "{",logarea);
	addtexttoarea("\"Date\":" & "\"" & currentdate & "\"," & chr(13) & chr(10),logarea);
	addtexttoarea("\"SendData\":" & chr(13) & chr(10),logarea);
	
	setareazerosize(tmpar1);
	insertareabeforearea(logarea,tmpar1);
	insertareabeforearea(biglogarea,tmpar1);
	setareazerosize(biglogarea);
	insertareabeforearea(tmpar1,biglogarea);
	
	writeareatofile(logarea,"FiscalPrinter.log",1);

	setareazerosize(tmpar1);
	insertareabeforearea(req,tmpar1);
	insertareabeforearea(biglogarea,tmpar1);
	setareazerosize(biglogarea);
	insertareabeforearea(tmpar1,biglogarea);
	
	writeareatofile(req,"FiscalPrinter.log",1);
	setareazerosize(logarea);
	addtexttoarea("," & chr(13) & chr(10),logarea);
	addtexttoarea("\"ResponseData\":",logarea);
	
	setareazerosize(tmpar1);
	insertareabeforearea(logarea,tmpar1);
	insertareabeforearea(biglogarea,tmpar1);
	setareazerosize(biglogarea);
	insertareabeforearea(tmpar1,biglogarea);
	
	writeareatofile(logarea,"FiscalPrinter.log",1);
	
	setareazerosize(tmpar1);
	insertareabeforearea(reply,tmpar1);
	insertareabeforearea(biglogarea,tmpar1);
	setareazerosize(biglogarea);
	insertareabeforearea(tmpar1,biglogarea);
	
	writeareatofile(reply,"FiscalPrinter.log",1);
	
	
	setareazerosize(logarea);
	addtexttoarea("}",logarea);
	
	setareazerosize(tmpar1);
	insertareabeforearea(logarea,tmpar1);
	insertareabeforearea(biglogarea,tmpar1);
	setareazerosize(biglogarea);
	insertareabeforearea(tmpar1,biglogarea);
	
	writeareatofile(logarea,"FiscalPrinter.log",1);
	
	WriteCustomLogOnServer(biglogarea,"FiscalPrinterAllLog.log");

return;
end;

global updating procedure LoginToKassaDsm()
begin
	Integer wn,mwn,rownr,mtrw,i,j,k;
  record RcVc RepSpec;
  record IPVc IPr;
  record UserVc Userr;
  row IPVc IPrw;
  Area req,reply; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 host,page,tstr; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  LongInt port; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  boolean status; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 category, transactionId, parentDocument;
  json jsresponse;
  val cash, terminal, discount,loyalty,bonus,vatsum;
  record IVTaxTrVc IVTaxTr;// Edit ************************** BPI Ukraine - KramarAlexandr - 06, 24 10 2020 y. at 6:39:37 PM
	record PMBlock PMb;
  row PMBlock PMrw;
	area logarea,biglogarea,tmpar1,tmpar2;
	vector val vatperc;
	array string 50 vtags;
	record CassaIDBlock CIDb;
	
	logtext(0,"LoginToKassaDsm");
	
  host = "10.12.11.11"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  page = "/v2"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  port = 8989; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
	
	Userr.Code = CurrentUser;
	if (ReadFirstMain(Userr,1,true)) then begin
		host = Userr.KassaIPAddr;
	end;
	
	RemoteAPI2Login(req,"SuperApi","123");	
	SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5); // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  jsresponse = ParseJSONArea(reply);
	writeareatofile(reply,"LogitReply.txt",1);
	//access_token": "7dOF7HlXb/uG2J/FD+GtjA==", "code": 1,
	if(nonblank(JSONGet(jsresponse,"access_token")))then begin
		blockload(CIDb);
		CIDb.CassaToken = urldecode(ChekUnicode(JSONGet(jsresponse,"access_token")));
		blockstore(CIDb);
	end;
	
	SendFiscalLogToServer("","LOGIN",req,reply);
	
return;
end;

global updating procedure DepositToKassaDsm()   //  by Ira
begin
	Integer wn,nwn;
	record RcVc RepSpec;
	wn = CurWindow;
	nwn = OpenWindow("DepositToKassaVClass",1,wn,"","",RepSpec);
return;

return;
end;


global updating procedure WithdrawDsm()   //  by Ira
begin
	Integer wn,nwn;
	record RcVc RepSpec;
	wn = CurWindow;
	nwn = OpenWindow("WithdrawVClass",1,wn,"","",RepSpec);
return;

return;
end;


global
updating procedure APIv2Withdraw()   //  by Ira
begin
  Integer wn,mwn;
  record RcVc RepSpec;
  record IVVc IVr;
  row IVVc IVrw;
  Area req,reply; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 host,page; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  LongInt port; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  json jsresponse;
	record CassaIDBlock CIDb;
	
  wn = CurWindow;
	deselectwindow(wn,true);
	getwindowrecord(wn, RepSpec);
  
  host = "10.10.12.116"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  page = "/v2"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  port = 8989; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
	
	APIv2Withdraw_Remote(req, RepSpec.vals0);
  writeareatofile(req,"1.txt",1);
  
  SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5); // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30

  jsresponse = ParseJSONArea(reply);
	writeareatofile(reply,"2.txt",1);
	
	closewindow(wn);
  return;
end;


global
updating procedure APIv2Deposit()   //  by Ira
begin
  Integer wn,mwn;
  record RcVc RepSpec;
  record IVVc IVr;
  row IVVc IVrw;
  Area req,reply; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 host,page; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  LongInt port; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  json jsresponse;
	record CassaIDBlock CIDb;
	
  wn = CurWindow;
	deselectwindow(wn,true);
	getwindowrecord(wn, RepSpec);
  
  host = "10.10.12.116"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  page = "/v2"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  port = 8989; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30

	APIv2Deposit_Remote(req, RepSpec.vals0);
  writeareatofile(req,"1.txt",1);
  
  SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5); // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30

  jsresponse = ParseJSONArea(reply);
	writeareatofile(reply,"2.txt",1);
	
	closewindow(wn);
  return;
end;



global updating procedure OpenShiftKassaDsm()
begin
	Integer wn,mwn,rownr,mtrw,i,j,k;
  record RcVc RepSpec;
  record IPVc IPr;
  record UserVc Userr;
  row IPVc IPrw;
  Area req,reply; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 host,page,tstr; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  LongInt port; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  boolean status; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 category, transactionId, parentDocument;
  json jsresponse;
  val cash, terminal, discount,loyalty,bonus,vatsum;
  record IVTaxTrVc IVTaxTr;// Edit ************************** BPI Ukraine - KramarAlexandr - 06, 24 10 2020 y. at 6:39:37 PM
	record PMBlock PMb;
  row PMBlock PMrw;
	area logarea,biglogarea,tmpar1,tmpar2;
	vector val vatperc;
	array string 50 vtags;
	record CassaIDBlock CIDb;
	
	logtext(0,"LoginToKassaDsm");
	
  host = "10.12.11.11"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  page = "/v2"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  port = 8989; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
	
	Userr.Code = CurrentUser;
	if (ReadFirstMain(Userr,1,true)) then begin
		host = Userr.KassaIPAddr;
	end;
	
	blockload(CIDb);
	RemoteAPI2OpenShift(CIDb,req);	
	SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5); // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  jsresponse = ParseJSONArea(reply);
	SendFiscalLogToServer("","OPEN_SHIFT",req,reply);
	
return;
end;

global
updating procedure APIv2SendSaleDsm()
begin
  Integer wn,mwn,rownr,mtrw,i,j,k;
  record RcVc RepSpec;
  record IVVc IVr;
  record UserVc Userr;
  row IVVc IVrw;
  Area req,reply; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 host,page,tstr; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  LongInt port; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  boolean status; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 category, transactionId, parentDocument;
  json jsresponse;
  val cash, terminal, discount,loyalty,bonus,vatsum;
  record IVTaxTrVc IVTaxTr;// Edit ************************** BPI Ukraine - KramarAlexandr - 06, 24 10 2020 y. at 6:39:37 PM
	record PMBlock PMb;
  row PMBlock PMrw;
	area logarea,biglogarea,tmpar1,tmpar2;
	vector val vatperc;
	array string 50 vtags;
	boolean isnewrec;
	record CassaIDBlock CIDb;
	
  wn = CurWindow;
  if(windowstate(wn)!=0)then begin
  	messagebox(0,"Сначала сохраните сч/ф");
  	goto LAPIv2SendSaleDsm;
  end;
	getwindowrecord(wn,IVr);
	if(IVr.OKFlag==0)then begin
		messagebox(0,"Сначала завершите сч/ф");
  	goto LAPIv2SendSaleDsm;
	end;
	blockload(CIDb);
	if(blank(CIDb.CassaToken))then begin
		messagebox(0,"Залогинтесь в кассу");
		goto LAPIv2SendSaleDsm;
	end;
	
  blockload(PMb);
  
  host = "10.10.12.116"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  page = "/v2"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  port = 8989; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  //http://192.168.5.236:8989
  
	Userr.Code = CurrentUser;
	if (ReadFirstMain(Userr,1,true)) then begin
		host = Userr.KassaIPAddr;
	end;
	
	APIv2SendSale_Remote(CIDb.CassaToken,req,IVr);
  writeareatofile(req,"SendTAXRequest.txt",1);
  
  SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5); // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30

  jsresponse = ParseJSONArea(reply);
	
	writeareatofile(reply,"SendTAXResponse.txt",1);
	
		SendFiscalLogToServer(IVr.SerNr,"SALE",req,reply);
	
	
	
		if(nonblank(JSONGet(jsresponse,"short_id")))then begin
			transactionId = JSONGet(jsresponse,"short_id");
			IVr.TaxTransactionCode = transactionId;
			IVr.TaxTransactionDate=CurrentDate;
			parentDocument = JSONGet(jsresponse,"long_id");
			IVr.TaxParentDocument = parentDocument;
		
			IVTaxTr.SerNr = IVr.SerNr;// Edit ************************** BPI Ukraine - KramarAlexandr - 06, 24 10 2020 y. at 6:41:19 PM
			if(readfirstmain(IVTaxTr,1,true))then begin
				IVTaxTr.TaxTransactionCode = IVr.TaxTransactionCode;
				
				IVTaxTr.document_number = JSONGet(jsresponse,"document_number");
				IVTaxTr.long_id = JSONGet(jsresponse,"long_id");
				IVTaxTr.short_id = JSONGet(jsresponse,"short_id");
				IVTaxTr.shift_document_nubber = JSONGet(jsresponse,"shift_document_number");
				recordstore(IVTaxTr,true);
			end else begin
				IVTaxTr.SerNr = IVr.SerNr;
				IVTaxTr.TaxTransactionCode = IVr.TaxTransactionCode;
				
				IVTaxTr.document_number = JSONGet(jsresponse,"document_number");
				IVTaxTr.long_id = JSONGet(jsresponse,"long_id");
				IVTaxTr.short_id = JSONGet(jsresponse,"short_id");
				IVTaxTr.shift_document_nubber = JSONGet(jsresponse,"shift_document_number");
				 recordstore(IVTaxTr,true);
			end;
		
			RecordStore(IVr,true);
			if(isnewrec==false)then begin
				putwindowrecord(mwn,IVr);
				if(currentuser!="SA")then begin
					IVDClass_RefreshStringList(mwn,IVr);
				end;
			end;
		end;

LAPIv2SendSaleDsm:;
  return;
end;

global updating procedure APIv2SendSale()
begin
	record RcVc RepSpec;
	integer wn,mwn;
	
	wn = curwindow;
	mwn = motherwindow(wn);
	closewindow(wn);
	selectwindow(mwn);
	APIv2SendSaleDsm;
	
return;
end;


global
updating procedure APIv2SendReturnAutoDsm()//Новая процедура возврата
begin
  Integer wn,mwn,rownr,mtrw,i,loopcount,quant,sum,rwcnt,j;
  record RcVc RepSpec;
  record IVVc IVr,IV2r;
  record UserVc Userr;
  row IVVc IVrw;
  Area req,reply; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 host,page,tstr; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  LongInt port; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  boolean status; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
  string 255 category, transactionId,parentDocument;
  json jsresponse;
  val cash,terminal,discount,summary,loyalty,bonus,vatsum;
  array string 50 artCode;
	record IVTaxTrVc IVTaxTr;// Edit ************************** BPI Ukraine - KramarAlexandr - 06, 24 10 2020 y. at 7:01:40 PM
	area logarea,tmpar1,tmpar2,biglogarea;
	record PMBlock PMb;
  row PMBlock PMrw;
	string 255 orTaxTransactionCode,orTaxParentDocument;
	record CassaIDBlock CIDb;
	boolean isnewrec;
	
  wn = CurWindow;
  DeselectWindow(wn,true);
  
  getwindowrecord(wn,IVr);
  rwcnt = matrowcnt(IVr);
  for(i=0;i<rwcnt;i=i+1)begin
  	matrowget(IVr,i,IVrw);
  	if(IVrw.stp==kInvoiceRowTypeNormal)then begin
  		if(IVrw.Quant>=0 and IVr.InvType==kInvoiceTypeNormal)then begin
				messagebox(0,"При возврате все кол-ва товаров в сч/ф должны быть < 0");
				goto LAPIv2SendReturnAutoDsm;
  		end;
  	end;
  	if(IVr.InvType==kInvoiceTypeCredit)then begin
  		IV2r.SerNr = IVr.CredInv;
  		if(readfirstmain(IV2r,1,true))then begin
  			if(readfirstmain(IV2r,1,true))then begin
					if(blank(IV2r.TaxTransactionCode) or blank(IV2r.TaxParentDocument))then begin
						messagebox(0,"Сч/ф продажи не содержит данных по чеку. Создайте возврат через ручной ввод фискального номера");
						goto LAPIv2SendReturnAutoDsm;
					end else begin
						if(blank(orTaxTransactionCode) and blank(orTaxParentDocument))then begin
							orTaxTransactionCode = IV2r.TaxTransactionCode;
							orTaxParentDocument = IV2r.TaxParentDocument;
						end else begin
							if(orTaxTransactionCode!=IV2r.TaxTransactionCode)then begin
								messagebox(0,"В одном чеке можно вернуть только товары проданные в одном чеке. Проверьте возврат");
								goto LAPIv2SendReturnAutoDsm;
							end;
						end;
					end;
				end else begin
					messagebox(0,"Оригинальная сч/ф продажи не найдена");
					goto LAPIv2SendReturnAutoDsm;
				end;
  		end;
  	end else begin
			if(IVrw.stp==kInvoiceRowTypeNormal)then begin
				if(IVrw.Quant<0)then begin
					if(IVrw.IVForRetNr<0)then begin
						messagebox(0,"Возвращаемый товар не связан с сч/ф продажи");
						goto LAPIv2SendReturnAutoDsm;
					end else begin
						IV2r.SerNr = IVrw.IVForRetNr;
						if(readfirstmain(IV2r,1,true))then begin
							if(blank(IV2r.TaxTransactionCode) or blank(IV2r.TaxParentDocument))then begin
								messagebox(0,"Сч/ф продажи не содержит данных по чеку. Создайте возврат через ручной ввод фискального номера");
								goto LAPIv2SendReturnAutoDsm;
							end else begin
								if(blank(orTaxTransactionCode) and blank(orTaxParentDocument))then begin
									orTaxTransactionCode = IV2r.TaxTransactionCode;
									orTaxParentDocument = IV2r.TaxParentDocument;
								end else begin
									if(orTaxTransactionCode!=IV2r.TaxTransactionCode)then begin
										messagebox(0,"В одном чеке можно вернуть только товары проданные в одном чеке. Проверьте возврат");
										goto LAPIv2SendReturnAutoDsm;
									end;
								end;
							end;
						end else begin
							messagebox(0,"Оригинальная сч/ф продажи не найдена");
							goto LAPIv2SendReturnAutoDsm;
						end;
					end;
				end;
			end;
  	end;
  end;

  if(true)then begin
		if(true)then begin	
			blockload(CIDb);
			if(IVr.SerNr<0) then begin
				goto LAPIv2SendReturnAutoDsm;
			end;
			blockload(PMb);
			host = "10.12.11.11"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
			page = "/"; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
			port = 8989; // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30
			//http://192.168.5.236:8989
	
			Userr.Code = CurrentUser;
			if (ReadFirstMain(Userr,1,true)) then begin
					host = Userr.KassaIPAddr;
			end;

			APIv2SendReturnAuto_Remote(CIDb.CassaToken,req,IVr,IV2r);
			writeareatofile(req,"SendTAXRequest.txt",1);
	
			SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5); // Edit ************************** irkan - Wednesday, 21 January 2019 16:44:30

			jsresponse = ParseJSONArea(reply);
	
			writeareatofile(reply,"SendTAXResponse.txt",1);
			SendFiscalLogToServer(IVr.SerNr,"RETURN",req,reply);
			/*if(nonblank(JSONGet(jsresponse,"short_id")))then begin
				transactionId = JSONGet(jsresponse,"short_id");
				IVr.TaxTransactionCode = transactionId;
				IVr.TaxTransactionDate=CurrentDate;
				parentDocument = JSONGet(jsresponse,"long_id");
				IVr.TaxParentDocument = parentDocument;
	
				IVTaxTr.SerNr = IVr.SerNr;// Edit ************************** BPI Ukraine - KramarAlexandr - 06, 24 10 2020 y. at 6:41:19 PM
				if(readfirstmain(IVTaxTr,1,true))then begin
					IVTaxTr.TaxTransactionCode = IVr.TaxTransactionCode;
			
					IVTaxTr.document_number = JSONGet(jsresponse,"document_number");
					IVTaxTr.long_id = JSONGet(jsresponse,"long_id");
					IVTaxTr.short_id = JSONGet(jsresponse,"short_id");
					IVTaxTr.shift_document_nubber = JSONGet(jsresponse,"shift_document_number");
					recordstore(IVTaxTr,true);
				end else begin
					IVTaxTr.SerNr = IVr.SerNr;
					IVTaxTr.TaxTransactionCode = IVr.TaxTransactionCode;
			
					IVTaxTr.document_number = JSONGet(jsresponse,"document_number");
					IVTaxTr.long_id = JSONGet(jsresponse,"long_id");
					IVTaxTr.short_id = JSONGet(jsresponse,"short_id");
					IVTaxTr.shift_document_nubber = JSONGet(jsresponse,"shift_document_number");
					 recordstore(IVTaxTr,true);
				end;
	
				RecordStore(IVr,true);
				if(isnewrec==false)then begin
					putwindowrecord(mwn,IVr);
					if(currentuser!="SA")then begin
						IVDClass_RefreshStringList(mwn,IVr);
					end;
				end;
			end;*/
		end else begin
		end;
	end else begin
	end;
	
LAPIv2SendReturnAutoDsm:;
 
  return;
end;