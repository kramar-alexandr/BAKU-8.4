//server-only
external procedure ExtractObj(string,var Integer,var string); //Edit***************************Sasha2,11:15 05.11.2015


global
function LongInt DiCheckBlockCheck(var record DiCheckBlock DiCheckr,record DiCheckBlock DiCheck2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  row DiCheckBlock DiCheckrw;
  record CTypeVc CTyper;
  Integer insertmode,updatemode,i,rwcnt,pos;
  string 255 types;
  string 10 curtype,prevtype;
    
  res = 0;
  insertmode = 1;//Rs_insert
  updatemode = 2;//Rs_update
  
  rwcnt = MatRowCnt(DiCheckr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(DiCheckr,i,DiCheckrw);
    /*if (blank(DiCheckrw.DiCode) and NonBlank(DiCheckrw.DiType)) then begin
      RecordCheckError(1854,"",i,"DiCode");      
      res = -1;
      goto LDiCheckBlockCheck;
    end;
    if (nonblank(DiCheckrw.DiCode) and Blank(DiCheckrw.DiType)) then begin
      RecordCheckError(1854,"",i,"DiType");      
      res = -1;
      goto LDiCheckBlockCheck;
    end;*/
    pos = 0;
    types = "";
    ExtractObj(DiCheckrw.DiType,pos,curtype);
    while (NonBlank(curtype)) begin
      if (setinset(curtype,types) /*and prevtype!=curtype*/) then begin
        RecordCheckError(-1,": Types should not repeat",i,"DiType");  
        //RecordCheckError(-1,": Types should be grouped",i,"DiType");      
        res = -1;
        goto LDiCheckBlockCheck;
      end else begin
        CTyper.Code = curtype;
        if (!ReadFirstMain(CTyper,1,true)) then begin
          RecordCheckError(20098,"",i,"DiType");      
          res = -1;
          goto LDiCheckBlockCheck;
        end;
        if (Blank(types)) then begin
          types = curtype;
        end else begin
          types = types & "," & curtype;
        end;
        prevtype = curtype;
      end;
      ExtractObj(DiCheckrw.DiType,pos,curtype);
    end;
    
  end;

LDiCheckBlockCheck:;  
  DiCheckBlockCheck = res;
  RETURN;
END;

