external function longint DateDiff(date,date);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external procedure Base1ToBase2(var val,Date,var val);
external function string 255 BC128(string);
external function string 255 SerialNrBC128(string);
external function val MulRateToBase2(var string,val,val,val,val,val,val,roundmode);
external function val FindVAT(string,val,Integer,Integer);
external procedure BCEAN(string,var string);
external procedure BC39(string,var string);
external procedure ItemBCEAN(string,var string);
external procedure ItemBCEAN13(string,var string);
external procedure ItemBC39(string,var string);
external procedure GetFullCurncyRateText(Boolean,var string,val,val,val,val,val);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external procedure CommonDocumentFields(record RcVc);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external procedure GetLangNr(string,var record LangNrVc);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);//nk
external function Boolean SetInSet2(string,string);
external function roundmode SetRoundModeD(Integer);
external procedure CreateEAN128(var string);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);
remote updating procedure Handle_Zebra_Printing(record RcVc,var area,var integer,string,record ZebraPrinterBlock); //Edit***************************Sasha2,17:01 08.07.2015
remote function boolean CompanyIsJWLikeCompany(Integer);
external function boolean CheckIfBarcodeIsDigits(string);
external procedure NextM4Number(string,var string);
remote function Boolean GetTempItemPrice(var val,string,var string, date,var string); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:04 19.06.2019
external procedure StockInAllCompRn(record RcVc);

updating procedure CheckBarcodeValue(var record INVc INr,var string bcode)
begin
  Boolean proceedf;
  record INVc IN2r,oldINr;
  string 20 barcodenr;
        
    bcode = INr.Code;
    if(nonblank(INr.BarCode))then begin
    	bcode = INr.BarCode;
    	if(len(INr.BarCode)<=len(INr.Code))then begin
    		bcode = INr.BarCode;
    	end;
    end;
    proceedf = !CheckIfBarcodeIsDigits(bcode);
    if (proceedf and len(bcode)<=12) then begin
      goto LCheckBarcodeValue;
    end;
    if (proceedf and Nonblank(INr.BarCode) and len(bcode)>len(INr.BarCode)) then begin
      bcode = INr.BarCode;
      proceedf = !CheckIfBarcodeIsDigits(bcode);
    end;
    if (proceedf and len(bcode)<=12) then begin
      goto LCheckBarcodeValue;
    end; 
    if (proceedf and Nonblank(INr.AlternativeCode) and len(bcode)>len(INr.AlternativeCode)) then begin
      bcode = INr.AlternativeCode;
      proceedf = !CheckIfBarcodeIsDigits(bcode);
    end;
    if (proceedf and blank(INr.AlternativeCode) and NonBlank(INr.BarCode)) then begin
      INr.AlternativeCode = INr.BarCode;
      INr.BarCode = "";
    end;
    
    if(INr.BarCode==INr.AlternativeCode)then begin
    	INr.BarCode = "";
    end;
    if(INr.BarCode==INr.Code)then begin
    	INr.BarCode = "";
    end;
    bcode = INr.BarCode;
    /*if (proceedf and blank(INr.BarCode) and len(bcode)>12) then begin
      IN2r.BarCode = "IN_BC999999";
      if (ReadLastKey("BarCode",IN2r,1,false)) then begin
        if (mid(IN2r.BarCode,0,5)=="IN_BC" and len(IN2r.BarCode)==11) then begin
          if (IN2r.BarCode=="IN_BC999999") then begin
            goto LCheckBarcodeValue;
          end;
  LCheckBarcodeValueRepeat:;        
          NextM4Number(IN2r.BarCode,barcodenr);
          IN2r.Code = barcodenr;
          if (ReadFirstmain(IN2r,1,true)) then begin
            if (IN2r.Code=="IN_BC999999") then begin
              goto LCheckBarcodeValue;
            end;
            goto LCheckBarcodeValueRepeat;
          end;
          IN2r.AlternativeCode = barcodenr;
          if (ReadFirstKey("AlternativeCode",IN2r,1,true)) then begin
            if (IN2r.AlternativeCode=="IN_BC999999") then begin
              goto LCheckBarcodeValue;
            end;
            goto LCheckBarcodeValueRepeat;
          end;
        end else begin
          barcodenr = "IN_BC000001";
          IN2r.BarCode = "IN_BC000001";
          if (ReadFirstKey("BarCode",IN2r,1,true)) then begin
            goto LCheckBarcodeValue;
          end;
        end;
        if (nonblank(barcodenr) and barcodenr!="1") then begin
        	recordcopy(oldINr,INr);
          INr.BarCode = barcodenr;
          Logtext(0,"INr.Code " & INr.Code);
          Logtext(0,"INr.UUID " & INr.UUID);
          //RECORDupdate(oldINr,INr,false);
          bcode = barcodenr;
        end;
      end;
    end;*/
  
  LCheckBarcodeValue:;
    
  return;
end;

global
updating procedure PrintINinStockLabel(var record INVc INr,record DocVc Docr)
begin
	integer rwcnt,i;
	string 200 tstr;
	row DocVc Docrw;
	record PLVc PLr;// Edit ************************** Tuesday, 1 April 2014 13:12:18
	record PLDefVc PLDr;// Edit ************************** Tuesday, 1 April 2014 13:17:21
	record BaseCurBlock BCb;// Edit ************************** Tuesday, 1 April 2014 13:17:21
  val fr,to1,to2,br1,br2;// Edit ************************** Friday, 17 April 2015 18:53:45
  val price;
  roundmode rnd;
  string 5 cur;
  string 255 barcode;
  record TemporaryPricesVc tempPLVc;
  val newprice;
  string 10 newcur,obj;
	record BPIBrandVc BBr;
  
  
  
  if(len(INr.Code)>12)then begin
		Logtext(0,"PrintINinStockLabel INr.UUID " & INr.UUID);
		//CheckBarcodeValue(INr,barcode);
  end;
  barcode = INr.BarCode;// Edit ************************** BPI Ukraine - KramarAlexandr - Wednesday, 12 September 2018 13:38:51
  OUTFORMFIELD("F_ARTNR",INr.Code);
  OUTFORMFIELD("F_ARTNR2",INr.Code);
	if (FIELDINFORM("F_MYARTCODE128")) then begin
		tstr = INr.Code;
		if(nonblank(barcode) and len(barcode)<len(INr.Code))then begin
			tstr = barcode;
		end;
		CreateEAN128(tstr);
    OUTFORMFIELD("F_MYARTCODE128",tstr);// Edit ************************** Friday, 28 March 2014 17:01:14
  end; 
	if (FIELDINFORM("F_MYRETAILPRICE")) then begin
	  PLr.PLCode = "RRP";
	  PLr.ArtCode = INr.Code;
	  if(readfirstmain(PLr,2,true))then begin
			OUTFORMFIELD("F_MYRETAILPRICE",PLr.ExVatPrice);// Edit ************************** Tuesday, 1 April 2014 13:15:55
	  end;
	end;
	
	if(FIELDINFORM("F_MYRETAILPRICEAZN")) then begin
		
	  price = blankval;
	  PLr.PLCode = "RRP";
	  PLr.ArtCode = INr.Code;
	  if(readfirstmain(PLr,2,true))then begin
	  	blockload(BCb);
	  	PLDr.Code = "RRP";
			cur = "";
			readfirstmain(PLDr,1,true);
			cur = PLDr.CurncyCode;
			if(blank(cur))then begin
				cur = BCb.BaseCur1;
			end;
			if(nonblank(PLr.CurncyCode) and PLr.CurncyCode!=cur)then begin
				cur = PLr.CurncyCode;
			end;
			rnd = DefaultValRoundoff;
			rnd.decimals = 0;
			rnd.mode = kRoundingModeHalfUp;
			/*if(CompanyIsJWLikeCompany(currentcompany))then begin// Edit ************************** Friday, 20 October 2017 11:18:02
				rnd.mode = kRoundingModeHalfDown;
				rnd.step = kRoundingStep5;
			end;*/
			
			if(GetTempItemPrice(newprice,INr.Code,newcur,currentdate,obj))then begin// Edit ************************** BPI Ukraine - KramarAlexandr - 01, 01 07 2019 y. at 11:15:47 AM
				price = newprice;
				cur = newcur;
			end;
			
			if(cur!=BCb.BaseCur1)then begin
				GetFullCurncyRate(cur,CurrentDate,fr,to1,to2,br1,br2);// Edit ************************** Monday, 25 March 2013 17:43:28
				price = MulRateToBase1(cur,PLr.ExVatPrice,fr,to1,to2,br1,br2,rnd);
			end else begin
				price = PLr.ExVatPrice;
				if(newprice!=0)then begin
					price = newprice;
				end;
			end;
			OUTFORMFIELD("F_MYRETAILPRICEAZN",price & " AZN");// Edit ************************** Tuesday, 1 April 2014 13:15:55
	  end;
	end;
	
	if(FIELDINFORM("F_ALTBRANDCODE")) then begin
		if(left(INr.Code,3)=="IN_") then begin
			BBr.Code = INr.BPIBrand;
			if(ReadFirstMain(BBr,1,true)) then begin
				OUTFORMFIELD("F_ALTBRANDCODE",INr.AlternativeCode & " " & BBr.Name);// Edit ************************** Tuesday, 1 April 2014 13:15:55
			end;
		end;
	end;
	
	if(FIELDINFORM("F_")) then begin
		
	  price = blankval;
	  PLr.PLCode = "RRP";
	  PLr.ArtCode = INr.Code;
	  if(readfirstmain(PLr,2,true))then begin
	  	blockload(BCb);
	  	PLDr.Code = "RRP";
			cur = "";
			readfirstmain(PLDr,1,true);
			cur = PLDr.CurncyCode;
			if(blank(cur))then begin
				cur = BCb.BaseCur1;
			end;
			if(nonblank(PLr.CurncyCode) and PLr.CurncyCode!=cur)then begin
				cur = PLr.CurncyCode;
			end;
			rnd = DefaultValRoundoff;
			rnd.decimals = 0;
			rnd.mode = kRoundingModeHalfUp;
			/*if(CompanyIsJWLikeCompany(currentcompany))then begin// Edit ************************** Friday, 20 October 2017 11:18:02
				rnd.mode = kRoundingModeHalfDown;
				rnd.step = kRoundingStep5;
			end;*/
			
			if(GetTempItemPrice(newprice,INr.Code,newcur,currentdate,obj))then begin// Edit ************************** BPI Ukraine - KramarAlexandr - 01, 01 07 2019 y. at 11:15:47 AM
				price = newprice;
				cur = newcur;
			end;
			
			if(cur!=BCb.BaseCur1)then begin
				GetFullCurncyRate(cur,CurrentDate,fr,to1,to2,br1,br2);// Edit ************************** Monday, 25 March 2013 17:43:28
				price = MulRateToBase1(cur,PLr.ExVatPrice,fr,to1,to2,br1,br2,rnd);
			end else begin
				price = PLr.ExVatPrice;
				if(newprice!=0)then begin
					price = newprice;
				end;
			end;
			OUTFORMFIELD("F_MYRETAILPRICEAZN",price & " AZN");// Edit ************************** Tuesday, 1 April 2014 13:15:55
	  end;
	end;
	
	if (FIELDINFORM("F_MYRETAILCURNCY")) then begin
		PLDr.Code = "RRP";
		tstr = "";
		readfirstmain(PLDr,1,true);
		tstr = PLDr.CurncyCode;
	  if(blank(tstr))then begin
	  	PLr.PLCode = "RRP";
			PLr.ArtCode = INr.Code;
			if(readfirstmain(PLr,2,true))then begin
				if(nonblank(PLr.CurncyCode))then begin
					tstr = PLr.CurncyCode;
				end;
			end;
	  end;
	  
	  if(GetTempItemPrice(newprice,INr.Code,newcur,currentdate,obj))then begin// Edit ************************** BPI Ukraine - KramarAlexandr - 01, 01 07 2019 y. at 11:15:47 AM
			price = newprice;
			tstr = newcur;
		end;
	  
	  if(blank(tstr))then begin
			blockload(BCb);
			tstr = BCb.BaseCur1;
		end;
	  OUTFORMFIELD("F_MYRETAILCURNCY",tstr);// Edit ************************** Tuesday, 1 April 2014 13:15:56

	  
	end;
	
	if (FIELDINFORM("F_MYRETAILCURNCY1")) then begin
		tstr = "y.e.";
		OUTFORMFIELD("F_MYRETAILCURNCY1",tstr);// Edit ************************** Tuesday, 1 April 2014 13:15:56
	end;
	
	
	rwcnt = MatRowCnt(Docr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(Docr,i,Docrw);
    if (Docrw.fieldSetNr==0) then begin
      if(nonblank(Docrw.unitText))then begin
        tstr = Docrw.unitText;
        OUTFORMFIELD(Docrw.unitText,tstr);
      end;
    end;
  end;
	
  //EndFormRow;

return;
end;

function LongInt LabelSetup(integer mode,longint defystep)
begin
  longint lbls,ystep;
  
  if (defystep>0) then begin
    ystep = defystep;
  end else begin
    switch (mode) begin
      case 0: ystep = 1;
      case 1: ystep = 98;
      case 2: ystep = 98;
      case 4: ystep = 206;
      case 5: ystep = 112; //2 *7 117
      case 6: ystep = 60; //4*13  // Edit ************************** Monday, 31 March 2014 14:16:33
      case 7: ystep = 57; //4*14 // Edit ************************** Monday, 31 March 2014 14:16:34
      
    end;
  end;

  switch (mode) begin
    case 0: FormLabelGrid(1,1,1,ystep); lbls = 1;
    case 1: FormLabelGrid(3,195,8,ystep); lbls = 24;
    case 2: FormLabelGrid(2,280,8,ystep); lbls = 16;
    case 4: FormLabelGrid(2,280,4,ystep); lbls = 8;
    case 5: FormLabelGrid(2,305,7,ystep); lbls = 14; //2 *7 last 112??
    case 6: FormLabelGrid(4,147,13,ystep); lbls = 52; // 4*13 // Edit ************************** Monday, 31 March 2014 14:15:54
    case 7: FormLabelGrid(4,149,14,ystep); lbls = 56; // 4*14 // Edit ************************** Monday, 31 March 2014 14:15:59
  end;

  LabelSetup = lbls;
  return;
end;

function Boolean EndAndTestLabel(longint lbls,var longint cnt)
begin
  Boolean res;
  
  EndFormLabel;
  cnt = cnt + 1;
  
  if (cnt>=lbls) then begin
    CloseForm;
    cnt = 0;
    res = false;
  end else begin
    res = true;
  end;
  
  EndAndTestLabel = res;
  return;
end;

//Edit***************************Sasha2,16:59 08.07.2015 {
global
updating procedure Zebra_Printing(record RcVc RepSpec)
begin
  area aLabel;
  integer k;
  record ZebraPrinterBlock ZPb;
  String 100 filename;
  
    blockload(ZPb);
    
    Handle_Zebra_Printing(RepSpec,aLabel,K,"FromStock",ZPb);
    if (k>0) then begin
      filename = "ZebraPrint.epl";
      CreateFile(filename);
      closefile;
      WriteAreaToFile(aLabel,filename,0);
      millisleep(100);
      if (WindowsMode==1) then begin
        RunProgram("c:\\windows\\system32\\cmd.exe","/C \"" & "copy " & filename & " \\\\" & ZPb.CompNameWin & "\\" & ZPb.PrinterNameWin & "\"");
      end;
      if (WindowsMode==0) then begin
        RunProgram("/usr/bin/lp","-d " & ZPb.PrinterNameMac & " -o raw " & filename);
      end;
    end;
    
  return;
end;  //Edit***************************Sasha2,16:59 08.07.2015 }

global
updating procedure DoINinStockForm(record RcVc RepSpec,record RcVc RVr)
BEGIN
  record FormDefVc FDr;
  row FormDefVc FDrw;
  record SysFormatBlock SysFormatRec;
  record LangNrVc LangNrr;
  Integer i,rwcnt,mtrw;
  longint lbls,pucnt,lbs;  
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  string 20 frcu,tocu,frreb,toreb;
  boolean TrHs,testf,active;
  integer curcomp;
  boolean formisopen;
  record DocVc Docr,newDocr,testDocr;
  longint x,y,xcnt,ycnt;
	integer labelnum;
	row DocVc Docrw;
	integer newrow,j,k,piccnt;
	area arrec;
	record INVc INr;
	record ItemStatusVc ISr;
	string 20 frin,toin;
	longint labcnt,qty;
	
	FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
 
  if (RepSpec.flags[1]==0) then begin //Edit***************************Sasha2,16:45 08.07.2015 {
    ClientRemoteAsync.Zebra_Printing(RepSpec);
    goto LDoPULabForm;
  end; //Edit***************************Sasha2,16:45 08.07.2015 }
  
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoPULabForm;
  end;
  rwcnt = MatRowCnt(FDr);
  intdocnr = 1;
  printf = true;
  
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,-1,"",
                      "",intdocnr,"",formcode)) then
      begin
        goto LBREAKPULab;
      end;
    end;
LBREAKPULab:;
    if (nonblank(formcode)) then begin
      labcnt = 1;
			
			frin = firstinrange(RepSpec.f1,20);
			toin = lastinrange(RepSpec.f1,20);
			INr.Code = frin; 
			TrHs = true;
			while(loopmain(INr,1,TrHs))begin
				testf = true;
				if(nonblank(toin) and INr.Code>toin)then begin TrHs = false; testf = false; end;
				ISr.Code = INr.Code;
				qty = 0;
				if(nonblank(RepSpec.f2))then begin
					ISr.Location = RepSpec.f2;
				end else begin
					ISr.Location = ";;;";
				end;
				if(readfirstmain(ISr,2,true))then begin
					qty = ISr.Instock;
				end;
				if(qty>0)then begin
					if(nonblank(RepSpec.f2))then begin
						if(RepSpec.long1>0 and RepSpec.long1<qty)then begin qty = RepSpec.long1; end;
					end else begin
						if(RepSpec.long1>0)then begin qty = RepSpec.long1; end;
					end;
				end else begin
					if(blank(RepSpec.f2))then begin
						if(RepSpec.long1>0)then begin qty = RepSpec.long1; end;
					end;
				end;
				if(qty<=0)then begin testf = false; end;
				if(nonblank(RepSpec.f3) and setinset(RepSpec.f3,INr.DispGroups)==false)then begin testf = false; end;
				if(nonblank(RepSpec.f4) and RepSpec.f4!=INr.BPIBrand)then begin testf = false; end;
				if(nonblank(RepSpec.f5) and RepSpec.f5!=INr.BPISubGroup)then begin testf = false; end;
				
				if(testf)then begin
					For(i=0;i<qty;i=i+1) begin
						if(formisopen==false)then begin
							if(openform(formcode)==false)then begin
								goto LDoPULabForm;
							end;
							formisopen=true;
						end;
						
						lbls = LabelSetup(RepSpec.flags[1],0);
						Logtext(0,"DoINinStockForm INr.UUID " & INr.UUID);
						PrintINinStockLabel(INr,Docr);
						formisopen = EndAndTestLabel(lbls,pucnt);
						
					end; 
				end;
      end;
      resetloop(INr);
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
  
  if(formisopen)then begin
		closeform;
	end;
LDoPULabForm:;  
	

  RETURN;
END;

global procedure INinStockForm(record RcVc RepSpec)
BEGIN
  Boolean tmpf;

  tmpf = PrintDocument(RepSpec,"INinStockForm",false);
  
  RETURN;
END;



global procedure INinStockRClassReportDefaults(integer wn)
begin
	record RcVc RepSpec;
	record UserVc User;
	integer i;
	string 20 loc;
	
	getwindowrecord(wn,RepSpec);
	RepSpec.Media = mtPrinter;
	RepSpec.repname = "INinStockForm";
  RepSpec.JobDf = 1;
  RepSpec.flags[1]=6;
  PutWindowRecord(wn,RepSpec);
return;
end;


global procedure DoPrintLablDsm()
begin
integer wn;
record INVc INr;
record RcVc RepSpec;

	wn = curwindow;
	getwindowrecord(wn,INr);
	
	RepSpec.Media = mtPrinter;
	RepSpec.repname = "INinStockForm";
  RepSpec.JobDf = 1;
  RepSpec.flags[1]=6;
  RepSpec.f1 = INr.Code;
  OpenWindow("INinStockRClass",0,0,"","",RepSpec);
	
return;
end;

global updating procedure INGenBarCodeDsm()
begin
integer wn;
record INVc INr;
record RcVc RepSpec;
string 100 barcode;

	wn = curwindow;
	getwindowrecord(wn,INr);
	CheckBarcodeValue(INr,barcode);
	PutWindowRecord(wn,INr);
	
return;
end;

global updating procedure StockInAllCompRunRn()
begin
record RcVc RepSpec;
record INVc INr;
integer wn;
	
	wn = curwindow;
	getwindowrecord(wn,INr);
	RepSpec.f2 = Left(INr.GlobalArtCode,8);
	RepSpec.f1 = INr.Code;
	RepSpec.Media = mtScreen;
  RepSpec.repname = "StockInAllCompRn";
	RunReport(RepSpec,0);
	
return;
end;