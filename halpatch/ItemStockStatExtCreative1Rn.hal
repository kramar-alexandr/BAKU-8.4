//server-only
external procedure ExtractObj(string,var Integer,var string);
remote procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);
external function Boolean SetInSet2(string,string);
external  function string 100 BPICodeToName(string);
external function boolean CheckUserBrands(string,var vector boolean);
external procedure LogProcTime(string,longint);
external procedure ExtractObjWithSeparator(string,string,Boolean,var Integer,var string);
external procedure GetPriceItem(string,var val,var val);
remote function Boolean GetTempItemPrice(var val,string,var string, date,var string); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- ABR 14:18 24.03.2020
external function roundmode SetRoundModeD(Integer);

//SetLangMode(LangRussian,"RUS",0);

function string 200 ParseClassification(string class)
begin
	string 200 res,cl;
	record DIVc DIr;
	integer pos;
	
	if(nonblank(class))then begin
		pos = 0;
		ExtractObj(class,pos,cl);
		DIr.Code = cl;
		if(readfirstmain(DIr,1,true))then begin
			res = DIr.Name;
			outstring(0,0,DIr.Name,false);
		end else begin
			outstring(0,0,"",false);
		end;
	
		ExtractObj(class,pos,cl);
		if(nonblank(cl))then begin
			DIr.Code = cl;
			if(readfirstmain(DIr,1,true))then begin
				if(nonblank(DIr.Code))then begin
					res = res & "," & DIr.Name;
				end;
				if(currentcompany>3)then begin
					outstring(0,0,DIr.Name,false);
				end;
			end else begin
				if(currentcompany>3)then begin
					outstring(0,0,"",false);
				end;
			end;
		end else begin
			if(currentcompany>3)then begin
				outstring(0,0,"",false);
			end;
		end;
	end else begin
		outstring(0,0,"",false);
		if(currentcompany>3)then begin
			outstring(0,0,"",false);
		end;
	end;
	
	ParseClassification = res;
return;
end;

function val ItemQtyPerDate(string artcode, date idate,string location,string serial,var val serialcost)
begin
	record ItemHistVc IHr;
	val res;
	string 50 key;
	integer keys;
	boolean TrHs,testf;
	string 100 oldartcode,oldfilename;
	longint oldsernr;
  integer oldrow,oldinvalid;
  record ItemStatusVc ISr;
  record SerBalVc SBr;
  	
  	serialcost = 0;
  	if(idate>=currentdate)then begin
  		if(nonblank(location))then begin
  			ISr.Code = artcode;
  			ISr.Location = location;
  			readfirstmain(ISr,2,true);
  			res = ISr.Instock;
  		end else begin
  			ISr.Code = artcode;
  			ISr.Location = ";;;";
  			readfirstmain(ISr,2,true);
  			res = ISr.Instock;
  		end;
  		if(nonblank(serial))then begin
  			SBr.Serial = serial;
  			SBr.Location = location;
  			SBr.Item = artcode;
  			readfirstmain(SBr,3,true);
  			res = SBr.Quant;
  			serialcost = SBr.CostPrice;
  		end;
  	end else begin
			IHr.ArtCode = artcode;
			if(nonblank(location))then begin
				IHr.Location = location;
				key = "ArtCodeLoc";
				keys = 2;
			end else begin
				key = "ArtCode";
				keys = 1;
			end;
		
			TrHs = true;
			While(loopkey(key,IHr,keys,TrHs)) begin
				testf = true;
				if (IHr.ArtCode!=artcode or IHr.Location!=location or IHr.TransDate>idate) then begin testf = false; TrHs = false; end;
				if(IHr.StockAffectf<1)then begin testf = false; end;
				if(nonblank(serial) and IHr.SerialNr!=serial)then begin testf = false; end;
	
				if(testf)then begin
					res = res + IHr.Qty;
					if(IHr.Qty>=0)then begin
						serialcost = serialcost + IHr.TotCostPrice;
					end else begin
						serialcost = serialcost - IHr.TotCostPrice;
					end;  	
				end;
			end; 
		end;
		ItemQtyPerDate = res;
		
return;
end;

function val FindAwerageCostCur(string artcode, string location,string curcode,date todate)
begin
	record ItemHistVc IHr,IH2r;
	record PUVc PUr;
	row PUVc PUrw;
	val curcost,curval;
	boolean TrHs,testf;
	longint lastsernr;
	val fr,to1,to2,br1,br2;
	string 100 oldartcode,oldfilename;
	longint oldsernr;
  integer oldrow,oldinvalid;
  val curqty;
	
	
	if(todate>=currentdate)then begin
		curcost = 0;
		curqty = 0;
		IHr.ArtCode = artcode;
		IHr.Location = location;
		TrHs = true;
		while(loopkey("ActiveLocQty",IHr,2,TrHs))begin
			testf = true;
			if(IHr.ArtCode!=artcode)then begin TrHs=false; testf = false; end;
			if(nonblank(location) and IHr.Location!=location)then begin testf = false; end;
		
			if(testf)then begin
				if(IHr.Source>0)then begin
					lastsernr = IHr.Source;
	LFind:;
					IH2r.SerNr = lastsernr;
					readfirstmain(IH2r,1,true);
					if(IH2r.Source>0)then begin
						lastsernr = IH2r.Source;
						goto LFind;
					end else begin
						if(IH2r.FileName=="PUVc")then begin
							PUr.SerNr = IH2r.TransNr;
							readfirstmain(PUr,1,true);
							matrowget(PUr,IH2r.Row,PUrw);
							curcost = curcost + PUrw.UPrice * IHr.RemQty;
							curqty = curqty + IHr.RemQty;
						end else begin
							IH2r.TransDate = IHr.FIFODate;
							IH2r.ArtCode = IHr.ArtCode;
							IH2r.FileName = "PUVc";
							IH2r.SerNr = IHr.SerNr;
							readlastkey("FNArtCode",IH2r,4,false);
							PUr.SerNr = IH2r.TransNr;
							readfirstmain(PUr,1,true);
							matrowget(PUr,IH2r.Row,PUrw);
							curcost = curcost + PUrw.UPrice * IHr.RemQty;
							curqty = curqty + IHr.RemQty;
						end;
					end;
				end else begin
					if(IHr.FileName=="PUVc")then begin
						PUr.SerNr = IHr.TransNr;
						readfirstmain(PUr,1,true);
						matrowget(PUr,IHr.Row,PUrw);
						curcost = curcost + PUrw.UPrice * IHr.RemQty;
						curqty = curqty + IHr.RemQty;
					end else begin
						if(IHr.FileName=="IVVc")then begin
							IH2r.TransNr = IHr.TransNr;
							IH2r.FileName = IHr.FileName;
							IH2r.Row = IHr.Row;
							if(readfirstkey("FNTransNr",IH2r,3,true))then begin
								if(IH2r.Invalid>0)then begin
									lastsernr = IH2r.Source;
									goto LFind;
								end else begin
									goto LFind2;
								end;
							end;
						end else begin
	LFind2:;
							IH2r.TransDate = IHr.FIFODate;
							IH2r.ArtCode = IHr.ArtCode;
							IH2r.FileName = "PUVc";
							IH2r.SerNr = IHr.SerNr;
							readlastkey("FNArtCode",IH2r,4,false);
							PUr.SerNr = IH2r.TransNr;
							readfirstmain(PUr,1,true);
							matrowget(PUr,IH2r.Row,PUrw);
							curcost = curcost + PUrw.UPrice * IHr.RemQty;
							curqty = curqty + IHr.RemQty;
						end;
					end;
				end;
			end;
		end;
		curcost = curcost/curqty;
	end else begin
		curcost = 0;
		curqty = 0;
		IHr.ArtCode = artcode;
		IHr.Location = location;
		TrHs = true;
		while(loopkey("ArtCodeLoc",IHr,2,TrHs))begin
			
			testf = true;
			if(IHr.ArtCode!=artcode or IHr.Location!=location)then begin TrHs=false; testf = false; end;
			if(IHr.TransDate>todate)then begin TrHs=false; testf = false; end;
			if(IHr.StockAffectf==0)then begin testf=false; end;
		
			if(testf)then begin
				curval = curval + IHr.RemQty;
				if(IHr.Source>0)then begin
					lastsernr = IHr.Source;
	LFind1:;
					IH2r.SerNr = lastsernr;
					readfirstmain(IH2r,1,true);
					if(IH2r.Source>0)then begin
						lastsernr = IH2r.Source;
						goto LFind1;
					end else begin
						if(IH2r.FileName=="PUVc")then begin
							PUr.SerNr = IH2r.TransNr;
							readfirstmain(PUr,1,true);
							matrowget(PUr,IH2r.Row,PUrw);
							curcost = curcost + PUrw.UPrice * IHr.Qty;
							curqty = curqty + IHr.Qty;
						end else begin
							IH2r.TransDate = IHr.FIFODate;
							IH2r.ArtCode = IHr.ArtCode;
							IH2r.FileName = "PUVc";
							IH2r.SerNr = IHr.SerNr;
							readlastkey("FNArtCode",IH2r,4,false);
							PUr.SerNr = IH2r.TransNr;
							readfirstmain(PUr,1,true);
							matrowget(PUr,IH2r.Row,PUrw);
							curcost = curcost + PUrw.UPrice * IHr.Qty;
							curqty = curqty + IHr.Qty;
						end;
					end;
				end else begin
					if(IHr.FileName=="PUVc")then begin
						PUr.SerNr = IHr.TransNr;
						readfirstmain(PUr,1,true);
						matrowget(PUr,IHr.Row,PUrw);
						curcost = curcost + PUrw.UPrice * IHr.Qty;
						curqty = curqty + IHr.Qty;
					end else begin
						IH2r.TransDate = IHr.FIFODate;
						IH2r.ArtCode = IHr.ArtCode;
						IH2r.FileName = "PUVc";
						IH2r.SerNr = IHr.SerNr;
						readlastkey("FNArtCode",IH2r,4,false);
						PUr.SerNr = IH2r.TransNr;
						readfirstmain(PUr,1,true);
						matrowget(PUr,IH2r.Row,PUrw);
						curcost = curcost + PUrw.UPrice * IHr.Qty;
						curqty = curqty + IHr.Qty;
					end;
				end;
			end;
		end;
		curcost = curcost/curqty;
		resetloop(IHr);
	end;
	FindAwerageCostCur = curcost;
return;
end;

function val FindAwerageCost(string artcode, string location,date todate)
begin
	record ItemHistVc IHr,IH2r;
	record PUVc PUr;
	row PUVc PUrw;
	val curcost,curval;
	boolean TrHs,testf;
	longint lastsernr;
	val fr,to1,to2,br1,br2;
	string 100 oldartcode,oldfilename;
	longint oldsernr;
  integer oldrow,oldinvalid;
  val curqty;
  
	if(todate>=currentdate)then begin
		curcost = 0;
		curqty = 0;
		IHr.ArtCode = artcode;
		IHr.Location = location;
		TrHs = true;
		while(loopkey("ActiveLocQty",IHr,2,TrHs))begin
			testf = true;
			if(IHr.ArtCode!=artcode)then begin TrHs=false; testf = false; end;
			if(nonblank(location) and IHr.Location!=location)then begin testf = false; end;
			if(IHr.StockAffectf==0)then begin testf=false; end;
		
			if(testf)then begin
				curcost = curcost + IHr.RemCostPrice;
				curqty = curqty + IHr.RemQty;
			end;
		end;
		curcost = curcost/curqty;
	end else begin
		curcost = 0;
		curqty = 0;
		IHr.ArtCode = artcode;
		IHr.Location = location;
		TrHs = true;
		while(loopkey("ArtCodeLoc",IHr,2,TrHs))begin
			testf = true;
			if(IHr.ArtCode!=artcode or IHr.Location!=location)then begin TrHs=false; testf = false; end;
			if(IHr.TransDate>todate)then begin TrHs=false; testf = false; end;
			if(IHr.StockAffectf==0)then begin testf=false; end;
		
			if(testf)then begin
				if(IHr.Qty>=0)then begin
					curcost = curcost + IHr.TotCostPrice;
				end else begin
					curcost = curcost - IHr.TotCostPrice;
				end;
				curqty = curqty + IHr.Qty;
			end;
		end;
		curcost = curcost/curqty;
	end;
	FindAwerageCost = curcost;
return;
end;

procedure PrintInfo(record INVc INr, record ItemStatusVc ISr,string serial,val serstock,val costprice,date todate,var val total_qty,var val total_cost,var val total_price,record RcVc RepSpec)
begin 
	record DIVc DIr;
	record PLVc PLr;
	integer pos,cnt,i;
  string 50 uloc,pricecur;
  val fr,to1,to2,br1,br2;
  val baseprice,cur,price;
  record INConsVc INCr;
	val instock,awercost,awercostcur;
	record PLDefVc PLDefr;
	record ItemHistVc IHr;
	record PUVc PUr;
	row PUVc PUrw;
  record IVVc IVr;
  row IVVc IVrw;
  record ItemStatusVc IS1r;
  val totresqty,ITRebate,inprice,TempItemPrice;
  string 255 brand,model,tpcurrency,obj,crn;
	record OldDIVc OldDIr;	
  date sd;
	record CurncyRoundOffBlock CROb;
	row CurncyRoundOffBlock CRObrw;
	
  totresqty = 0;
  totresqty = ISr.RsrvQty;
  if(ISr.Location=="MAIN" or ISr.Location=="CS1" or ISr.Location=="OUTLET_14")then begin
		totresqty = 0;
		IS1r.Code = ISr.Code;
		IS1r.Location = "MAIN";
		readfirstmain(IS1r,2,true);
		totresqty  = totresqty + IS1r.RsrvQty;
	
		IS1r.Code = ISr.Code;
		IS1r.Location = "CS1";
		readfirstmain(IS1r,2,true);
		totresqty  = totresqty + IS1r.RsrvQty;
		
		IS1r.Code = ISr.Code;
		IS1r.Location = "OUTLET_14";
		readfirstmain(IS1r,2,true);
		totresqty  = totresqty + IS1r.RsrvQty;
  end;
  
  if(serstock==0)then begin
  	instock = ISr.Instock;
  end else begin
  	instock = serstock;
  end;
  
	startformat(15);
		//DIr.Code = INr.DispGroups;
		//readfirstmain(DIr,1,true);
		PLr.ArtCode = INr.Code;
		PLr.PLCode = "RRP";
		PLr.SerialNr = serial;
		if(readfirstmain(PLr,3,true))then begin
			if(PLr.ArtCode==INr.Code and PLr.PLCode=="RRP" and PLr.SerialNr==serial)then begin
				price = PLr.ExVatPrice;
			end;
		end;
				
		outstring(0,0,INr.Code,false);
		outstring(0,0,INr.AlternativeCode,false);
		outstring(0,0,ISr.Location,false);
		pos = 0;
		brand = "";
		model = "";
		
		if(CurrentCompany==9)then begin
			ExtractObj(INr.DispGroups,pos,uloc);
			while (NonBlank(uloc)) begin
				DIr.Code = uloc;
				if (readfirstmain(DIr,1,true)) then begin
					if (DIr.CType=="BRAND") then begin
						brand = DIr.Name;
					end;
					if(CurrentCompany!=9)then begin
						model = BPICodeToName(INr.BPICollection);
					end else begin
						if (DIr.CType=="MODEL") then begin
							model = DIr.Name;
						end;
					end;
				end;
				ExtractObj(INr.DispGroups,pos,uloc);
			end;
		end else begin
			brand = BPICodeToName(INr.BPIBrand);
			model = BPICodeToName(INr.BPICollection);
		end;
		
		
		outstring(0,0,brand,false);
		outstring(0,0,model,false);
		if(CurrentCompany==25)then begin
			outstring(0,0,INr.MainDisp,false);
			OldDIr.Code = INr.SNOne;
			if(ReadFirstMain(OldDIr,1,true))then begin
				outstring(0,0,OldDIr.Name,false);
			end else begin
				outstring(0,0,"",false);
			end;
		end;
		outstring(0,0,INr.Name,false);
		outstring(0,0,INr.InvCode,false);// Edit ************************** Thursday, 24 July 2014 10:34:00
		// outstring(0,0,INr.OrigCode,false); // Edit ************************** ABR, 28.08.2020 10:34:00
		outstring(0,0,INr.Colour,false);
		outstring(0,0,INr.Size,false);
		outstring(0,0,serial,false);// Edit ************************** Tuesday, 7 May 2013 10:13:07		
		outstring(0,0,instock,false);
		outstring(0,0,totresqty,false);
		outstring(0,0,INr.Unittext,false);
		total_qty = total_qty + instock;
	
		baseprice = 0;
		PLr.ArtCode = INr.Code;
		PLr.PLCode = "RRP";
		PLr.CustCode = "";
		PLr.SerialNr = serial;
		
		if(readfirstmain(PLr,4,true))then begin
			if(PLr.ArtCode==INr.Code and PLr.PLCode=="RRP" and PLr.SerialNr==serial)then begin
				price = PLr.ExVatPrice;
				PLDefr.Code = "RRP";
				readfirstmain(PLDefr,1,true);
				pricecur = PLDefr.CurncyCode;
				if(nonblank(PLr.CurncyCode))then begin
					pricecur = PLr.CurncyCode;
				end;
			end;
		end;
		if(price==0)then begin
			cnt = 0;
			PLr.ArtCode = INr.Code;
			PLr.PLCode = "RRP";
			while(loopmain(PLr,2,(PLr.ArtCode==INr.Code)))begin
				if(PLr.ArtCode==INr.Code)then begin
					price = price + PLr.ExVatPrice;
					cnt = cnt + 1;
					PLDefr.Code = "RRP";
					readfirstmain(PLDefr,1,true);
					pricecur = PLDefr.CurncyCode;
					if(nonblank(PLr.CurncyCode))then begin
						pricecur = PLr.CurncyCode;
					end;
				end;
			end;
			resetloop(PLr);
			price = price/cnt;
		end;
		
		GetFullCurncyRate(pricecur,todate,fr,to1,to2,br1,br2);
		if(fr==0 or to1==0)then begin
			fr=1; to1=1;
		end;
		baseprice = price/fr*to1;
		if(pricecur!=INr.LastPurchCurncyCode)then begin
			GetFullCurncyRate(INr.LastPurchCurncyCode,todate,fr,to1,to2,br1,br2);
			if(fr==0 or to1==0)then begin
				fr=1; to1=1;
			end;
			price = baseprice*fr/to1;
		end;
		if(RepSpec.flags[1]) then begin
			GetPriceItem(INr.Code,inprice,ITRebate);
			if (GetTempItemPrice(TempItemPrice,INr.Code,tpcurrency,CurrentDate,obj)) then begin
				if(tpcurrency!="AZN")then begin
					crn = tpcurrency;
					sd = CurrentDate;
					fr = 0;
					to1 = 0;
					to2 = 0;
					br1 = 0;
					br2 = 0;
					GetFullCurncyRate(crn,sd,fr,to1,to2,br1,br2);
					TempItemPrice = TempItemPrice/fr*to1;
				end;
			end;
			for(i=0;i<matrowcnt(CROb); i=i+1) begin
				matrowget(CROb,i,CRObrw);
				if(CRObrw.CurncyCode=="AZN" and CRObrw.VcName== "IVVc") then begin
					i = matrowcnt(CROb);
				end;
			end;
			if(TempItemPrice!=0) begin
				outstring(0,0,round(TempItemPrice - TempItemPrice*ITRebate/100,SetRoundModeD(CRObrw.RndRowsumMode)),false);
			end else begin
				outstring(0,0,round(inprice - inprice*ITRebate/100,SetRoundModeD(CRObrw.RndRowsumMode)),false);
			end; 
		end;
		outstring(0,0,price,false);
		if(usercanaction("ViewCostPrice",true))then begin
			cnt = 0;
			PLr.ArtCode = INr.Code;
			PLr.PLCode = "FOB";
			readfirstmain(PLr,2,true);
			price = PLr.ExVatPrice;
			pricecur = PLDefr.CurncyCode;
			if(nonblank(PLr.CurncyCode))then begin
				pricecur = PLr.CurncyCode;
			end;
			/*while(loopmain(PLr,2,(PLr.ArtCode==INr.Code)))begin
				if(PLr.ArtCode==INr.Code)then begin
					price = price + PLr.ExVatPrice;
					cnt = cnt + 1;
					PLDefr.Code = "FOB";
					readfirstmain(PLDefr,1,true);
					pricecur = PLDefr.CurncyCode;
					if(nonblank(PLr.CurncyCode))then begin
						pricecur = PLr.CurncyCode;
					end;
				end;
			end;
			resetloop(PLr);
			price = price/cnt;*/
			outstring(0,0,price,false);
		end;
		outstring(0,0,INr.LastPurchCurncyCode,false);
		outstring(0,0,baseprice,false);
	endformat;

return;
end;

global procedure ItemStockStatExtCreative1Rn(record RcVc RepSpec)
begin
  record ItemStatusVc ISr;
  record PLVc PLr;
  string 100 item,location,findkey,class;
  record INVc INr,INccr;
  boolean TrHs,testf,TrHs1,testf1,TrHs2,testf2;
  record DIVc DIr;
  integer findint;
  record UserVc User;
  boolean userlocation;
  integer pos,curcomp;
  string 50 uloc,brand,model,classfind,retailbasecur;
  record SerBalVc SBr;
  date todate;
  val total_qty;
  val total_cost,total_price;
  record BaseCurBlock BCb;
	vector boolean userbrand;
  boolean userbrandf;
  longint curtick;
  record ConsItemVc CIr;
	
	curtick = getcurtick();
  userbrandf = CheckUserBrands(currentuser,userbrand);
  
  curcomp = currentcompany;
  
  BlockLoad(BCb);
  
  item = RepSpec.f1;
  location = RepSpec.f2;
  todate = RepSpec.d1;
  
  if(blank(todate))then begin
  	todate = currentdate;
  end;
  
  userlocation = false;
  User.Code = currentuser;
  if(readfirstmain(User,1,true))then begin
  	if(nonblank(User.UserLocations) and usercanaction("AllowReportWithUserLoc",false))then begin
  		userlocation = true;
  		pos = 0;
			ExtractObjWithSeparator(",",User.UserLocations,true,pos,uloc);
			while (nonblank(uloc)) begin
				if(uloc==location)then begin
					userlocation = false;
				end;
				ExtractObjWithSeparator(",",User.UserLocations,true,pos,uloc);
			end;
  	end;
  end;
  
  startreportnoheaderjob(USetStr(35008));			//Edit----------------------Dima  12.05.2015
  
  total_qty = 0;
  total_cost = 0;
  total_price = 0;
  
  if(userlocation)then begin
  	startformat(15);
			outstring(50,0,USetStr(31014),false);
  	endformat;
  end else begin
		startformat(15);
			outstring(0,0,USetStr(31042),false);
 			outstring(0,0,USetStr(31043),false);
 			outstring(0,0,USetStr(12861),false);//Location
 			outstring(0,0,USetStr(31044),false);
 			outstring(0,0,USetStr(31206),false);
			if(CurrentCompany==25)then begin
				outstring(0,0,"CC Collection",false);
				outstring(0,0,"Prod.Group",false);
			end;
 			outstring(0,0,USetStr(12713),false);
 			outstring(0,0,USetStr(35010),false);//Shelf  // Edit ************************** Thursday, 24 July 2014 10:31:44
 			outstring(0,0,USetStr(31253),false);//Colour
 			outstring(0,0,USetStr(31254),false);//Size
			outstring(0,0,USetStr(31051),false);//Serial number
			outstring(0,0,USetStr(31238),false);
			outstring(0,0,USetStr(16141),false);//Reserve
			outstring(0,0,USetStr(31175),false);
			if(RepSpec.flags[1]) then begin
				outstring(0,0,USetStr(36360),false); // Cena so skidkoi
			end;
			outstring(0,0,USetStr(35009),false);
			if(usercanaction("ViewCostPrice",true))then begin
				outstring(0,0,"FOB",false);		//Edit----------------------Dima  12.05.2015
			end;
			outstring(0,0,USetStr(16018),false);		//Edit----------------------Dima  12.05.2015
			retailbasecur = USetStr(35011) & BCb.BaseCur1;//Edit----------------------Dima  12.05.2015
			outstring(0,0,retailbasecur,false);		//Edit----------------------Dima  12.05.2015
		endformat;
	
		if(nonblank(item))then begin
			ISr.Code = item;
			TrHs = true;
			while(loopmain(ISr,1,TrHs))begin
				testf = true;
				if(ISr.Code!=item)then begin TrHs = false; testf = false; end;
				if(ISr.Location==";;;")then begin testf = false; end;
				if(nonblank(location) and location!=ISr.Location)then begin testf = false; end;
				if(testf)then begin
					ISr.Instock = ItemQtyPerDate(ISr.Code,todate,ISr.Location,"",SBr.CostPrice);
				end;
				if(ISr.Instock==0)then begin testf = false; end;
			
				if(testf)then begin
					INr.Code = ISr.Code;
					readfirstmain(INr,1,true);
					if(INr.SerNrf==0)then begin
						PrintInfo(INr,ISr,"",0,0,todate,total_qty,total_cost,total_price,RepSpec);
					end else begin
						SBr.Item = INr.Code;
						SBr.Location = ISr.Location;
						while(loopmain(SBr,2,(SBr.Item==INr.Code and SBr.Location==ISr.Location)))begin
							if(SBr.Item==INr.Code and SBr.Location==ISr.Location)then begin
								ISr.Instock = ItemQtyPerDate(ISr.Code,todate,ISr.Location,SBr.Serial,SBr.CostPrice);
								if(ISr.Instock>0)then begin
									PrintInfo(INr,ISr,SBr.Serial,ISr.Instock,SBr.CostPrice,todate,total_qty,total_cost,total_price,RepSpec);
								end;
							end;
						end;
						resetloop(SBr);
					end;
				end;
			end;
			resetloop(ISr);
		end else begin
		
			INr.DispGroups = "";//= RepSpec.f3;
			class = RepSpec.f3;
			TrHs1 = true;
			while(loopkey("MyDispGroups",INr,1,TrHs1))begin
				testf1 = true;
				testf1 = SetInSet2(class,INr.DispGroups);
				//if(nonblank(RepSpec.f3) and RepSpec.f3!=right(INr.DispGroups,len(RepSpec.f3)))then begin testf1 = false; end;
				if(INr.Terminated!=0)then begin testf1 = false; end;
				
				if(userbrandf and testf1)then begin// Edit ************************** BPI Ukraine - KramarAlexandr - 03, 19 06 2019 y. at 4:35:18 PM
					pos = 0;
					brand = "";
					testf1 = false;
					ExtractObj(INr.DispGroups,pos,brand);
					while(nonblank(brand)) begin
						if(userbrand[brand])then begin
							testf1 = true;
						end;
						ExtractObj(INr.DispGroups,pos,brand);
					end;
				end;
				
				if(testf1)then begin
					if(nonblank(RepSpec.f4) or nonblank(RepSpec.f5))then begin
						brand = "";
						model = "";
						pos = 0;
						classfind = "";
						ExtractObj(INr.DispGroups,pos,classfind);
						while(nonblank(classfind))begin
							DIr.Code = classfind;
							readfirstmain(DIr,1,true);
							if(DIr.CType=="BRAND")then begin
								brand = DIr.Code;
							end;
							if(CurrentCompany!=9)then begin
								model = INr.BPICollection;
							end else begin
								if(DIr.CType=="MODEL")then begin
									model = DIr.Code;
								end;
							end;
							ExtractObj(INr.DispGroups,pos,classfind);
						end;
						if(nonblank(RepSpec.f4) and brand!=RepSpec.f4)then begin
							testf1 = false;
						end;
						if(nonblank(RepSpec.f5) and model!=RepSpec.f5)then begin
							testf1 = false;
						end;
					end;
				end;
				
				
				
				
				if(testf1)then begin
					ISr.Code = INr.Code;
					TrHs2 = true;
					while(loopmain(ISr,1,TrHs2))begin
						testf2 = true;
						if(ISr.Code!=INr.Code)then begin testf2 = false; TrHs2 = false; end;
						if(nonblank(RepSpec.f2) and ISr.Location!=RepSpec.f2)then begin testf2 = false; end;
						if(ISr.Location==";;;")then begin testf2 = false; end;
						if(testf2)then begin
							SBr.CostPrice = 0;
							ISr.Instock = ItemQtyPerDate(ISr.Code,todate,ISr.Location,"",SBr.CostPrice);
						end;
						if(ISr.Instock<=0)then begin testf2 = false; end;
					
						if(testf2)then begin
							if(INr.SerNrf==0)then begin
								PrintInfo(INr,ISr,"",0,0,todate,total_qty,total_cost,total_price,RepSpec);
							end else begin
								SBr.Item = INr.Code;
								SBr.Location = ISr.Location;
								while(loopmain(SBr,2,(SBr.Item==INr.Code and SBr.Location==ISr.Location)))begin
									if(SBr.Item==INr.Code and SBr.Location==ISr.Location)then begin
										ISr.Instock = ItemQtyPerDate(ISr.Code,todate,ISr.Location,SBr.Serial,SBr.CostPrice);
										if(ISr.Instock>0)then begin
											PrintInfo(INr,ISr,SBr.Serial,SBr.Quant,SBr.CostPrice,todate,total_qty,total_cost,total_price,RepSpec);
										end;
									end;
								end;
								resetloop(SBr);
							end;
						end;
					end;
					resetloop(ISr);
					
					if(RepSpec.flags[0]==1)then begin// Edit ************************** BPI Ukraine - KramarAlexandr - 01, 17 08 2020 y. at 9:45:08 AM
						setcompany(18,false);
							CIr.LocCode = INr.Code;
							CIr.BrandCode = INr.BPIBrand;
							if(readfirstkey("LocCodeBrand",CIr,2,true))then begin
								INccr.Code = CIr.Code;
								readfirstmain(INccr,1,true);
								ISr.Code = INccr.Code;
								TrHs2 = true;
								while(loopmain(ISr,1,TrHs2))begin
									testf2 = true;
									if(ISr.Code!=INccr.Code)then begin testf2 = false; TrHs2 = false; end;
									if(nonblank(RepSpec.f2) and ISr.Location!=RepSpec.f2)then begin testf2 = false; end;
									if(ISr.Location==";;;")then begin testf2 = false; end;
									if(testf2)then begin
										SBr.CostPrice = 0;
										ISr.Instock = ItemQtyPerDate(ISr.Code,todate,ISr.Location,"",SBr.CostPrice);
									end;
									if(ISr.Instock<=0)then begin testf2 = false; end;
					
									if(testf2)then begin
										if(INccr.SerNrf==0)then begin
											setcompany(curcomp,false);
												PrintInfo(INr,ISr,"",0,0,todate,total_qty,total_cost,total_price,RepSpec);
											setcompany(18,false);
										end else begin
											SBr.Item = INccr.Code;
											SBr.Location = ISr.Location;
											while(loopmain(SBr,2,(SBr.Item==INccr.Code and SBr.Location==ISr.Location)))begin
												if(SBr.Item==INccr.Code and SBr.Location==ISr.Location)then begin
													ISr.Instock = ItemQtyPerDate(ISr.Code,todate,ISr.Location,SBr.Serial,SBr.CostPrice);
													if(ISr.Instock>0)then begin
														setcompany(curcomp,false);
															PrintInfo(INr,ISr,SBr.Serial,SBr.Quant,SBr.CostPrice,todate,total_qty,total_cost,total_price,RepSpec);
														setcompany(18,false);
													end;
												end;
											end;
											resetloop(SBr);
										end;
									end;
								end;
								resetloop(ISr);
							end;
						setcompany(curcomp,false);
					end;
					
				end;
			end;
			resetloop(INr);
		end;
		
		startformat(15);
			outstring(0,0,"",false);
			outstring(0,0,"",false);
			outstring(0,0,"",false);
			outstring(0,0,"",false);
			outstring(0,0,"",false);
			outstring(0,0,"",false);
			outstring(0,0,"",false);
			outstring(0,0,"",false);
			outstring(0,0,"",false);
			outstring(0,0,USetStr(31074),false);
			outstring(0,0,total_qty,false);
			outstring(0,0,"",false);
			outstring(0,0,"",false);
		endformat;
		
  end;
  endjob;
  LogProcTime("ItemStockStatExtCreative1Rn",getcurtick()-curtick);
return;
end;
