external function string 255 NextSerialNumber(string,string,record SerNrTrackBlock);
external updating procedure UpdatePosition(string,string,string,val,val,val);
external updating procedure UpdateSVOSerStock(string,string,string,string,string,string,string,val,val,Date,Date,val,string);
external updating procedure UpdateSVOSerHist(string,string,string,LongInt,Date,string,string);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external updating procedure UpdateSVOSerFromSH(record IVVc,Integer,val);
external procedure CombineStructure(var record SHVc);
external function Boolean ExpandStructItem(string,string,val,var record SHVc);
external updating procedure UpdateSerStock(string,string,string,val,val);
external procedure GetCustName(string,var string);

global
updating procedure IVUpdateSerialNr(record IVVc IVp,Boolean negf,Boolean serstockf)
begin
  val t,costp,q2;
  row IVVc IVrw;
  Integer rwcnt,i;
  record SHVc RecSHr;
  Boolean isstruct;
  string 200 cucode,name;
  record MainStockBlock MSb;
  string 255 location,serialnr;
  val serqty;
  Date blankd;
  record SerNrTrackBlock SNrb;
  record INVc INr;
  
  BlockLoad(MSb);
  BlockLoad(SNrb);
  rwcnt = MatRowCnt(IVp);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(IVp,i,IVrw);
    if (IVrw.NotUpdStockFlag==0) and (IVrw.ovst==0) then begin
    if (IVrw.stp==kInvoiceRowTypeNormal) or (IVrw.stp==kInvoiceRowTypeStructuredItemComponent) or (IVrw.stp==kInvoiceRowTypeCorrection) then begin
      location = IVrw.Location;
      if (blank(location)) then begin
        location = IVp.Location;
      end;
      if (blank(location)) then begin
        location = MSb.MainStock;
      end;
      ReadFirstItem(IVrw.ArtCode,INr,true,false);
      RecordNew(RecSHr);
      isstruct = false;
      if (IVrw.stp!=kInvoiceRowTypeStructuredItemComponent) then begin
        isstruct = ExpandStructItem(IVrw.ArtCode,IVrw.Recepy,IVrw.Quant,RecSHr);
        CombineStructure(RecSHr);
      end;
      if (isstruct==false) then begin      
        if (IVp.UpdStockFlag!=0) then begin
//          if ((IVrw.OrdRow==-1) or (IVp.QTNr!=-1)) then begin //why  quotation  ? what if qt crated order ? 
          if (IVrw.OrdRow==-1) or (currentcompany==28) then begin
            if (IVp.InvType!=kInvoiceTypeCredit and IVp.InvType!=kInvoiceTypeCreditSpecialSales) then begin
              t = -IVrw.Quant;
            end else begin
              switch (IVrw.stp) begin
                case 11: t = -IVrw.Quant;
                otherwise t = IVrw.Quant;
              end;              
            end;  
            if (MSb.UnitConvCalc==0) then begin
              q2 = t*IVrw.Coefficient;
            end else begin
              q2 = t/IVrw.Coefficient;
            end;
            if (negf) then begin
              t = -t;
              q2 = -q2;
            end;
            costp = blankval; 
            if (IVp.InvType!=kInvoiceTypeCredit and IVp.InvType!=kInvoiceTypeCreditSpecialSales) then begin
//              UpdateBatchTextConsigStock(IVrw.ArtCode,location,IVrw.SerialNr,0);//why it should untick cons stock ? 
            end else begin
/*
not sure about it            
              switch (IVrw.stp) begin
                case 11:
                  UpdateBatchTextConsigStock(IVrw.ArtCode,location,IVrw.SerialNr,0);
                otherwise
                  UpdateBatchTextConsigStock(IVrw.ArtCode,location,IVrw.SerialNr,1);                  
              end;              
*/              
            end;
            if (serstockf) then begin
              if (SNrb.BulkSerialNos!=0) and (INr.SerNrf==1) then begin
                if (IVp.InvType!=kInvoiceTypeCredit and IVp.InvType!=kInvoiceTypeCreditSpecialSales) then begin
                  t = -1.00;
                end else begin
                  switch (IVrw.stp) begin
                    case 11: t = -1.00;
                    otherwise t = 1.00;
                  end;              
                end;  
                if (MSb.UnitConvCalc==0) then begin
                  q2 = t*IVrw.Coefficient;
                end else begin
                  q2 = t/IVrw.Coefficient;
                end;
                if (negf) then begin
                  t = -t;
                  q2 = -q2;
                end;
                serqty = blankval;
                serialnr = FirstInRange(IVrw.SerialNr,60);
                while (nonblank(serialnr)) begin
                  UpdateSerStock(IVrw.ArtCode,location,serialnr,t,costp);
                  serqty = serqty + 1;
                  serialnr = NextSerialNumber(IVrw.ArtCode,serialnr,SNrb);
                  if (serqty>=IVrw.Quant) then begin serialnr = ""; end;
                end;
              end else begin          
                UpdateSerStock(IVrw.ArtCode,location,IVrw.SerialNr,t,costp);
              end;
            end;
            UpdatePosition(IVrw.ArtCode,location,IVrw.PosCode,t,q2,blankval);
          end;
        end;        
      end;
    end;
    end;
    if (IVrw.stp==kInvoiceRowTypeNormal) or (IVrw.stp==kInvoiceRowTypeStructuredItemComponent) or (IVrw.stp==11) then begin
      if (MSb.updateSVGM!=0) then begin            
        if (IVp.InvType!=kInvoiceTypeCredit and IVp.InvType!=kInvoiceTypeCreditSpecialSales) then begin
          if (NonBlank(IVp.OrgCust)) then begin
            cucode = IVp.OrgCust;
            GetCustName(cucode,name);
          end else begin
            cucode = IVp.CustCode;
            name = IVp.Addr0;
          end;
          t = IVrw.Quant;
          switch (IVrw.stp) begin
            case 11: t = -t;
          end;
        end else begin
          cucode = "";
          name = "";
          switch (IVrw.stp) begin
            case 11: t = IVrw.Quant;
            otherwise t = -IVrw.Quant;
          end;
        end;  
        if (negf) then begin
          t = -t;
        end;
        if (serstockf) then begin
          if ((IVp.OrderNr==-1) or (IVrw.Quant==1)) then begin
            if (SNrb.BulkSerialNos!=0) and (INr.SerNrf==1) then begin
              if (IVp.InvType!=kInvoiceTypeCredit and IVp.InvType!=kInvoiceTypeCreditSpecialSales) then begin
                t = 1.00;
                switch (IVrw.stp) begin
                  case 11: t = -t;
                end;
              end else begin
                switch (IVrw.stp) begin
                  case 11: t = 1.00;
                  otherwise t = -1.00;
                end;
              end;  
              if (negf) then begin
                t = -t;
              end;

              serqty = blankval;
              serialnr = FirstInRange(IVrw.SerialNr,60);
              while (nonblank(serialnr)) begin
                UpdateSVOSerStock(IVrw.ArtCode,IVrw.Spec,serialnr,"","",cucode,name,
                                  IVrw.BasePrice,IVrw.Price,IVp.TransDate,blankd,t,"");
                UpdateSVOSerHist(IVrw.ArtCode,serialnr,"IVVc",IVp.SerNr,IVp.TransDate,IVp.CustCode,"");
                serqty = serqty + 1;
                serialnr = NextSerialNumber(IVrw.ArtCode,serialnr,SNrb);
                if (serqty>=IVrw.Quant) then begin serialnr = ""; end;
              end;
            end else begin          
              UpdateSVOSerStock(IVrw.ArtCode,IVrw.Spec,IVrw.SerialNr,IVrw.SecondarySerialNr,IVrw.AlternateDeviceID,cucode,name,
                                IVrw.BasePrice,IVrw.Price,IVp.TransDate,blankd,t,"");
              UpdateSVOSerHist(IVrw.ArtCode,IVrw.SerialNr,"IVVc",IVp.SerNr,IVp.TransDate,IVp.CustCode,"");
            end;
          end else begin
            UpdateSVOSerFromSH(IVp,i,t);
          end;
        end;
      end;    
    end;
  end;
  return;
end;
