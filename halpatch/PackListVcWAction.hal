//server-only
function boolean SumUp(integer wn,integer changed)
begin
	record PackListVc PackLr;
	row PackListVc PLrw;
	integer i,mtrw;
	val sumpack,sumweight,sumvolume;
	
	sumpack = 0;
	sumweight = 0;
	sumvolume = 0;
	
	getwindowrecord(wn,PackLr);
	mtrw = matrowcnt(PackLr);
	For(i=0;i<mtrw;i=i+1) begin
	  matrowget(PackLr,i,PLrw);
	  sumpack = sumpack + PLrw.Pack;
	  sumweight = sumweight + PLrw.Weight;
	  sumvolume = sumvolume + PLrw.Volume;
	end; 
	PackLr.SumPack = sumpack;
	PackLr.SumWeight = sumweight;
	PackLr.SumVolume = sumvolume;
	putwindowrecord(wn,PackLr);
	
	SumUp = true;
return;
end;

function boolean PasteVECode(integer wn,integer rownr,integer changed)
begin
	record PackListVc PackLr;
	row PackListVc PLrw;
	integer i,mtrw;
	record CUVc CUr;
		
		getwindowrecord(wn,PackLr);
		mtrw = matrowcnt(PackLr);
		if(rownr<mtrw)then begin
			matrowget(PackLr,rownr,PLrw);
			CUr.Code = PLrw.VECode;
			if(readfirstmain(CUr,1,true))then begin
				PLrw.VEName = CUr.Name;
				matrowput(PackLr,rownr,PLrw);
				putwindowrecord(wn,PackLr);
			end;
		end;
		
		PasteVECode = true;
		
return;
end;

global
function Boolean PackListDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;

  switch (fieldname) begin
    case "Pack": res = SumUp(wn,changed);
    case "Volume": res = SumUp(wn,changed);
    case "Weight": res = SumUp(wn,changed);
    case "VECode": res = PasteVECode(wn,rownr,changed);
  end;
  PackListDClassAfterEditField = res;
  RETURN;
END;

global
procedure PackListDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

