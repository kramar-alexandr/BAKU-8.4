global updating procedure ChangeCustomerInInvoice(record IVVc IVr,string newcust)
begin
  record IPrsVc IPrsr;
  boolean TrHs2;
  record IVVc credIVr;
  record IPVc IPr;
  row IPVc IPrw;
  integer i,rwcnt;
  
  logtext(0,IVr.SerNr & " newcust " & newcust);
  
  IVr.CustCode = newcust;
  recordstore(IVr,true);
  logtext(0,"ChangeCustomerInInvoice saved IVVc " & IVr.SerNr);
  
  IPrsr.IVNr = IVr.SerNr;
    TrHs2 = true;
    while (LoopKey("IVKey",IPrsr,1,TrHs2)) begin
      if (IPrsr.IVNr<>IVr.SerNr) then begin TrHs2 = false; end;
      if (TrHs2) then begin
        IPrsr.CustCode = newcust;
        //recorddelete(IPrsr);
        //recordstore(IPrsr,true);
        
        switch (IPrsr.TransType) begin
        case kIPrsTransTypeInvoice:
          if(IPrsr.TransNr!=IPrsr.IVNr)then begin
            credIVr.SerNr = IPrsr.TransNr;
            if (ReadFirstMain(credIVr,1,true)) then begin
              credIVr.CustCode = newcust;
              recordstore(credIVr,true);
              logtext(0,"ChangeCustomerInInvoice saved cred-IVVc " & credIVr.SerNr);
            end;
          end;
        case kIPrsTransTypeReceipt:
          IPr.SerNr = IPrsr.TransNr;
          if(readfirstmain(IPr,1,true))then begin
            rwcnt = matrowcnt(IPr);
            for(i=0;i<rwcnt;i=i+1) begin
              matrowget(IPr,i,IPrw);
              if(IPrw.InvoiceNr==IVr.SerNr)then begin
                IPrw.CustCode = newcust;
                matrowput(IPr,i,IPrw);
              end;
            end;
            recordstore(IPr,true);
            logtext(0,"ChangeCustomerInInvoice saved IPVc " & IPr.SerNr);
          end;

        end;
        
      end;
    end;
    
    
return;
end;

global webpublic procedure WebChanheProjectCustomerCodes()
begin
  area alist;
  integer length,i;
  string 100 comstr,ivserstr,custcode;
  record IVVc IVr;
  
  webgetpostdata(alist);
  
  length = countlinesinarea(alist);
  weboutstring("<table>");
  for(i=0;i<length;i=i+1)begin
    comstr = GetTabTextFromArea(i,0,alist);
    ivserstr = GetTabTextFromArea(i,1,alist);
    custcode = GetTabTextFromArea(i,2,alist);
    if(stringtoint(comstr)>0)then begin
        setcompany(stringtoint(comstr),false);
        IVr.SerNr = stringtolongint(ivserstr);
        if(readfirstmain(IVr,1,true) and IVr.CustCode!=custcode and nonblank(custcode))then begin
          weboutstring("<tr>");
          weboutstring("<td>" & comstr & "</td>");
          weboutstring("<td>" & IVr.SerNr & "</td>");
          weboutstring("<td>" & IVr.CustCode & "</td>");
          weboutstring("<td>" & custcode & "</td>");
          weboutstring("<td>" & IVr.PayDeal & "</td>");
          weboutstring("</tr>");
          qupdating.ChangeCustomerInInvoice(IVr,custcode);
        end;
    end;
  end;
  weboutstring("</table>");
  
return;
end;




global webpublic procedure WebFindErrorsnegQtyFifoIVVcPositions()
begin
	record IVVc IVr;
	row IVVc IVrw;
	val totcostpricecurncy, qty1;
	record ItemHistVc oldIHr;
	boolean TrHs, testf, findfcurcost, TrHs2;
	integer i;
		
  setcompany(stringtoint(webgetarg("compnr")),false);
  
  weboutstring("<table>");
	IVr.OKFlag = 1;
	TrHs2 = true;
	while (LoopKey("OKFlag",IVr,1,TrHs2)) begin
		if (IVr.OKFlag != 1) then begin TrHs2 = false; end;
		if (TrHs2 and !(IVr.Invalid>0)) then begin
			for (i=0;i<matrowcnt(IVr);i=i+1) begin
				matrowget(IVr,i,IVrw);
				totcostpricecurncy = 0;
				if (IVrw.Quant<0) then begin //Edit-------------------Vitalii 13:18 15.01.2016
					if (!(IVrw.FIFOCur>0)) then begin //Edit***************************Sasha2,12:47 20.05.2016 {
						//totcostpricecurncy = IVrw.FIFO * IHr.Qty;
						oldIHr.ArtCode = IVrw.ArtCode;
						oldIHr.FileName = "IVVc";
						qty1 = IVrw.Quant;
						ResetLoop(oldIHr);
						TrHs = true;
						findfcurcost = false;
						while (LoopBackKey("FNArtCode",oldIHr,2,TrHs)) begin
							if (oldIHr.ArtCode<>IVrw.ArtCode) then begin TrHs = false; end;
							if (qty1>=0) then begin TrHs = false; end;
							if (TrHs) then begin
								testf = true;
								if (oldIHr.FileName<>"IVVc") then begin testf = false; end;
								if (oldIHr.StockAffectf==0) then begin testf = false; end;
								//if (oldIHr.Qty>0) then begin testf = false; end;
								if (oldIHr.Location<>IVr.Location) then begin testf = false; end;
								if (oldIHr.TransNr>=IVr.SerNr) then begin testf = false; end;
								if (testf) then begin
									if (oldIHr.Qty<qty1) then begin
										totcostpricecurncy = totcostpricecurncy + oldIHr.TotCostPriceCurncy/oldIHr.Qty*qty1;
										findfcurcost = true;
										qty1 = 0;
									end else begin
										if (oldIHr.Qty>0) then begin
											totcostpricecurncy = totcostpricecurncy - oldIHr.TotCostPriceCurncy;
											findfcurcost = true;
										end else begin
											totcostpricecurncy = totcostpricecurncy + oldIHr.TotCostPriceCurncy;
											findfcurcost = true;
										end;
										qty1 = qty1 - oldIHr.Qty;
									end;
									if (qty1==0) then begin
										TrHs = false;
									end;
								end;
							end;
						end;  
						
						if (totcostpricecurncy<0) then begin // for case if there are no positive invoices (with qty>0). Just negative invoices (with qty<0).
							findfcurcost = false;
						end;
						if (qty1!=0 and findfcurcost) then begin
							// if ((totcostpricecurncy / -(IVrw.Quant - qty1)) - (totcostpricecurncy / -IVrw.Quant)>0.5 or (totcostpricecurncy / -(IVrw.Quant - qty1))==0) then begin
							weboutstring("<tr>");
							weboutstring("<td>" & IVr.SerNr & "</td>");
							weboutstring("<td>" & i+1 & "</td>");
							weboutstring("<td>" & IVrw.ArtCode & "</td>");
							weboutstring("<td>" & IVrw.Quant & "</td>");
							weboutstring("<td>" & qty1 & "</td>");
							weboutstring("<td>" & totcostpricecurncy / -(IVrw.Quant - qty1) & "</td>");
							weboutstring("<td>" & totcostpricecurncy / -IVrw.Quant & "</td>");
							weboutstring("</tr>");
							// end;
						end;
					end;
				end; 
			end;
		end;
	end;
	ResetLoop(IVr);
  weboutstring("</table>");
  
return;
end;













