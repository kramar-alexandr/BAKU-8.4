
global updating procedure ChangeCustomerInInvoice(record IVVc IVr,string newcust)
begin
  record IPrsVc IPrsr;
  boolean TrHs2;
  record IVVc credIVr;
  record IPVc IPr;
  row IPVc IPrw;
  integer i,rwcnt;
  
  logtext(0,IVr.SerNr & " newcust " & newcust);
  
  IVr.CustCode = newcust;
  recordstore(IVr,true);
  logtext(0,"ChangeCustomerInInvoice saved IVVc " & IVr.SerNr);
  
  IPrsr.IVNr = IVr.SerNr;
    TrHs2 = true;
    while (LoopKey("IVKey",IPrsr,1,TrHs2)) begin
      if (IPrsr.IVNr<>IVr.SerNr) then begin TrHs2 = false; end;
      if (TrHs2) then begin
        IPrsr.CustCode = newcust;
        //recorddelete(IPrsr);
        //recordstore(IPrsr,true);
        
        switch (IPrsr.TransType) begin
        case kIPrsTransTypeInvoice:
          if(IPrsr.TransNr!=IPrsr.IVNr)then begin
            credIVr.SerNr = IPrsr.TransNr;
            if (ReadFirstMain(credIVr,1,true)) then begin
              credIVr.CustCode = newcust;
              recordstore(credIVr,true);
              logtext(0,"ChangeCustomerInInvoice saved cred-IVVc " & credIVr.SerNr);
            end;
          end;
        case kIPrsTransTypeReceipt:
          IPr.SerNr = IPrsr.TransNr;
          if(readfirstmain(IPr,1,true))then begin
            rwcnt = matrowcnt(IPr);
            for(i=0;i<rwcnt;i=i+1) begin
              matrowget(IPr,i,IPrw);
              if(IPrw.InvoiceNr==IVr.SerNr)then begin
                IPrw.CustCode = newcust;
                matrowput(IPr,i,IPrw);
              end;
            end;
            recordstore(IPr,true);
            logtext(0,"ChangeCustomerInInvoice saved IPVc " & IPr.SerNr);
          end;

        end;
        
      end;
    end;
    
    
return;
end;

global webpublic procedure WebChanheProjectCustomerCodes()
begin
  area alist;
  integer length,i;
  string 100 comstr,ivserstr,custcode;
  record IVVc IVr;
  
  webgetpostdata(alist);
  
  length = countlinesinarea(alist);
  weboutstring("<table>");
  for(i=0;i<length;i=i+1)begin
    comstr = GetTabTextFromArea(i,0,alist);
    ivserstr = GetTabTextFromArea(i,1,alist);
    custcode = GetTabTextFromArea(i,2,alist);
    if(stringtoint(comstr)>0)then begin
        setcompany(stringtoint(comstr),false);
        IVr.SerNr = stringtolongint(ivserstr);
        if(readfirstmain(IVr,1,true) and IVr.CustCode!=custcode and nonblank(custcode))then begin
          weboutstring("<tr>");
          weboutstring("<td>" & comstr & "</td>");
          weboutstring("<td>" & IVr.SerNr & "</td>");
          weboutstring("<td>" & IVr.CustCode & "</td>");
          weboutstring("<td>" & custcode & "</td>");
          weboutstring("<td>" & IVr.PayDeal & "</td>");
          weboutstring("</tr>");
          qupdating.ChangeCustomerInInvoice(IVr,custcode);
        end;
    end;
  end;
  weboutstring("</table>");
  
return;
end;




global webpublic procedure WebFindErrorsnegQtyFifoIVVcPositions()
begin
	record IVVc IVr;
	row IVVc IVrw;
	val totcostpricecurncy, qty1, CurTCCP;
	record ItemHistVc oldIHr;
	boolean TrHs, testf, findfcurcost, TrHs2;
	integer i,rwcnt,j;
	record CompaniesBlock CBb;
	row CompaniesBlock CBbw;
		
		
  setcompany(stringtoint(webgetarg("compnr")),false);
  
	blockload(CBb);
	
  weboutstring("<table>");
	
		weboutstring("<tr>");
		weboutstring("<td>" & "IV No" & "</td>");
		weboutstring("<td>" & "Row" & "</td>");
		weboutstring("<td>" & "ArtCode" & "</td>");
		weboutstring("<td>" & "Qty" & "</td>");
		weboutstring("<td>" & "Shortage" & "</td>");
		weboutstring("<td>" & "Cost price in cur. (Current IV IH)" & "</td>");
		weboutstring("<td>" & "For existing IV IH (Cost price in cur)" & "</td>");
		weboutstring("<td>" & "IV-ret. mechan. result befor updates (Cost price in cur)" & "</td>");
		weboutstring("</tr>");
	
	rwcnt = MatRowCnt(CBb);
	for(j=0;j<rwcnt;j=j+1)begin
		MatRowGet(CBb,j,CBbw);
		SetCompany(j + 1,false);
		if(CBbw.ActiveStatus==0 and j+1!=10 and j+1!=32 and j+1!=18 and j+1!=29) then begin
			IVr.OKFlag = 1;
			TrHs2 = true;
			while (LoopKey("OKFlag",IVr,1,TrHs2)) begin
				if (IVr.OKFlag != 1) then begin TrHs2 = false; end;
				if (TrHs2 and !(IVr.Invalid>0)) then begin
					for (i=0;i<matrowcnt(IVr);i=i+1) begin
						matrowget(IVr,i,IVrw);
						totcostpricecurncy = 0;
						if (IVrw.Quant<0) then begin //Edit-------------------Vitalii 13:18 15.01.2016
							if (!(IVrw.FIFOCur>0)) then begin //Edit***************************Sasha2,12:47 20.05.2016 {
								//totcostpricecurncy = IVrw.FIFO * IHr.Qty;
								oldIHr.ArtCode = IVrw.ArtCode;
								oldIHr.FileName = "IVVc";
								qty1 = IVrw.Quant;
								ResetLoop(oldIHr);
								TrHs = true;
								findfcurcost = false;
								CurTCCP = 0;
								while (LoopBackKey("FNArtCode",oldIHr,2,TrHs)) begin
									if (oldIHr.ArtCode<>IVrw.ArtCode) then begin TrHs = false; end;
									if (qty1>=0) then begin TrHs = false; end;
									if (TrHs) then begin
										testf = true;
										if (oldIHr.FileName<>"IVVc") then begin testf = false; end;
										if (oldIHr.StockAffectf==0) then begin testf = false; end;
										//if (oldIHr.Qty>0) then begin testf = false; end;
										if (oldIHr.Location<>IVr.Location) then begin testf = false; end;
										if (oldIHr.TransNr>=IVr.SerNr) then begin testf = false; end;
										if (oldIHr.TransNr==IVr.SerNr) then begin CurTCCP = oldIHr.TotCostPriceCurncy / oldIHr.Qty; end;
										if (testf) then begin
											if (oldIHr.Qty<qty1) then begin
												totcostpricecurncy = totcostpricecurncy + oldIHr.TotCostPriceCurncy/oldIHr.Qty*qty1;
												findfcurcost = true;
												qty1 = 0;
											end else begin
												if (oldIHr.Qty>0) then begin
													totcostpricecurncy = totcostpricecurncy - oldIHr.TotCostPriceCurncy;
													findfcurcost = true;
												end else begin
													totcostpricecurncy = totcostpricecurncy + oldIHr.TotCostPriceCurncy;
													findfcurcost = true;
												end;
												qty1 = qty1 - oldIHr.Qty;
											end;
											if (qty1==0) then begin
												TrHs = false;
											end;
										end;
									end;
								end;  
								
								if (totcostpricecurncy<0) then begin // for case if there are no positive invoices (with qty>0). Just negative invoices (with qty<0).
									findfcurcost = false;
								end;
								if (qty1!=0 and findfcurcost) then begin
									// if ((totcostpricecurncy / -(IVrw.Quant - qty1)) - (totcostpricecurncy / -IVrw.Quant)>0.5 or (totcostpricecurncy / -(IVrw.Quant - qty1))==0) then begin
									weboutstring("<tr>");
									weboutstring("<td>" & IVr.SerNr & "</td>");
									weboutstring("<td>" & i+1 & "</td>");
									weboutstring("<td>" & IVrw.ArtCode & "</td>");
									weboutstring("<td>" & IVrw.Quant & "</td>");
									weboutstring("<td>" & qty1 & "</td>");
									weboutstring("<td>" & CurTCCP & "</td>");
									weboutstring("<td>" & totcostpricecurncy / -(IVrw.Quant - qty1) & "</td>");
									weboutstring("<td>" & totcostpricecurncy / -IVrw.Quant & "</td>");
									weboutstring("</tr>");
									// end;
								end;
							end;
						end; 
					end;
				end;
			end;
			ResetLoop(IVr);
		end;
	end;
  weboutstring("</table>");
  
return;
end;









global webpublic procedure WebOutErrorCurrency() 
begin
	record PLVc PLr;
	record GlobalItemVc GIr;
	record INVc INr;
	record CompaniesBlock CBb;
	row CompaniesBlock CBbw;
	integer i,rwcnt;
	array string 255 VCompName, VCurrency, VArtCode, VGlobalArtCode, VCompNum;
	vector val VPrice;
	array string 255 ACode;
	Boolean testf, TrHs;
	LongInt iter, num;
	
	BlockLoad(CBb);
	
	logtext(0,"================================================ Start WebOutErrorCurrency ================================================");
	
	weboutstring("<table>");
	weboutstring("<tr>");
	weboutstring("<td>" & "Company Num" & "</td>");
	weboutstring("<td>" & "Company Name" & "</td>");
	weboutstring("<td>" & "Global ArtCode" & "</td>");
	weboutstring("<td>" & "ArtCode" & "</td>");
	weboutstring("<td>" & "Price" & "</td>");
	weboutstring("<td>" & "Currency" & "</td>");
	weboutstring("</tr>");
	
	iter = 0;
	num = 0;
	rwcnt = MatRowCnt(CBb);
	for(i=0;i<rwcnt;i=i+1)begin
		MatRowGet(CBb,i,CBbw);
		if(SetCompany(i + 1,false)) then begin
			TrHs = true;
			PLr.PLCode = "RRP";
			while(LoopMain(PLr,1,TrHs))begin
				testf = true;
				if(PLr.PLCode != "RRP")then begin TrHs = false; testf = false; end;
				if(PLr.CurncyCode == "AZN" or blank(PLr.CurncyCode) or blankval==PLr.ExVatPrice or PLr.ExVatPrice==0)then begin testf = false; end;
				
				if(testf)then begin
					INr.Code = PLr.ArtCode;
					if(ReadFirstMain(INr,1,true))then begin
						if(nonblank(INr.GlobalArtCode))then begin
							GIr.Code = INr.GlobalArtCode;
							if(ReadFirstMain(GIr,1,true))then begin
								if(GIr.Price==PLr.ExVatPrice)then begin
								
									VCompNum[iter] = i + 1;
									VCompName[iter] = CBbw.CompName;
									VGlobalArtCode[iter] = GIr.Code;
									VArtCode[iter] = PLr.ArtCode;
									VPrice[iter] = GIr.Price;
									VCurrency[iter] = PLr.CurncyCode;
									
									iter = iter + 1;
									num = iter;
								end;
							end;
						end;
					end;
				end;
				
			end;
			ResetLoop(PLr);
		end;
	end;
	
	// GetVectorTags(VGlobalArtCode,ACode);
	// SortStringArray(ACode);
	
	for(iter=0;iter<num;iter=iter+1)begin
		weboutstring("<tr>");
		weboutstring("<td>" & VCompNum[iter] & "</td>");
		weboutstring("<td>" & VCompName[iter] & "</td>");
		weboutstring("<td>" & VGlobalArtCode[iter] & "</td>");
		weboutstring("<td>" & VArtCode[iter] & "</td>");
		weboutstring("<td>" & VPrice[iter] & "</td>");
		weboutstring("<td>" & VCurrency[iter] & "</td>");
		weboutstring("</tr>");
	end;
	weboutstring("<tr>");
		weboutstring("<td> Total: " & iter & " records </td>");
	weboutstring("</tr>");
	weboutstring("</table>");
	
	logtext(0,"================================================ End WebOutErrorCurrency ================================================");
return;
end;
