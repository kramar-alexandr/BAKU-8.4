//server-only
external function roundmode SetRoundModeD(Integer);
external updating procedure UpdatePrice(record PLVc);

global
function LongInt PricePointListVcRecordDefaults(var record PricePointListVc PPLr,record PricePointListVc PPL2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  
  PPLr.TransDate = CurrentDate;
  if (PPLr.SerNr<=0) then begin
    PPLr.SerNr = NextSerNr("PricePointListVc",PPLr.TransDate,-1,false,"");
  end; 
  PricePointListVcRecordDefaults = res; 
  RETURN;
END;

global
function LongInt PricePointListVcRecordDuplicate(var record PricePointListVc PPLr,record PricePointListVc PPL2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  PricePointListVcRecordDuplicate = res; 
  RETURN;
END;

global
function LongInt PricePointListVcRecordCheck(var record PricePointListVc PPLr,record PricePointListVc PPL2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  
  logtext(0,"PricePointListVcRecordCheck");  
  
  if (PPLr.SerNr<=0) then begin
    PPLr.SerNr = NextSerNr("PricePointListVc",PPLr.TransDate,-1,false,"");
  end; 
  
  res = 0;
  
  PricePointListVcRecordCheck = res;
  RETURN;
END;


global
function LongInt PricePointListVcRecordSave(var record PricePointListVc PPLr,record PricePointListVc PPL2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  
  PricePointListVcRecordSave = res;
  RETURN;
END;

global
updating function LongInt PricePointListVcRecordSaveAfter(var record PricePointListVc PPLr,record PricePointListVc PPL2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  row PricePointListVc PPLrw;
  integer i,mtrw;
  record PLVc PLr,oldPLr;
  record INVc INr,oldINr;
  record PricePointListVc oldPPLr;
  boolean testf,foundfVEitem;
  record PIVc PIr,oldPIr;
  
  if(PPLr.OKFlag==1 and PPLr.Closed==0)then begin
    testf = true;
    oldPPLr.SerNr = 999999;
    readlastmain(oldPPLr,1,true);
    if(oldPPLr.TransDate>PPLr.TransDate)then begin
      testf = false;
    end;
    
    if(oldPPLr.TransDate==PPLr.TransDate and oldPPLr.SerNr>PPLr.SerNr)then begin
      testf = false;
    end;
    
    if(testf)then begin
      mtrw = matrowcnt(PPLr);
      INr.Code = "";
      while(loopmain(INr,1,true))begin
      	if(nonblank(INr.CPSCode) and stringtoint(INr.CPSCode)>0)then begin
      	
					recordcopy(oldINr,INr);
					foundfVEitem = false;
					PIr.ItemCode = INr.Code;
					if(readfirstmain(PIr,1,true))then begin
						if(INr.Code==PIr.ItemCode)then begin
							recordcopy(oldPIr,PIr);
							foundfVEitem = true;
							if(PIr.PIFactor==0)then begin
                PIr.PIFactor = 1;
              end;
						end;
					end;        
        
          i = StringToInt(INr.CPSCode);
          if(i<=mtrw)then begin
						matrowget(PPLr,i-1,PPLrw);
          	if(PPLrw.Cost>0)then begin
							if(foundfVEitem)then begin
								PIr.PurPrice = PPLrw.Cost;
								INr.InPrice = PPLrw.Cost/PIr.PIFactor;
								if(PIr.PurPrice!=oldPIr.PurPrice)then begin
									RecordStore(PIr,true);
								end;
							end else begin
								INr.InPrice = PPLrw.Cost;
							end;
            end;
            if(INr.InPrice!=oldINr.InPrice)then begin
							RecordStore(INr,true);
            end;
            PLr.PLCode  = "RRP";
            PLr.ArtCode = INr.Code;
            if(readfirstmain(PLr,2,true))then begin   
            	recordcopy(oldPLr,PLr);  
              if(PLr.DonotRecalculate==0)then begin         
                if(foundfVEitem)then begin
                  if (INr.LastPurchCurncyCode=="USD") then begin
                    PLr.ExVatPrice = round(PPLrw.PriceUSD/PIr.PIFactor,SetRoundModeD(0));
                    PLr.CurncyCode = "";// Edit ************************** BPI Ukraine - KramarAlexandr - 01, 16 09 2019 y. at 5:01:18 PM
                  end else begin
                    PLr.ExVatPrice = round(PPLrw.Price/PIr.PIFactor,SetRoundModeD(0));
                    PLr.CurncyCode = "";// Edit ************************** BPI Ukraine - KramarAlexandr - 01, 16 09 2019 y. at 5:01:18 PM
                  end;
                end else begin
                  if (INr.LastPurchCurncyCode=="USD") then begin
                    PLr.ExVatPrice = PPLrw.PriceUSD;
                    PLr.CurncyCode = "";// Edit ************************** BPI Ukraine - KramarAlexandr - 01, 16 09 2019 y. at 5:00:54 PM
                  end else begin
                    PLr.ExVatPrice = PPLrw.Price;
                    PLr.CurncyCode = "";// Edit ************************** BPI Ukraine - KramarAlexandr - 01, 16 09 2019 y. at 5:00:56 PM
                  end;
                end;
                if(PLr.ExVatPrice!=oldPLr.ExVatPrice)then begin
									recordStore(PLr,true);
									UpdatePrice(PLr);
								end;
              end;
            end else begin
              recordNew(PLr);
              PLr.PLCode  = "RRP";
              PLr.ArtCode = INr.Code;
              PLr.Comment = INr.Name;
              if(foundfVEitem)then begin
                if (INr.LastPurchCurncyCode=="USD") then begin
                  PLr.ExVatPrice = round(PPLrw.PriceUSD/PIr.PIFactor,SetRoundModeD(0));
                end else begin
                  PLr.ExVatPrice = round(PPLrw.Price/PIr.PIFactor,SetRoundModeD(0));
                end;
              end else begin
                if (INr.LastPurchCurncyCode=="USD") then begin
                  PLr.ExVatPrice = PPLrw.PriceUSD;
                  PLr.CurncyCode = "";
                end else begin
                  PLr.ExVatPrice = PPLrw.Price;
                  PLr.CurncyCode = "";
                end;
              end;
              recordStore(PLr,true);
							UpdatePrice(PLr);
            end;
            
          end;
        end;
      end;
    end;
  end;
  PricePointListVcRecordSaveAfter = res;
  RETURN;
END;

global
function LongInt PricePointListVcRecordUpdate(var record PricePointListVc PPLr,record PricePointListVc PPL2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  PricePointListVcRecordUpdate = res;
  RETURN;
END;

global
updating function LongInt PricePointListVcRecordUpdateAfter(var record PricePointListVc PPLr,record PricePointListVc PPL2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  
  row PricePointListVc PPLrw;
  integer i,mtrw;
  record PLVc PLr;
  record INVc INr;
  record PricePointListVc oldPPLr;
  boolean testf,foundfVEitem;
  record PIVc PIr;
  
  if(PPLr.OKFlag==1 and PPL2r.OKFlag==0 and PPLr.Closed==0)then begin
    testf = true;
    oldPPLr.SerNr = 999999;
    readlastmain(oldPPLr,1,true);
    if(oldPPLr.TransDate>PPLr.TransDate)then begin
      testf = false;
    end;
    
    if(oldPPLr.TransDate==PPLr.TransDate and oldPPLr.SerNr>PPLr.SerNr)then begin
      testf = false;
    end;
    
    if(testf)then begin
      mtrw = matrowcnt(PPLr);
      INr.Code = "";
      while(loopmain(INr,1,true))begin
        foundfVEitem = false;
        PIr.ItemCode = INr.Code;
        if(readfirstmain(PIr,1,true))then begin
          if(INr.Code==PIr.ItemCode)then begin
            foundfVEitem = true;
            if(PIr.PIFactor==0)then begin
              PIr.PIFactor = 1;
            end;
          end;
        end;        
        if(nonblank(INr.CPSCode) and stringtoint(INr.CPSCode)>0)then begin
          i = StringToInt(INr.CPSCode);
          if(i<=mtrw)then begin
            matrowget(PPLr,i-1,PPLrw);
            if(PPLrw.Cost>0)then begin
							if(foundfVEitem)then begin
								PIr.PurPrice = PPLrw.Cost;
								INr.InPrice = PPLrw.Cost/PIr.PIFactor;
								RecordStore(PIr,true);
							end else begin
								INr.InPrice = PPLrw.Cost;
							end;
            end;
            RecordStore(INr,true);
            PLr.PLCode  = "RRP";
            PLr.ArtCode = INr.Code;
            if(readfirstmain(PLr,2,true))then begin 
              if(PLr.DonotRecalculate==0)then begin             
                if(foundfVEitem)then begin
                  if (INr.LastPurchCurncyCode=="USD") then begin
                    PLr.ExVatPrice = round(PPLrw.PriceUSD/PIr.PIFactor,SetRoundModeD(0));
                  end else begin
                    PLr.ExVatPrice = round(PPLrw.Price/PIr.PIFactor,SetRoundModeD(0));
                  end;
                end else begin
                  if (INr.LastPurchCurncyCode=="USD") then begin
                    PLr.ExVatPrice = PPLrw.PriceUSD;
                    PLr.CurncyCode = "";
                  end else begin
                    PLr.ExVatPrice = PPLrw.Price;
                    PLr.CurncyCode = "";
                  end;
                end;
                PLr.CurncyCode = "";
                recordStore(PLr,true);
								UpdatePrice(PLr);
              end;
            end else begin
              recordNew(PLr);
              PLr.PLCode  = "RRP";
              PLr.ArtCode = INr.Code;
              PLr.Comment = INr.Name;
              if(foundfVEitem)then begin
                if (INr.LastPurchCurncyCode=="USD") then begin
                  PLr.ExVatPrice = round(PPLrw.PriceUSD/PIr.PIFactor,SetRoundModeD(0));
                end else begin
                  PLr.ExVatPrice = round(PPLrw.Price/PIr.PIFactor,SetRoundModeD(0));
                end;
              end else begin
                if (INr.LastPurchCurncyCode=="USD") then begin
                  PLr.ExVatPrice = PPLrw.PriceUSD;
                  PLr.CurncyCode = "";
                end else begin
                  PLr.ExVatPrice = PPLrw.Price;
                  PLr.CurncyCode = "";
                end;
              end;
              recordStore(PLr,true);
							UpdatePrice(PLr);
            end;
          end;
        end;
      end;
    end;
  end;
  PricePointListVcRecordUpdateAfter = res;
  RETURN;
END;

global
updating function LongInt PricePointListVcRecordRemoveAfter(var record PricePointListVc PPLr,record PricePointListVc PPL2r,LongInt stat,LongInt long4)
begin
  LongInt res;

  PricePointListVcRecordRemoveAfter = res;
  RETURN;
END;

global
function LongInt PricePointListVcRecordRemoveTest(var record PricePointListVc PPLr,record PricePointListVc PPL2r,LongInt long3,LongInt long4)
begin
  LongInt res;
  
  res = 1;
  if(PPLr.OKFlag>0)then begin
    res = 0;
  end;
  
  PricePointListVcRecordRemoveTest = res;  
  return;
end;

