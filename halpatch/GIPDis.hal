external function roundmode SetRoundModeD(Integer);
external function val DivWithRateToBase1(string,Date,val,roundmode);
external function val MulWithRateToBase1(var string,Date,val,roundmode);
external function Boolean GetItemNameStr(Integer,var string,string,string,string);
external function string 60 AddObjectToObjectList(string,string);


global
procedure PriceFormCalc(record PFormVc PFormr,record INVc INr,var val price)
begin
  record PLDefVc PLDBaser;
  record PLVc PLr;
  record PIVc PIr;
  boolean testf;
  integer base;
  val basicprice;

  testf = true;

  if blank(PFormr.Perc) then begin
    testf = false;
  end;
  if (testf) then begin
    if (PFormr.SelBase==0) then begin
      basicprice = INr.InPrice;
    end;
    if (PFormr.SelBase==1) then begin
      basicprice = INr.UPrice1;
    end;
    if (PFormr.SelBase==2) then begin
      basicprice = INr.LastPurchPrice2;
    end;
    if (PFormr.SelBase==3) then begin
      basicprice = INr.WeighedAvPrice;
    end;
    if (PFormr.SelBase==4) then begin
      PIr.DefaultChoice = 1;
      PIr.ItemCode = INr.Code;
      if (ReadFirstKey("DefaultChoice",PIr,2,true)) then begin
        basicprice = PIr.PurPrice;
      end else begin
        basicprice = INr.UPrice1;
      end;
    end;
    if (PFormr.SelBase==5) then begin
      PLDBaser.Code = PFormr.BasePriceList;
      if (ReadFirstMain(PLDBaser,1,true)) then begin
        PLr.PLCode = PFormr.BasePriceList;
        PLr.ArtCode = INr.Code;
        if (ReadFirstMain(PLr,2,true)) then begin
          basicprice = PLr.ExVatPrice;
        end;
      end;
    end;
    price = basicprice * (PFormr.Perc/100);
    if nonblank(PFormr.Add1Val) then begin
      price = price + PFormr.Add1Val;
    end;
    if nonblank(PFormr.RndTo) then begin
      if (PFormr.RndTo==-3) then begin
        PFormr.RndTo = -4; //Edit***************************Sasha2,14:57 03.06.2015
      end;
      price = Round(price,SetRoundModeD(PFormr.RndTo));
    end;
    if nonblank(PFormr.Add2Val) then begin
      price = price + PFormr.Add2Val;
    end;
  end;

  RETURN;
END;

global
function Integer GetStaffNr(var val limvalp,record StaffVc Staffr)
BEGIN
  Integer staffnr;
  
  staffnr = 0;
  if (limvalp<=0) then begin goto LGetStaffNr; end;
  if (Staffr.Lim1<0) then begin goto LGetStaffNr; end;
  if (limvalp<Staffr.Lim1) then begin goto LGetStaffNr; end;
  staffnr = 1;
  if (Staffr.Lim2<=0) then begin goto LGetStaffNr; end;
  if (limvalp<Staffr.Lim2) then begin goto LGetStaffNr; end;
  staffnr = 2;
  if (Staffr.Lim3<=0) then begin goto LGetStaffNr; end;
  if (limvalp<Staffr.Lim3) then begin goto LGetStaffNr; end;
  staffnr = 3;
  if (Staffr.Lim4<=0) then begin goto LGetStaffNr; end;
  if (limvalp<Staffr.Lim4) then begin goto LGetStaffNr; end;
  staffnr = 4;
  if (Staffr.Lim5<=0) then begin goto LGetStaffNr; end;
  if (limvalp<Staffr.Lim5) then begin goto LGetStaffNr; end;
  staffnr = 5;
  if (Staffr.Lim6<=0) then begin goto LGetStaffNr; end;
  if (limvalp<Staffr.Lim6) then begin goto LGetStaffNr; end;
  staffnr = 6;
  if (Staffr.Lim7<=0) then begin goto LGetStaffNr; end;
  if (limvalp<Staffr.Lim7) then begin goto LGetStaffNr; end;
  staffnr = 7;
  if (Staffr.Lim8<=0) then begin goto LGetStaffNr; end;
  if (limvalp<Staffr.Lim8) then begin goto LGetStaffNr; end;
  staffnr = 8;
  if (Staffr.Lim9<=0) then begin goto LGetStaffNr; end;
  if (limvalp<Staffr.Lim9) then begin goto LGetStaffNr; end;
  staffnr = 9;
LGetStaffNr:;
  GetStaffNr = staffnr;
  RETURN;
END;

global
procedure GetStaffReb(record INVc INr,string staffcode,val qtp,var val pricep,record RebVc Rebr,
                      Integer rownr,var val rebvp,var Boolean foundstaff)
BEGIN
  record StaffVc Staffr;
  Integer staffnr;
  val limval;
  row RebVc Rebrw;
  
  staffnr = 0;
  if (nonblank(staffcode)) then begin
    Staffr.Code = staffcode;
    if (ReadFirstMain(Staffr,1,true)) then begin
      foundstaff = true;
      limval = -1;
      if (StaffR.StaffType==0) then begin
        limval = qtp*pricep;
      end;
      if (StaffR.StaffType==2) then begin
        limval = qtp*INr.Weight;
      end;
      if (StaffR.StaffType==3) then begin
        limval = qtp*INr.Volume;
      end;
      if (limval==-1) then begin
        limval = qtp;
      end;
      staffnr = GetStaffNr(limval,Staffr);
    end;
  end;
  if (rownr>=0) then begin
    MatRowGet(Rebr,rownr,Rebrw);
    if (staffnr==0) then begin
      rebvp = Rebrw.vra0;
    end;
    if (staffnr==1) then begin
      rebvp = Rebrw.vra1;
    end;
    if (staffnr==2) then begin
      rebvp = Rebrw.vra2;
    end;
    if (staffnr==3) then begin
      rebvp = Rebrw.vra3;
    end;
    if (staffnr==4) then begin
      rebvp = Rebrw.vra4;
    end;
    if (staffnr==5) then begin
      rebvp = Rebrw.vra5;
    end;
    if (staffnr==6) then begin
      rebvp = Rebrw.vra6;
    end;
    if (staffnr==7) then begin
      rebvp = Rebrw.vra7;
    end;
    if (staffnr==8) then begin
      rebvp = Rebrw.vra8;
    end; 
    if (staffnr==9) then begin
      rebvp = Rebrw.vra9;
    end;
  end else begin
    if (staffnr==0) then begin
      rebvp = Rebr.vra0;
    end;
    if (staffnr==1) then begin
      rebvp = Rebr.vra1;
    end;
    if (staffnr==2) then begin
      rebvp = Rebr.vra2;
    end;
    if (staffnr==3) then begin
      rebvp = Rebr.vra3;
    end;
    if (staffnr==4) then begin
      rebvp = Rebr.vra4;
    end;
    if (staffnr==5) then begin
      rebvp = Rebr.vra5;
    end;
    if (staffnr==6) then begin
      rebvp = Rebr.vra6;
    end;
    if (staffnr==7) then begin
      rebvp = Rebr.vra7;
    end;
    if (staffnr==8) then begin
      rebvp = Rebr.vra8;
    end;
    if (staffnr==9) then begin
      rebvp = Rebr.vra9;
    end;
  end;  
  RETURN;
END;

global
function Boolean GetRebate(record INVc INr,var val pricep,var val qtp,string cucat,string reb2code,var val rebvp,var Boolean foundstaff,Date tdp,string location)
BEGIN
  Boolean res;
  record CCatVc CCatr;
  record RebVc Rebr;
  row RebVc Rebrw;
  Integer rwcnt;
  Integer i;
  string 5 rebcode;
  Boolean rebfound,testf;// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 17 April 2018 10:22:35
  string 20 temprebcode; // Edit ************************** Friday, 30 August 2013 11:45:23
  boolean findreb; // Edit ************************** Friday, 30 August 2013 11:45:23
  integer checkin; // Edit ************************** Friday, 30 August 2013 11:45:23
  record MyRebVc MyRebr;// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 16 April 2018 10:42:44
  row MyRebVc MyRebrw;// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 16 April 2018 10:42:45
  val origrebvp;
  boolean addflag;
  
  
  addflag = true;
  rebvp = 0;
  rebcode = reb2code;
  if (blank(rebcode)) then begin
    if (nonblank(cucat)) then begin
      CCatr.Code = cucat;
      if (ReadFirstMain(CCatr,1,true)) then begin
        if (nonblank(CCatr.RebCode)) then begin
          rebcode = CCatr.RebCode;
        end;
      end;
    end;
  end;  
  if (nonblank(rebcode)) then begin
    temprebcode  = rebcode; //edited by BPI
    findreb = true;  //edited by BPI
    checkin = 0;  //edited by BPI
    while(findreb)begin  //edited by BPI
			if (GetYear(tdp)>0) then begin
				Rebr.Replaces = rebcode;
				Rebr.FromDate = tdp;
				rebfound = ReadLastKey("Replaces",Rebr,2,false); 
				if (Rebr.Replaces<>rebcode) then begin rebfound = false; end;
				if (DateInRange(tdp,Rebr.FromDate,Rebr.ToDate)==false) then begin rebfound = false; end;
				if (rebfound) then begin rebcode = Rebr.Code; end;
			end;  
			if (rebfound==false) then begin
				Rebr.Code = rebcode;
				rebfound = ReadFirstMain(Rebr,1,true);
				findreb = false; //edited by BPI {
			end; 
			
			checkin = checkin + 1;
			If(checkin>20) then begin
				findreb  = false;
			end; //edited by BPI }
    end;
    if (rebfound and GetYear(tdp)>0) then begin
      if (DateInRange(tdp,Rebr.FromDate,Rebr.ToDate)==false) then begin rebfound = false; end;
    end;
    if (rebfound) then begin
      if(nonblank(Rebr.AddObject))then begin
        addflag = false;
      end;
      rwcnt = MatRowCnt(Rebr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(Rebr,i,Rebrw);
        if (Rebrw.CodeType==0) then begin
          if(nonblank(INr.RebGroup))then begin //edited by BPI {
            if (INr.RebGroup==Rebrw.ITCode) then begin
              GetStaffReb(INr,Rebrw.StaffCode,qtp,pricep,Rebr,i,rebvp,foundstaff);
              res = true;
              goto LGetRebate;
             end;
          end;  //edited by BPI }
          if (INr.Group==Rebrw.ITCode) then begin
//            GetStaffReb(INr,Rebrw.StaffCode,qtp,pricep,Rebr,rebvp,foundstaff);
            GetStaffReb(INr,Rebrw.StaffCode,qtp,pricep,Rebr,i,rebvp,foundstaff);
            res = true;
            goto LGetRebate;
          end;
        end;
        if (Rebrw.CodeType==1) then begin
          if (INr.Code==Rebrw.ITCode) then begin
            GetStaffReb(INr,Rebrw.StaffCode,qtp,pricep,Rebr,i,rebvp,foundstaff);
            res = true;
            goto LGetRebate;
          end;
        end;
      end;
      GetStaffReb(INr,Rebr.StaffCode,qtp,pricep,Rebr,-1,rebvp,foundstaff);
      res = true;
    end;
    
    // Edit Start ---------------------------------------------- Edit Start
	//Monday, 16 April 2018 10:42:06
	
    
    
	// Edit End ---------------------------------------------- Edit End
	
	/*
	if(Inr.Code==MyRebrw.ITCode) then begin
		
	end;
	*/
  end;
LGetRebate:;
	origrebvp = rebvp;
	
	if(nonblank(reb2code) and addflag)then begin
		MyRebr.Code = "";
		while(loopmain(MyRebr,1,true))begin
			if(true)then begin
				if(DateInRange(tdp,MyRebr.FromDate,MyRebr.ToDate))then begin
					testf = true;
					if(tdp==MyRebr.FromDate and MyRebr.FromDate==currentdate)then begin
						if(nonblanktime(MyRebr.FromTime) and MyRebr.FromTime>currenttime)then begin
							testf = false;
						end;
					end;
					if(tdp==MyRebr.ToDate and MyRebr.ToDate==currentdate)then begin
						if(nonblanktime(MyRebr.ToTime) and MyRebr.ToTime<currenttime)then begin
							testf = false;
						end;
					end;
					
					if(nonblank(MyRebr.Locations))then begin
						if(!setinset(location,MyRebr.Locations) or blank(location))then begin
							testf = false;
						end;
					end;
					
					if(testf)then begin
						rwcnt = MatRowCnt(MyRebr);
						for (i=0;i<rwcnt;i=i+1) begin
							MatRowGet(MyRebr,i,MyRebrw);
						
							if(MyRebrw.CodeType==0)then begin
								if(INr.Group==MyRebrw.ITCode)then begin
									rebvp = MyRebrw.vra0;
									if(MyRebrw.vra0==-1)then begin
										rebvp = origrebvp;
									end;
								end;
							end;
							if(MyRebrw.CodeType==1)then begin
								if(INr.Code==MyRebrw.ITCode)then begin
									rebvp = MyRebrw.vra0;
									if(MyRebrw.vra0==-1)then begin
										rebvp = origrebvp;
									end;
								end;
							end;
						
						end;
					end;
				end;
			end;
		end;    
	end;
	
	
	if(INr.Code=="GLOBALGIFTCARD")then begin// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 31 August 2018 11:14:07
		rebvp = blankval;
	end;

  GetRebate = res;
  RETURN;
END;




global
function Boolean GetRebate2(record INVc INr,var val pricep,var val qtp,string cucat,string reb2code,var val rebvp,var Boolean foundstaff,Date tdp,var string Object)
BEGIN
  Boolean res;
  record CCatVc CCatr;
  record RebVc Rebr,OrRebr;
  row RebVc Rebrw;
  Integer rwcnt;
  Integer i;
  string 5 rebcode;
  Boolean rebfound,testf;// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 17 April 2018 10:22:35
  string 20 temprebcode; // Edit ************************** Friday, 30 August 2013 11:45:23
  boolean findreb; // Edit ************************** Friday, 30 August 2013 11:45:23
  integer checkin; // Edit ************************** Friday, 30 August 2013 11:45:23
  record MyRebVc MyRebr;// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 16 April 2018 10:42:44
  row MyRebVc MyRebrw;// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 16 April 2018 10:42:45
  boolean addflag;
  
  OrRebr.Code = reb2code;
  ReadFirstMain(OrRebr,1,true);
  
  addflag = true;
  
  rebvp = 0;
  rebcode = reb2code;
  //if(currentcompany!=25)then begin// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 8 December 2017 14:22:55
		if (blank(rebcode)) then begin
			if (nonblank(cucat)) then begin
				CCatr.Code = cucat;
				if (ReadFirstMain(CCatr,1,true)) then begin
					if (nonblank(CCatr.RebCode)) then begin
						rebcode = CCatr.RebCode;
					end;
				end;
			end;
		end;  
  //end;    
  if (nonblank(rebcode)) then begin
    temprebcode  = rebcode; //edited by BPI
    findreb = true;  //edited by BPI
    checkin = 0;  //edited by BPI
    while(findreb)begin  //edited by BPI
			if (GetYear(tdp)>0) then begin
				Rebr.Replaces = rebcode;
				Rebr.FromDate = tdp;
				rebfound = ReadLastKey("Replaces",Rebr,2,false); 
				if (Rebr.Replaces<>rebcode) then begin rebfound = false; end;
				if (DateInRange(tdp,Rebr.FromDate,Rebr.ToDate)==false) then begin rebfound = false; end;
				if (rebfound) then begin rebcode = Rebr.Code; end;
			end;  
			if (rebfound==false) then begin
				Rebr.Code = rebcode;
				rebfound = ReadFirstMain(Rebr,1,true);
				findreb = false; //edited by BPI {
			end; 
			
			checkin = checkin + 1;
			If(checkin>20) then begin
				findreb  = false;
			end; //edited by BPI }
    end;
    if (rebfound and GetYear(tdp)>0) then begin
      if (DateInRange(tdp,Rebr.FromDate,Rebr.ToDate)==false) then begin rebfound = false; end;
    end;
    if (rebfound) then begin
      
      if(nonblank(Rebr.AddObject))then begin
        addflag = false;
        logtext(0,"Rebr.vra0 " & Rebr.vra0);
        logtext(0,"OrRebr.vra0 " & OrRebr.vra0);
      end;

    	if(Rebr.vra0!=OrRebr.vra0)then begin// Edit ************************** BPI Ukraine - KramarAlexandr - 02, 15 09 2020 y. at 10:55:46 AM
				Object = Rebr.Object;
				Object = AddObjectToObjectList(Object,Rebr.AddObject);
    	end;
      rwcnt = MatRowCnt(Rebr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(Rebr,i,Rebrw);
        if (Rebrw.CodeType==0) then begin
          if(nonblank(INr.RebGroup))then begin //edited by BPI {
            if (INr.RebGroup==Rebrw.ITCode) then begin
              GetStaffReb(INr,Rebrw.StaffCode,qtp,pricep,Rebr,i,rebvp,foundstaff);
							if(blank(Rebrw.MtObject))then begin
								Object = Rebr.Object;
								Object = AddObjectToObjectList(Object,Rebr.AddObject);
							end else begin
								Object = Rebrw.MtObject;
								Object = AddObjectToObjectList(Object,Rebr.AddObject);
							end;
              res = true;
              goto LGetRebate;
             end;
          end;  //edited by BPI }
          if (INr.Group==Rebrw.ITCode) then begin
//            GetStaffReb(INr,Rebrw.StaffCode,qtp,pricep,Rebr,rebvp,foundstaff);
            GetStaffReb(INr,Rebrw.StaffCode,qtp,pricep,Rebr,i,rebvp,foundstaff);
						if(blank(Rebrw.MtObject))then begin
							Object = Rebr.Object;
							Object = AddObjectToObjectList(Object,Rebr.AddObject);
						end else begin
							Object = Rebrw.MtObject;
							Object = AddObjectToObjectList(Object,Rebr.AddObject);
						end;
            res = true;
            goto LGetRebate;
          end;
        end;
        if (Rebrw.CodeType==1) then begin
          if (INr.Code==Rebrw.ITCode) then begin
            GetStaffReb(INr,Rebrw.StaffCode,qtp,pricep,Rebr,i,rebvp,foundstaff);
						if(blank(Rebrw.MtObject))then begin
							Object = Rebr.Object;
							Object = AddObjectToObjectList(Object,Rebr.AddObject);
						end else begin
							Object = Rebrw.MtObject;
							Object = AddObjectToObjectList(Object,Rebr.AddObject);
						end;
            res = true;
            goto LGetRebate;
          end;
        end;
      end;
      GetStaffReb(INr,Rebr.StaffCode,qtp,pricep,Rebr,-1,rebvp,foundstaff);
      res = true;
    end;
    
    // Edit Start ---------------------------------------------- Edit Start
	//Monday, 16 April 2018 10:42:06
	
    
    
	// Edit End ---------------------------------------------- Edit End
	
	/*
	if(Inr.Code==MyRebrw.ITCode) then begin
		
	end;
	*/
  end;
LGetRebate:;
  
  
  if(addflag==false)then begin
    logtext(0,INr.Code & " Object " & Object);
  end;
  
	if(nonblank(reb2code) and addflag)then begin
		MyRebr.Code = "";
		while(loopmain(MyRebr,1,true))begin
			if(true)then begin
				if(DateInRange(tdp,MyRebr.FromDate,MyRebr.ToDate))then begin
					testf = true;
					if(tdp==MyRebr.FromDate and MyRebr.FromDate==currentdate)then begin
						if(nonblanktime(MyRebr.FromTime) and MyRebr.FromTime>currenttime)then begin
							testf = false;
						end;
					end;
					if(tdp==MyRebr.ToDate and MyRebr.ToDate==currentdate)then begin
						if(nonblanktime(MyRebr.ToTime) and MyRebr.ToTime<currenttime)then begin
							testf = false;
						end;
					end;
					
					if(testf)then begin
						rwcnt = MatRowCnt(MyRebr);
						for (i=0;i<rwcnt;i=i+1) begin
							MatRowGet(MyRebr,i,MyRebrw);
						
							if(MyRebrw.CodeType==0)then begin
								if(INr.Group==MyRebrw.ITCode)then begin
									rebvp = MyRebrw.vra0;
									res = true;
									if(blank(MyRebrw.MtObject))then begin
										Object = MyRebr.Object;
									end else begin
										Object = MyRebrw.MtObject;
									end;
								end;
							end;
							if(MyRebrw.CodeType==1)then begin
								if(INr.Code==MyRebrw.ITCode)then begin
									rebvp = MyRebrw.vra0;
									res = true;
									if(blank(MyRebrw.MtObject))then begin
										Object = MyRebr.Object;
									end else begin
										Object = MyRebrw.MtObject;
									end;
								end;
							end;
						end;
					end;
				end;
			end;
		end;    
	end;
	
	
	if(INr.Code=="GLOBALGIFTCARD")then begin// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 31 August 2018 11:14:07
		rebvp = blankval;
	end;
	
  GetRebate2 = res;
  RETURN;
END;



global
function Boolean GetRebate2forreport(record INVc INr,var val pricep,var val qtp,string cucat,string reb2code,var val rebvp,var Boolean foundstaff,Date tdp,var string Object)
BEGIN
  Boolean res;
  record CCatVc CCatr;
  record RebVc Rebr,OrRebr;
  row RebVc Rebrw;
  Integer rwcnt;
  Integer i;
  string 5 rebcode;
  Boolean rebfound,testf;// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 17 April 2018 10:22:35
  string 20 temprebcode; // Edit ************************** Friday, 30 August 2013 11:45:23
  boolean findreb; // Edit ************************** Friday, 30 August 2013 11:45:23
  integer checkin; // Edit ************************** Friday, 30 August 2013 11:45:23
  record MyRebVc MyRebr;// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 16 April 2018 10:42:44
  row MyRebVc MyRebrw;// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 16 April 2018 10:42:45

  OrRebr.Code = reb2code;
  ReadFirstMain(OrRebr,1,true);
  
  rebvp = 0;
  rebcode = reb2code;
	if (blank(rebcode)) then begin
		if (nonblank(cucat)) then begin
			CCatr.Code = cucat;
			if (ReadFirstMain(CCatr,1,true)) then begin
				if (nonblank(CCatr.RebCode)) then begin
					rebcode = CCatr.RebCode;
				end;
			end;
		end;
	end;  
  if (nonblank(rebcode)) then begin
    temprebcode  = rebcode; //edited by BPI
    findreb = true;  //edited by BPI
    checkin = 0;  //edited by BPI
    while(findreb)begin  //edited by BPI
			if (GetYear(tdp)>0) then begin
				Rebr.Replaces = rebcode;
				Rebr.FromDate = tdp;
				rebfound = ReadLastKey("Replaces",Rebr,2,false); 
				if (Rebr.Replaces<>rebcode) then begin rebfound = false; end;
				if (DateInRange(tdp,Rebr.FromDate,Rebr.ToDate)==false) then begin rebfound = false; end;
				if (rebfound) then begin rebcode = Rebr.Code; end;
			end;  
			if (rebfound==false) then begin
				Rebr.Code = rebcode;
				rebfound = ReadFirstMain(Rebr,1,true);
				findreb = false; //edited by BPI {
			end; 
			
			checkin = checkin + 1;
			If(checkin>20) then begin
				findreb  = false;
			end; //edited by BPI }
    end;
    if (rebfound and GetYear(tdp)>0) then begin
      if (DateInRange(tdp,Rebr.FromDate,Rebr.ToDate)==false) then begin rebfound = false; end;
    end;
    if (rebfound) then begin
    	if(Rebr.vra0!=OrRebr.vra0)then begin// Edit ************************** BPI Ukraine - KramarAlexandr - 02, 15 09 2020 y. at 10:55:46 AM
				Object = "Store Discount:" & Rebr.Comment;
    	end;
      rwcnt = MatRowCnt(Rebr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(Rebr,i,Rebrw);
        if (Rebrw.CodeType==0) then begin
          if(nonblank(INr.RebGroup))then begin //edited by BPI {
            if (INr.RebGroup==Rebrw.ITCode) then begin
              GetStaffReb(INr,Rebrw.StaffCode,qtp,pricep,Rebr,i,rebvp,foundstaff);
							Object = "Store Discount:" & Rebr.Comment;
              res = true;
              goto LGetRebateForReport;
             end;
          end;  //edited by BPI }
          if (INr.Group==Rebrw.ITCode) then begin
            GetStaffReb(INr,Rebrw.StaffCode,qtp,pricep,Rebr,i,rebvp,foundstaff);
            res = true;
            Object = "Store Discount:" & Rebr.Comment;
            goto LGetRebateForReport;
          end;
        end;
        if (Rebrw.CodeType==1) then begin
          if (INr.Code==Rebrw.ITCode) then begin
            GetStaffReb(INr,Rebrw.StaffCode,qtp,pricep,Rebr,i,rebvp,foundstaff);
            res = true;
            Object = "Store Discount:" & Rebr.Comment;
            goto LGetRebateForReport;
          end;
        end;
      end;
      GetStaffReb(INr,Rebr.StaffCode,qtp,pricep,Rebr,-1,rebvp,foundstaff);
      res = true;
    end;
    

  end;
LGetRebateForReport:;

	if(nonblank(reb2code))then begin
		MyRebr.Code = "";
		while(loopmain(MyRebr,1,true))begin
			if(true)then begin
				if(DateInRange(tdp,MyRebr.FromDate,MyRebr.ToDate))then begin
					testf = true;
					if(tdp==MyRebr.FromDate and MyRebr.FromDate==currentdate)then begin
						if(nonblanktime(MyRebr.FromTime) and MyRebr.FromTime>currenttime)then begin
							testf = false;
						end;
					end;
					if(tdp==MyRebr.ToDate and MyRebr.ToDate==currentdate)then begin
						if(nonblanktime(MyRebr.ToTime) and MyRebr.ToTime<currenttime)then begin
							testf = false;
						end;
					end;
					
					if(testf)then begin
						rwcnt = MatRowCnt(MyRebr);
						for (i=0;i<rwcnt;i=i+1) begin
							MatRowGet(MyRebr,i,MyRebrw);
						
							if(MyRebrw.CodeType==0)then begin
								if(INr.Group==MyRebrw.ITCode)then begin
									rebvp = MyRebrw.vra0;
									Object = "Temp Discount:" & MyRebr.Comment;
									res = true;
									if(blank(MyRebrw.MtObject))then begin
										Object = MyRebr.Object;
									end else begin
										Object = MyRebrw.MtObject;
									end;
								end;
							end;
							if(MyRebrw.CodeType==1)then begin
								if(INr.Code==MyRebrw.ITCode)then begin
									rebvp = MyRebrw.vra0;
									res = true;
									Object = "Temp Discount: " & MyRebr.Comment;
								end;
							end;
						end;
					end;
				end;
			end;
		end;    
	end;
	
	if(INr.Code=="GLOBALGIFTCARD")then begin// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 31 August 2018 11:14:07
		rebvp = blankval;
		Object = "";
	end;

  GetRebate2forreport = res;
  RETURN;
END;







global
procedure GetStructureCostPrice(string recepy,var val costp)
BEGIN
  record INVc INr;
  record RecVc Recr;
  row RecVc Recrw;
  Integer rwcnt,i;
  val res,tot;

  costp = blankval;
  Recr.Code = recepy;
  if (ReadFirstMain(Recr,1,true)) then begin
    rwcnt = MatRowCnt(Recr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(Recr,i,Recrw);
      if (Recrw.InQty>0) then begin
        res = 0;
        INr.Code = Recrw.Item;
        if (ReadFirstMain(INr,1,true)) then begin
          res = res + INr.InPrice;
          res = res + INr.ExtraCost;
        end;
        res = res * Recrw.InQty;
        tot = tot + res;
      end;
    end;
    costp = tot;
  end;
  RETURN;
END;

global
procedure FindPLQPrice(record PLQVc PLQr,record INVc INr,var val qtyp,var val tpricep)
BEGIN
  row PLQVc PLQrw;
  record PFormVc PFormr;
  Integer i,rwcnt;
  val qty;
  
  qty = qtyp;
  tpricep = 0;
  if (qty==0) then begin qty = 1; end;
  rwcnt = MatRowCnt(PLQr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(PLQr,i,PLQrw);
    if (PLQrw.QtyLimit<=qty) then begin
      if (nonblank(PLQrw.Formulae)) then begin
        PFormr.Code = PLQrw.Formulae;
        if (ReadFirstMain(PFormr,1,true)) then begin
          PriceFormCalc(PFormr,INr,tpricep)
        end else begin
          tpricep = PLQrw.ExVatPrice;
        end;
      end else begin
        tpricep = PLQrw.ExVatPrice;
      end;
    end;
  end;
  RETURN;
END;

/* Shouldn't be used, GetItemPriceDiscount3 is the proper one!!! */
global
function Boolean GetItemPriceDiscount2(string item,record INVc INr,val qtp,string crncycode,
         string langcode,string custcat,string pricelist,string rebcode,
         var val price,var string descstr,var val discount,
         var val basepricep,Integer aexport,var Boolean calcpricef,Date tdp)
BEGIN
  Boolean res;
//  record INVc INr;  
  record PLVc PLr;
  record PLQVc PLQr;
  record PLDefVc PLDefr;
  Boolean pldeffound,infound,qtydepf,foundstaff,skipf;
  val tprice,tdisc;
  string 255 lang2,pricelist2,location;// Edit ************************** BPI Ukraine - KramarAlexandr - 05, 29 11 2019 y. at 10:37:07 AM
  val fr,to1,to2,br1,br2;  
  
  res = false;
  pldeffound = false;  
  foundstaff = false;
  qtydepf = false;
  calcpricef = false;
//  tprice = inprice;
//  tdisc = indiscount;
  pricelist2 = pricelist;
  descstr = "";
  /*
  INr.Code = item;
  infound = ReadFirstMain(INr,1,true);
  */
  if (nonblank(INr.Code)) then begin infound = true; end;
  if (INr.Terminated<>0) then begin infound = false; end;
  if (infound) then begin
    if (nonblank(INr.CalcPrice)) then begin
      calcpricef = true;
    end;    
    res = true;
    tprice = INr.UPrice1;
    if (nonblank(pricelist2)) then begin
      if (GetYear(tdp)>0) then begin
        PLDefr.PLReplCode = pricelist2;
        PLDefr.StartDate = tdp;
        pldeffound = ReadLastKey("PLReplCode",PLDefr,2,false); 
        if (PLDefr.PLReplCode<>pricelist2) then begin pldeffound = false; end;
        if (DateInRange(tdp,PLDefr.StartDate,PLDefr.EndDate)==false) then begin pldeffound = false; end;
        if (pldeffound) then begin pricelist2 = PLDefr.Code; end;
      end;  
      if (pldeffound==false) then begin
        PLDefr.Code = pricelist2;
        pldeffound = ReadFirstMain(PLDefr,1,true);
      end;  
      if (pldeffound) then begin
        if (PLDefr.DepPrice==1) then begin qtydepf = true; end;
      end;  
      if (qtydepf) then begin
        PLQr.PLCode = pricelist2;
        PLQr.ArtCode = item;
        if (ReadFirstMain(PLQr,2,true)) then begin
          FindPLQPrice(PLQr,INr,qtp,tprice);
        end else begin
          pldeffound = false;
        end;
      end else begin
        PLr.PLCode = pricelist2;
        PLr.ArtCode = item;
        if (ReadFirstMain(PLr,2,true)) then begin
          tprice = PLr.ExVatPrice;
        end else begin
          pldeffound = false;
        end;
      end;
    end;
    skipf = false;      
    if (pldeffound) then begin
       if (crncycode==PLDefr.CurncyCode) then begin skipf = true; end;// do not touch price 
       if (nonblank(PLDefr.CurncyCode)) then begin
         if (blank(crncycode)) then begin           
           tprice = MulWithRateToBase1(PLDefr.CurncyCode,CurrentDate,tprice,DefaultCurRoundOff);
           skipf = true;
         end else begin
           tprice = MulWithRateToBase1(PLDefr.CurncyCode,CurrentDate,tprice,DefaultCurRoundOff);
           tprice = DivWithRateToBase1(crncycode,CurrentDate,tprice,DefaultCurRoundOff);
           skipf = true;
         end;
       end;
    end;    
    if (skipf==false) then begin
      tprice = DivWithRateToBase1(crncycode,CurrentDate,tprice,DefaultCurRoundOff);
    end;
L44GetItemPriceDiscount2:;
    price = tprice;
    lang2 = langcode;
    if (GetItemNameStr(1,descstr,lang2,INr.Name,INr.Code)) then begin end;
    if (GetRebate(INr,tprice,qtp,custcat,rebcode,tdisc,foundstaff,tdp,location)) then begin end;
    if (foundstaff) then begin
      discount = tdisc;
    end else begin
      if (discount==0) then begin
        discount = tdisc;
      end;  
    end;    
    if ((INr.InPrice==0) and (INr.ExtraCost==0)) then begin
      basepricep = 0;
    end else begin
      basepricep = INr.InPrice + INr.ExtraCost;
    end;  
    if ((INr.InPrice==0) and (INr.ItemType==2) and (nonblank(INr.Recepy))) then begin
      GetStructureCostPrice(INr.Recepy,basepricep);
    end;        
  end else begin
    price = 0;
    discount = 0;
  end;  
  GetItemPriceDiscount2 = res;
  RETURN;
END;

procedure PriceFormCalcLocalItem(record PFormVc PFormr,record LocalINVc LocalINr,var val price)
begin
  record PIVc PIr;
  boolean testf;
  integer base;
  val basicprice;

  testf=true;

  if blank(PFormr.Perc) then begin
    testf = false;
  end;
  if (testf) then begin
    if (PFormr.SelBase==0) then begin
      basicprice=LocalINr.InPrice;
    end;
    if (PFormr.SelBase==1) then begin
      basicprice=LocalINr.UPrice1;
    end;
    if (PFormr.SelBase==2) then begin
      basicprice=LocalINr.LastPurchPrice2;
    end;
    if (PFormr.SelBase==3) then begin
      basicprice=LocalINr.WeighedAvPrice;
    end;
    if (PFormr.SelBase==4) then begin
      PIr.DefaultChoice=1;
      PIr.ItemCode=LocalINr.Code;
      if (ReadFirstKey("DefaultChoice",PIr,2,true)==true) then begin
        basicprice=PIr.PurPrice;
      end else begin
        basicprice=LocalINr.UPrice1;
      end;
    end;
    price = basicprice * (PFormr.Perc/100);
    if nonblank(PFormr.Add1Val) then begin
      price = price + PFormr.Add1Val;
    end;
    if nonblank(PFormr.RndTo) then begin
      if (PFormr.RndTo==-3) then begin
        PFormr.RndTo = -4; //Edit***************************Sasha2,14:57 03.06.2015
      end;
      price = Round(price,SetRoundModeD(PFormr.RndTo));
    end;
    if nonblank(PFormr.Add2Val) then begin
      price = price + PFormr.Add2Val;
    end;
  end;
  return;
end;

global
procedure FindPLQPriceLocalItem(record PLQVc PLQr,record LocalINVc LocalINr,var val qtyp,var val tpricep)
begin
  row PLQVc PLQrw;
  record PFormVc PFormr;
  Integer i,rwcnt;
  val qty;
  
  qty = qtyp;
  tpricep = 0;
  if (qty==0) then begin qty = 1; end;
  rwcnt = MatRowCnt(PLQr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(PLQr,i,PLQrw);
    if (PLQrw.QtyLimit<=qty) then begin
      if (nonblank(PLQrw.Formulae)) then begin
        PFormr.Code = PLQrw.Formulae;
        if (ReadFirstMain(PFormr,1,true)) then begin
          PriceFormCalc(PFormr,LocalINr,tpricep)
        end else begin
          tpricep = PLQrw.ExVatPrice;
        end;
      end else begin
        tpricep = PLQrw.ExVatPrice;
      end;
    end;
  end;
  return;
end;
