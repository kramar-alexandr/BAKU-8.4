external function longint DateDiff(date,date);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
remote updating procedure RA_OutOfOrderItem(record  BPIBrandVc);

global 
function boolean IsActiveCustomer(string cucode)
begin
	boolean res;
	integer i,mtrw,curcomp;
	record CompaniesBlock CBb;
	record IVVc IVr;

  blockload(CBb);
  mtrw = matrowcnt(CBb);
	curcomp = currentcompany;
	res = false;
	For(i=0;i<mtrw;i=i+1) begin
		if (SetCompany(i+1,false)) then begin
			IVr.InvDate = CurrentDate;
			IVr.CustCode = cucode;
			if(readlastkey("CustDate",IVr,2,false))then begin
				if(IVr.CustCode==cucode)then begin
					if(datediff(currentdate,IVr.InvDate)<365)then begin
						res = true;
					end;
				end;
			end;
		end;
		resetcompany(curcomp);
	end;
	
	IsActiveCustomer = res;
return;
end;

procedure PrintCULabel(record CUVc CUr,record DocVc Docr)
begin
integer rwcnt,i;
string 200 tstr;
row DocVc Docrw;
	
	OUTFORMFIELD("F_KUNDNR",CUr.Code);
	OUTFORMFIELD("F_KUNDNAMN",CUr.Name);
	OUTFORMFIELD("F_NAMN",CUr.Name);
	OUTFORMFIELD("F_ADDR1",CUr.InvAddr0);
	OUTFORMFIELD("F_ADDR2",CUr.InvAddr1);
	OUTFORMFIELD("F_ADDR3",CUr.InvAddr2);
	OUTFORMFIELD("F_INVADDR3",CUr.InvAddr3);
	OUTFORMFIELD("F_INVADDR4",CUr.InvAddr4);
	OUTFORMFIELD("F_LEVADDR1",CUr.DelAddr0);
	OUTFORMFIELD("F_LEVADDR2",CUr.DelAddr1);
	OUTFORMFIELD("F_LEVADDR3",CUr.DelAddr2);
	OUTFORMFIELD("F_DELADDR3",CUr.DelAddr3);
	OUTFORMFIELD("F_DELADDR4",CUr.DelAddr4);
	OUTFORMFIELD("F_KUNDNR",CUr.Code);
	OUTFORMFIELD("F_KUNDNAMN",CUr.Name);
	OUTFORMFIELD("F_NAMN",CUr.Name);
	OUTFORMFIELD("F_ADDR1",CUr.InvAddr0);
	OUTFORMFIELD("F_ADDR2",CUr.InvAddr1);
	OUTFORMFIELD("F_ADDR3",CUr.InvAddr2);
	OUTFORMFIELD("F_ADDR4",CUr.InvAddr3);
	OUTFORMFIELD("F_INVADDR3",CUr.InvAddr4);
	OUTFORMFIELD("F_LEVADDR1",CUr.DelAddr0);
	OUTFORMFIELD("F_LEVADDR2",CUr.DelAddr1);
	OUTFORMFIELD("F_LEVADDR3",CUr.DelAddr2);
	OUTFORMFIELD("F_DELADDR3",CUr.DelAddr3);
	OUTFORMFIELD("F_DELADDR4",CUr.DelAddr4);
	OUTFORMFIELD("F_KONTAKT",CUr.Person);
	OUTFORMFIELD("F_DEPARTMENT",CUr.Department);
	OUTFORMFIELD("F_COUNTRYNAME",CUr.CountryCode);
	OUTFORMFIELD("F_COMMENT",CUr.Comment);
	OUTFORMFIELD("F_COMMENT1ORDERCOMMENT",CUr.OrderComment);
	OUTFORMFIELD("F_COMMENT2WARNING",CUr.WarnText1);
	OUTFORMFIELD("F_JOBDESC",CUr.Title);
	OUTFORMFIELD("F_SALUTATION1",CUr.Salutation1);
	OUTFORMFIELD("F_SALUTATION2",CUr.Salutation2);
	OUTFORMFIELD("F_SALUTATION3",CUr.Salutation3);
	OUTFORMFIELD("F_JOBDESCRIPTION",CUr.JobDesc);
	
	
	rwcnt = MatRowCnt(Docr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(Docr,i,Docrw);
    if (Docrw.fieldSetNr==0) then begin
      if(nonblank(Docrw.unitText))then begin
        tstr = Docrw.unitText;
        OUTFORMFIELD(Docrw.unitText,tstr);
      end;
    end;
  end;
	
  //EndFormRow;

return;
end;

function LongInt LabelSetup(integer mode,longint defystep,var longint x,var longint y,var longint xcnt,var longint ycnt)
begin
  longint lbls,ystep;
  
  x = 0;
  y = 0;
  xcnt = 0;
  ycnt = 0;
  
  if (defystep>0) then begin
    ystep = defystep;
  end else begin
    switch (mode) begin
      case 0: ystep = 1;
      case 1: ystep = 98;
      case 2: ystep = 98;
      case 4: ystep = 206;
      case 5: ystep = 113; //3*7
      case 6: ystep = 116; //4*13  // Edit ************************** Monday, 31 March 2014 14:16:33
      case 7: ystep = 120; //3*7 без полей // Edit ************************** Wednesday, 13 August 2014 11:30:25
      case 8: ystep = 107; //3*7 new // Edit ************************** Wednesday, 13 August 2014 11:30:25
      
    end;
  end;
	
	y = ystep;

  switch (mode) begin
    case 0: x = 1; 		xcnt = 1; ycnt = 1;  	lbls = 1;
    case 1: x = 195; 	xcnt = 3; ycnt = 8;  	lbls = 24;
    case 2: x = 280; 	xcnt = 2; ycnt = 8;  	lbls = 16;
    case 4: x = 280; 	xcnt = 2; ycnt = 4;  	lbls = 8;
    case 5: x = 185; 	xcnt = 3; ycnt = 7;  	lbls = 21; //3*7 last 112??
    case 6: x = 150; 	xcnt = 4; ycnt = 7;  	lbls = 28; // 4*13 // Edit ************************** Monday, 31 March 2014 14:15:54
    case 7: x = 198; 	xcnt = 3; ycnt = 7;  	lbls = 21; //3*7 без полей // Edit ************************** Wednesday, 13 August 2014 11:30:25
    case 8: x = 198; 	xcnt = 3; ycnt = 7;  	lbls = 21; //3*7 без полей // Edit ************************** Wednesday, 13 August 2014 11:30:25
  end;
  FormLabelGrid(xcnt,x,ycnt,ystep);

  LabelSetup = lbls;
  return;
end;

function Boolean EndAndTestLabel(longint lbls,var longint cnt)
begin
  Boolean res;
  
  EndFormLabel;
  cnt = cnt + 1;
  
  if (cnt>=lbls) then begin
    CloseForm;
    cnt = 0;
    res = false;
  end else begin
    res = true;
  end;
  
  EndAndTestLabel = res;
  return;
end;  

global
updating procedure DoSpamSendForm(record RcVc RepSpec,record RcVc RVr)
BEGIN
  record FormDefVc FDr;
  row FormDefVc FDrw;
  record SysFormatBlock SysFormatRec;
  record LangNrVc LangNrr;
  Integer i,rwcnt,mtrw;
  longint lbls,pucnt,lbs;  
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  record CUVc CUr;
  record IVVc IVr;
  string 20 frcu,tocu,frreb,toreb;
  boolean TrHs,testf,active;
  integer curcomp;
  boolean formisopen;
  record DocVc Docr,newDocr,testDocr;
  longint x,y,xcnt,ycnt;
	integer labelnum;
	row DocVc Docrw;
	integer newrow,j,k,piccnt;
	area arrec;
	uuid curapp;
	string 30 doccode;
	
	labelnum = RepSpec.flags[1];
	Docr.Code = "XTEMDOC";
	if(readfirstmain(Docr,1,true))then begin
		curapp = Docr.UUID;
	end else begin
		recordnew(Docr);
		Docr.Code = "XTEMDOC";
		recordStore(Docr,true);
		Docr.Code = "XTEMDOC";
		readfirstmain(Docr,1,true);
		curapp = Docr.UUID;
	end;
		
	doccode = "";
	if(RepSpec.flags[1]==5 or RepSpec.flags[1]==7 or RepSpec.flags[1]==8)then begin
		switch(RepSpec.flags[2])begin
			case 0: doccode = "BLANK_3X7";
			case 1: doccode = "AMBIANCE_3X7";
			case 2: doccode = "BACCARAT_3X7";
			case 3: doccode = "CARPETS_3X7";
			case 4: doccode = "CARTIER_3X7";
			case 5: doccode = "CHOPARD_3X7";
			case 6: doccode = "CREATIVE_3X7";
			case 7: doccode = "GLAMPIRE-JEWELLERY_3X7";
			case 8: doccode = "GLAMPIRE-TIMEPIECES_3X7";
			case 9: doccode = "IDEA_3X7";
			case 10: doccode = "ITALDIZAIN_3X7";
			case 11: doccode = "LLADRO_3X7";
			case 12: doccode = "MUSEUM_3X7";
			case 13: doccode = "ROSENTHAL_3X7";
			case 14: doccode = "ROYAL-COLLECTION3X71";
			case 15: doccode = "ROYAL-COLLECTION3X72";
			case 16: doccode = "ROYAL-COLLECTION3X73";
			case 17: doccode = "SWARIVSKI_3X7";
			case 18: doccode = "VILLEROY&BOCH_3X7";
			case 19: doccode = "YVES-DELORME_3X7";
			case 20: doccode = "ELLUXUS_3X7";
			case 21: doccode = "XTRAVAGANZA_3X7";
		end;
	end;
	if(RepSpec.flags[1]==6)then begin
		switch(RepSpec.flags[2])begin
			case 0: doccode = "BLANK_4X7";
			case 1: doccode = "AMBIANCE_4X7";
			case 2: doccode = "BACCARAT_4X7";
			case 3: doccode = "CARPETS_4X7";
			case 4: doccode = "CARTIER_4X7";
			case 5: doccode = "CHOPARD_4X7";
			case 6: doccode = "CREATIVE_4X7";
			case 7: doccode = "GLAMPIRE-JEWELLERY_4X7";
			case 8: doccode = "GLAMPIRE-TIMEPIECES_4X7";
			case 9: doccode = "IDEA_4X7";
			case 10: doccode = "ITALDIZAIN_4X7";
			case 11: doccode = "LLADRO_4X7";
			case 12: doccode = "MUSEUM_4X7";
			case 13: doccode = "ROSENTHAL_4X7";
			case 14: doccode = "ROYAL-COLLECTION4X71";
			case 15: doccode = "ROYAL-COLLECTION4X72";
			case 16: doccode = "ROYAL-COLLECTION4X73";
			case 17: doccode = "SWARIVSKI_4X7";
			case 18: doccode = "VILLEROY&BOCH_4X7";
			case 19: doccode = "YVES-DELORME_4X7";
			case 20: doccode = "ELLUXUS_4X7";
			case 21: doccode = "XTRAVAGANZA_4X7";
		end;
	end;
	RepSpec.f3 = doccode;
  if(blank(RepSpec.f3))then begin
  	MessageBox(1624, " " & USetStr(1623));
  	goto LDoSpamSendForm;
  end else begin
  	Docr.Code = RepSpec.f3;
  	if(readfirstmain(Docr,1,true)==false)then begin
  		MessageBox(1624, " " & USetStr(1623));
			goto LDoSpamSendForm;
  	end else begin
			
			if(RepSpec.flags[1]==7)then begin  //правка на новый тип размера стикера
				rwcnt = matrowcnt(Docr);
				For(i=0;i<rwcnt;i=i+1) begin
					matrowget(Docr,i,Docrw);
						Docrw.xpos = Docrw.xpos + -5;
						Docrw.ypos = Docrw.ypos + -25;
						Docrw.unitWidth = Docrw.unitWidth + -5;
						Docrw.unitHeight = Docrw.unitHeight + -25;
					matrowput(Docr,i,Docrw);
				end;
			end;
			if(RepSpec.flags[1]==8)then begin  //правка на новый тип размера стикера
				rwcnt = matrowcnt(Docr);
				For(i=0;i<rwcnt;i=i+1) begin
					matrowget(Docr,i,Docrw);
						Docrw.xpos = Docrw.xpos + -5;
						Docrw.ypos = Docrw.ypos + 15;
						Docrw.unitWidth = Docrw.unitWidth + -5;
						Docrw.unitHeight = Docrw.unitHeight + 15;
					matrowput(Docr,i,Docrw);
				end;
			end;
			
  		lbs = LabelSetup(labelnum,0,x,y,xcnt,ycnt);
  		rwcnt = matrowcnt(Docr);
  		newrow = rwcnt;
  		piccnt = 0;
  		For(i=0;i<rwcnt;i=i+1) begin
				matrowget(Docr,i,Docrw);
				if(Docrw.unitType==5)then begin
					piccnt = 0;
					For(j=0;j<xcnt;j=j+1) begin
						For(k=0;k<ycnt;k=k+1) begin
							if(piccnt>0)then begin
								Docrw.xpos = Docrw.xpos + x*j;
								Docrw.ypos = Docrw.ypos + y*k;
								Docrw.unitWidth = Docrw.unitWidth + x*j;
								Docrw.unitHeight = Docrw.unitHeight + y*k;
								matrowput(Docr,newrow,Docrw);
								newrow = newrow + 1;
							end;
							piccnt = piccnt + 1;
							matrowget(Docr,i,Docrw);
	  				end;
					end; 
				end;
			end;
  	end;
  end;
  
  Docr.Code = "XTEMDOC";
  Docr.Comment = "XTEMDOC";
  Docr.UUID = curapp;
  recordStore(Docr,true);
  Docr.Code = "XTEMDOC";
  readfirstmain(Docr,1,true);
	
  frcu = firstinrange(RepSpec.f1,20);
  tocu = lastinrange(RepSpec.f1,20);
  
  frreb = firstinrange(RepSpec.f2,20);
  toreb = lastinrange(RepSpec.f2,20);
  
  
  
  CUr.Code = frcu;
  TrHs = true;
  while(loopmain(CUr,1,TrHs))begin
  	testf = true;
  	active = false;
  	if(nonblank(tocu) and CUr.Code>tocu)then  begin testf = false; TrHs = false; end;
  	if(CUr.CUType!=1)then begin testf = false; end;
  	if(nonblank(frreb)and (CUr.RebCode<frreb or CUr.RebCode>toreb))then begin testf = false; end;
  	if(RepSpec.flags[0]==0 and CUr.NoLetterPosting>0)then begin testf = false; end;
  	if(RepSpec.flags[3]==0 and blank(CUr.InvAddr0))then begin testf = false; end;
  	if(RepSpec.flags[4]==0 and CUr.blockedFlag==1)then begin testf = false; end;
  	if(RepSpec.flags[5]==0 and len(CUr.Code)>=5)then begin testf = false; end;
  	
  	if(testf)then begin
			active = IsActiveCustomer(CUr.Code);
		end;
		if(active==false)then begin testf = false; end;
		
  	if(testf)then begin
  		if(formisopen==false)then begin
  			if(openform(Docr.Code)==false)then begin
  				goto LDoSpamSendForm;
  			end;
				lbls = LabelSetup(labelnum,0,x,y,xcnt,ycnt);
  			formisopen=true;
  		end;
  		
  		PrintCULabel(CUr,Docr);
  		formisopen = EndAndTestLabel(lbls,pucnt);
  	end;
  end;
  resetloop(CUr);
  
  if(formisopen)then begin
		closeform;
	end;
  LDoSpamSendForm:;

  RETURN;
END;

global updating procedure SpamSendForm(record RcVc RepSpec)
BEGIN
  Boolean tmpf;

  tmpf = PrintDocument(RepSpec,"SpamSendForm",false);
  
  RETURN;
END;

/*global
procedure SpamSendFormRn(record RcVc RepSpec)
BEGIN
  Boolean tmpf;
	
	RepSpec.Media = mtScreen;
  tmpf = PrintDocument(RepSpec,"SpamSendForm",false);
  
  RETURN;
END;*/


global procedure ExportDocToFileDsm()
begin
	record DocVc Docr;
	integer wn;
	area arec;
	
	wn = curwindow;
	getwindowrecord(wn,Docr);
	
	addrecordtoarea(Docr,"DocVc",arec);
	createfile("TemDoc.txt");
	writeareatofile(arec,"TemDoc.txt",0);
	
return;
end;

global procedure ImportDocFromFileDsm()
begin
	record DocVc Docr;
	integer wn;
	longint l;
	area arec;
	
	wn = curwindow;
	addfiletoarea("TemDoc.txt",arec,0);
	
	l = GetRecordFromArea(Docr,"DocVc",l,arec);
	putwindowrecord(wn,Docr);	

return;
end;

global procedure SpamSendRClassReportDefaults(integer wn)
begin
	record RcVc RepSpec;
	record UserVc User;
	integer i;
	string 20 loc;
	
	getwindowrecord(wn,RepSpec);
	RepSpec.Media = mtPrinter;
	RepSpec.repname = "SpamSendForm";
  RepSpec.JobDf = 1;
  RepSpec.flags[1]=5;
  PutWindowRecord(wn,RepSpec);
return;
end;

//##ii
procedure dummy() //##ii
begin //##ii
  SetLangMode(LangRussian,"RUS",0); //##ii
  return; //##ii
end; //##ii

window SpamSendRClass:1
  wtag("language","RUS"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,l;
  WindowBegin("Ћпределите печать адресов длЯ рассылки",SpamSendRClass,CGRcW,RcType);
  SetWRect(20,80,500,250);
  Sizeable(0,150,0,0);                                                     
  h = 120;vs = 20;                                                             
  //PeriodField(h,v=6,"Џериод");
  //EditFieldTL(h,v+=vs,100,"Ћт имени бутика:",M4UStr,Normal,200,f3,false,DocSClass);
  ButtonFrame(h-20,v+=vs,l=200,22,"Ћт имени бутика:");
  RadioButton(h-20,v,0,0,"Ѓез отправителЯ",flags[2]);
  RadioButton(h-20,v+=16,1,0,"Ambiance",flags[2]);
  RadioButton(h-20,v+=16,2,0,"Baccarat",flags[2]);
  RadioButton(h-20,v+=16,3,0,"Carpets",flags[2]);
  RadioButton(h-20,v+=16,4,0,"Cartier",flags[2]);
  RadioButton(h-20,v+=16,5,0,"Chopard",flags[2]);
  RadioButton(h-20,v+=16,6,0,"Creative",flags[2]);
  RadioButton(h-20,v+=16,7,0,"Glampire-Jewellery",flags[2]);
  RadioButton(h-20,v+=16,8,0,"Glampire-TimePieces",flags[2]);
  RadioButton(h-20,v+=16,9,0,"Idea",flags[2]);
  RadioButton(h-20,v+=16,10,0,"Italdizain",flags[2]);
  RadioButton(h-20,v+=16,11,0,"Lladro",flags[2]);
  RadioButton(h-20,v+=16,12,0,"Museum",flags[2]);
  RadioButton(h-20,v+=16,13,0,"Rosenthal",flags[2]);
  RadioButton(h-20,v+=16,14,0,"Royal-Collection пр. ЃюльбюлЯ",flags[2]);
  RadioButton(h-20,v+=16,15,0,"Royal-Collection ул. ЌиЯзи",flags[2]);
  RadioButton(h-20,v+=16,16,0,"Royal-Collection общий",flags[2]);
  RadioButton(h-20,v+=16,17,0,"Swarovski",flags[2]);
  RadioButton(h-20,v+=16,18,0,"Villeroy&Boch",flags[2]);
	RadioButton(h-20,v+=16,19,0,"Yves-Delorme",flags[2]);
	RadioButton(h-20,v+=16,20,0,"Elluxus",flags[2]);
	RadioButton(h-20,v+=16,21,0,"Xtravaganza",flags[2]);
  
  v=v+vs;
  EditFieldTL(h,v+=vs,160,"Љлиенты",M4Str,Normal,41,f1,false,AllCUSClass);
  
  ButtonFrame(h,v+=40,l=160,2,"Џодписка на рассылку");
  RadioButton(h,v,0,0,"’олько подписавшимсЯ",flags[0]);
  RadioButton(h,v+=16,1,0,"‚сем",flags[0]);
  
  v=v-56;
  ButtonFrame(h+200,v+=40,l=160,4,"”ормат наклеек");
  RadioButton(h+200,v,5,0,"3x7",flags[1]);
  RadioButton(h+200,v+=16,6,0,"4x7",flags[1]);
  RadioButton(h+200,v+=16,7,0,"3x7 без полей",flags[1]);
  RadioButton(h+200,v+=16,8,0,"3x7 70*38",flags[1]);
  v=v+vs;
  EditFieldTL(h,v+=vs,100,"’аблица скидок",M4UStr,Normal,11,f2,false,RebSClass);
  
  v=20;
  ButtonFrame(h+200,v,l=160,2,"Љлиентам с адресами");
  RadioButton(h+200,v,0,0,"’олько с адресами",flags[3]);
  RadioButton(h+200,v+=16,1,0,"‚сем",flags[3]);
	v=v+40;
	ButtonFrame(h+200,v,l=160,2,"Ћткрытые карочки");
  RadioButton(h+200,v,0,0,"’олько открытым",flags[4]);
  RadioButton(h+200,v+=16,1,0,"‚сем",flags[4]);
  v=v+40;
	ButtonFrame(h+200,v,l=160,2,"Љоды длинее 5 символов");
  RadioButton(h+200,v,0,0,"Ќе включать",flags[5]);
  RadioButton(h+200,v+=16,1,0,"‚ключить",flags[5]);
	
  EndWindow;
end;

window DocWClass:3
  wtag("language","RUS"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("”орма",DocWClass,CGDocW,DocView);
  UseView(DocVc);
  SetWRect(20,80,620,340);
  BrowseButtons(false);
  Sizeable(0,150,0,0);
  WhiteBackground;
  if (GuiType==kGuiCocoa) then begin
    ScrollBar(-17,0,-1,-14);
  end else begin
    ScrollBar(-17,0,-1,-1);
  end;
  v = 5;  vs = 20;
  h = 45; PushButton(h,v,h+65,v+vs,0,"’екст");
  h=h+72;  PushButton(h,v,h+65,v+vs,0,"‹иниЯ");
  h=h+72;  PushButton(h,v,h+65,v+vs,0,"ђамка");
  h=h+72;  PushButton(h,v,h+65,v+vs,0,"Џоле");
  h=h+72;  PushButton(h,v,h+65,v+vs,0,"Љартинка");
  h=h+92;  PushButton(h,v,h+65,v+vs,0,"€того по стр.");//##cc
  h=h+72;  CheckBox(h,v+2,0,"’абл.",ShowGrid);
  h=h+60;  DropDownMenu(h,v+2,h+65,"EditScale",497);


  SpecMenuItem("‘войства",' ',mDocProperties); 
  SpecMenuItem("PC Џринтер",' ',mDocPCPrinter); 
  SpecMenuItem("Љопии",' ',mDocCopies); 
  SpecMenuItem("Ћтправить назад",'b',mDocSendToBack); 
  SpecMenuItem("Џосмотреть все",' ',mDocViewAll); 
  SpecMenuItem("’олько первый",' ',mDocFirstOnly); 
  SpecMenuItem("’олько средний",' ',mDocMiddleOnly); 
  SpecMenuItem("’олько последний",' ',mDocLastOnly); 
  SpecMenuItem("’олько одна страница",' ',mDocSinglePageOnly); 
  SpecMenuItem("‘тиль линий",' ',mDocRowStyles); 
	SpecialMenu("Export",'',10,"ExportDocToFileDsm");
	SpecialMenu("Import",'',10,"ImportDocFromFileDsm");
	  
  EndWindow;
end;

global updating procedure OutOfOrderItemDsm()
begin
integer wn;
record  BPIBrandVc BBr;

	wn = curwindow;
	getwindowrecord(wn,BBr);
	
	RA_OutOfOrderItem(BBr);
	
return;
end;