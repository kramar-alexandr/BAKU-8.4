external function string 255 StrReplace(string,string,string);

global
procedure POShipmDataSumup(record POShipmDataVc POSDr)
begin
  row POShipmDataVc POSDrw;
  integer i;
  
  POSDr.Total = 0;
  for (i=0;i<MatRowCnt(POSDr);i=i+1) begin
    MatRowGet(POSDr,i,POSDrw);
    POSDr.Total = POSDr.Total + POSDrw.BalPay;
  end;
  
  return;
end;

global
function Boolean POShipmDataDClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin
  Boolean res;
  record POShipmDataVc POSDr;
  row POShipmDataVc POSDrw;
  
  res = true;
	GetWindowRecord(wn,POSDr);   
	if(rownr>=0)then begin
		if((matrowcnt(POSDr)+1)>=rownr)then begin
			matrowget(POSDr,rownr,POSDrw);
			if(POSDrw.Paid=="Yes")then begin
				if(currentcompany!=28)then begin
					res = false;
				end;
			end;
		end;
	end;
	if(usercanaction("AllowChangePOPayments",false)==true)then begin
		res = true;
	end;
	

  POShipmDataDClassActiveEditField = res;
  return;
end;

function Boolean POShipmDataDClassBalPayEFAfter(Integer wn,Integer rownr,Boolean changedf)
BEGIN
  record POShipmDataVc POSDr;
  
  if (changedf) then begin
    GetWindowRecord(wn,POSDr);   
    if (rownr>=0) then begin
      POShipmDataSumup(POSDr);
    end; 
    PutWindowRecord(wn,POSDr);   
  end;
  POShipmDataDClassBalPayEFAfter = true;
  return;
end;

function Boolean POShipmDataDClassTruckNoEFAfter(Integer wn,Integer rownr,Boolean changedf)
BEGIN
  record POShipmDataVc POSDr;
	row POShipmDataVc POSDrw;
	record TruckDataVc TDr;
	integer rwcnt,i;
  
  if (changedf) then begin
    GetWindowRecord(wn,POSDr);   
    if (rownr>=0) then begin
			matrowget(POSDr,rownr,POSDrw);
			TDr.TruckNr = POSDrw.TruckNo;
			if(ReadFirstMain(TDr,1,true))then begin
				POSDrw.ShipDate = TDr.GoodsShipedDate;
				POSDrw.ArrDate = TDr.GoodsArrivalDate;
        POSDrw.Paid = "No";
				matrowput(POSDr,rownr,POSDrw);
			end;
    end; 
    PutWindowRecord(wn,POSDr);   
  end;
  POShipmDataDClassTruckNoEFAfter = true;
  return;
end;


global
function Boolean POShipmDataDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;
  switch (fieldname) begin
    case "BalPay": res = POShipmDataDClassBalPayEFAfter(wn,rownr,changed);
		case "TruckNo": res = POShipmDataDClassTruckNoEFAfter(wn,rownr,changed);
  end;
  POShipmDataDClassAfterEditField = res;
  RETURN;
END;

global
function Boolean POShipmDataDClassOnOverStrike(Integer wn,Integer rownr)
begin
  record POShipmDataVc POSDr;

  if (rownr>=0) then begin
    GetWindowRecord(wn,POSDr);    
    POShipmDataSumup(POSDr);
    PutWindowRecord(wn,POSDr);    
  end;
  POShipmDataDClassOnOverStrike = true;
  return;
end;


global 
function Boolean POShipmDataDClassDeleteRowTest(Integer wn,Integer rownr)
begin
  record POShipmDataVc POSDr;
  row POShipmDataVc POSDrw;
  boolean res;

  res = true;
  GetWindowRecord(wn,POSDr); 
  if(rownr>=0)then begin
  	matrowget(POSDr,rownr,POSDrw);
  	if(POSDrw.Paid=="Yes")then begin
			res = false;
		end;
  end;  
   
  POShipmDataDClassDeleteRowTest = res;
  return;
end;

global
procedure POShipmDataDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  saveOK = true;
  restOK = true;

  return;
end;

global
function Boolean POShipmDataDClassOnClose(Integer wn,Integer wn2)
begin
  
  //DeselectWindow(MotherWindow(wn),false);
  
  POShipmDataDClassOnClose = false;
  return;
end;

function Boolean PDDClassTextEFAfter(Integer wn,Integer rownr,Integer changed)
begin
  record PDVc PDr;
	row PDVc PDrw;
  boolean res;
  record SysFormatBlock SFb;
  
  res = true;
  if (changed!=0) then begin
    if (currentcompany==28) then begin
      GetWindowRecord(wn,PDr);
      matrowget(PDr,rownr,PDrw);
      if (UpperCase(left(PDrw.LangCode,4))=="KOEF") then begin
        blockload(SFb);
        PDrw.Text = StrReplace(PDrw.Text,",",SFb.decimalPt);
        PDrw.Text = StrReplace(PDrw.Text,".",SFb.decimalPt);
        matrowput(PDr,rownr,PDrw);
      end;
      PutWindowRecord(wn,PDr);
    end;
  end;
  PDDClassTextEFAfter = res;
  return;
end;

global
function Boolean PDDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;

  switch (fieldname) begin
    case "Text": res = PDDClassTextEFAfter(wn,rownr,changed);
  end;
  
  PDDClassAfterEditField = res;
  return;
end;