external function Boolean FindSubString( string , string );
remote function Boolean PasteCustInOrder(var record ORVc,string,string,var string,var string);
  //SetLangMode(LangRussian,"RUS",0); 
  


//flags[0] - MotherWindow
//flags[1] - текущая строка в таблице
//flags[2] - направление поиска (вперед/назад)
//flags[3] - последняя найденная строка (курсор останавливается на последнем найденном элементе)



global  			 // by Ira
procedure QRCodePaste()
begin
	record ORVc ORr;
	record RcVc RepSpec;
	string 255 warning,errstr;
	integer mwn, wn;
	record LoyaltyCardVc LCr;
	
	wn = curwindow;
	deselectwindow(wn, true);
	GetWindowRecord(wn,RepSpec);
	if(blank(RepSpec.f1))then begin
    millisleep(2000);
    GetWindowRecord(wn,RepSpec);
  end;
	if(nonblank(RepSpec.f1)) then begin
		mwn = motherwindow(wn);
		deselectwindow(mwn, true);
		GetWindowRecord(mwn,ORr);
		ORr.CustCode = RepSpec.f1;
		if(nonblank(RepSpec.f2))then begin
		  LCr.SerNr = RepSpec.f2;
		  if(readfirstmain(LCr,1,true))then begin
		    if(LCr.RebCodeCRM!="0%" and nonblank(LCr.RebCodeCRM))then begin
		      messagebox(0,LCr.RebCodeCRM);
		      ORr.RebCode = LCr.RebCodeCRM;
		    end;  
		  end;
		end;
		PasteCustInOrder(ORr,ORr.CustCode,WindEFstr(mwn),warning,errstr);
		//recordstore(ORr);
		PutWindowRecord(mwn,ORr);
		closewindow(wn);
	end;
	
	
return;
end;



global 
procedure QRCodeDsm()  //  by Ira
BEGIN
  record RcVc RepSpec;
  Integer wn,res;
  wn = CurWindow;
  RepSpec.flags[0] = wn;
  res = OpenWindow("QRCodeIClass",0,wn,"","",RepSpec);

  RETURN;
END;


global    //added -----------------------Dima 26.11.2014
function Integer FindInMathPU(var record RcVc RepSpec,var string field)
begin
  record PUVc PUr;
  row PUVc PUrw;
  boolean continue;
  Integer i,rwcnt,mwn,res,wn;
  string 20 search;
  
  //wn = CurWindow; //PUTableSearchIClass
  mwn = RepSpec.flags[0];
  search = RepSpec.f1;
  GetWindowRecord(mwn,PUr);
  rwcnt = MatRowCnt(PUr);
  res=RepSpec.flags[3]; //last result
  field="";

	if (RepSpec.flags[2]==1) then begin  //forward search
		  for (i = RepSpec.flags[1];i<rwcnt;i=i+1) begin

					MatRowGet(PUr,i,PUrw);
						if(FindSubString(search,PUrw.ArtCode)) then begin
							field = "ArtCode";
							res=i;
							goto LBreak;
						end else begin
						
							if(FindSubString(search,PUrw.Spec)) then begin
								field = "Spec";
								res=i;
								goto LBreak;
							end else begin
				
								if(FindSubString(search,PUrw.UPrice)) then begin
									field = "UPrice";
									res=i;
									goto LBreak;
									end;
								end;
								end;
			  
		  end;  
	
	end else begin

	if (RepSpec.flags[2]==2) then begin  //backward search
		  for (i = RepSpec.flags[1];i>=0;i=i-1) begin

					MatRowGet(PUr,i,PUrw);
						if(FindSubString(search,PUrw.ArtCode)) then begin
							field = "ArtCode";
							res=i;
							goto LBreak;
						end else begin
						
							if(FindSubString(search,PUrw.Spec)) then begin
								field = "Spec";
								res=i;
								goto LBreak;
							end else begin
				
								if(FindSubString(search,PUrw.UPrice)) then begin
									field = "UPrice";
									res=i;
									goto LBreak;
									end;
								end;
								end;						 
			end;	  
		
		  end;
	end;

  if ((field =="") ) then begin
	MessageBox(31306,search);
  end;

  LBreak:;	
  FindInMathPU=res;
return;
end;




global    //added -----------------------Dima 26.11.2014
function Integer FindInMathRet(var record RcVc RepSpec,var string field)
begin
  record RetVc Retr;
  row RetVc Retrw;
  boolean continue;
  Integer i,rwcnt,mwn,res,wn;
  string 20 search;
  
  //wn = CurWindow; //TableSearchIClass
  mwn = RepSpec.flags[0];
  search = RepSpec.f1;
  GetWindowRecord(mwn,Retr);
  rwcnt = MatRowCnt(Retr);
  res=RepSpec.flags[3]; //last result
  field="";

	if (RepSpec.flags[2]==1) then begin  //forward search
		  for (i = RepSpec.flags[1];i<rwcnt;i=i+1) begin

					MatRowGet(Retr,i,Retrw);
						if(FindSubString(search,Retrw.ArtCode)) then begin
							field = "ArtCode";
							res=i;
							goto LBreak;
						end else begin
						
							if(FindSubString(search,Retrw.Spec)) then begin
								field = "Spec";
								res=i;
								goto LBreak;
							end else begin
				
								if(FindSubString(search,Retrw.UPrice)) then begin
									field = "UPrice";
									res=i;
									goto LBreak;
									end;
								end;
								end;
			  
		  end;  
	
	end else begin

	if (RepSpec.flags[2]==2) then begin  //backward search
		  for (i = RepSpec.flags[1];i>=0;i=i-1) begin

					MatRowGet(Retr,i,Retrw);
						if(FindSubString(search,Retrw.ArtCode)) then begin
							field = "ArtCode";
							res=i;
							goto LBreak;
						end else begin
						
							if(FindSubString(search,Retrw.Spec)) then begin
								field = "Spec";
								res=i;
								goto LBreak;
							end else begin
				
								if(FindSubString(search,Retrw.UPrice)) then begin
									field = "UPrice";
									res=i;
									goto LBreak;
									end;
								end;
								end;						 
			end;	  
		
		  end;
	end;

  if ((field =="") ) then begin
  MessageBox(31306,search);
  end;

  LBreak:;	
  FindInMathRet=res;
return;
end;




global    //added -----------------------Dima 26.11.2014
function Integer FindInMathPO(var record RcVc RepSpec,var string field)
begin
  record POVc POr;
  row POVc POrw;
  boolean continue;
  Integer i,rwcnt,mwn,res,wn;
  string 20 search;
  
  //wn = CurWindow; //POTableSearchIClass
  mwn = RepSpec.flags[0];
  search = RepSpec.f1;
  GetWindowRecord(mwn,POr);
  rwcnt = MatRowCnt(POr);
  res=RepSpec.flags[3]; //last result
  field="";

	if (RepSpec.flags[2]==1) then begin  //forward search
		  for (i = RepSpec.flags[1];i<rwcnt;i=i+1) begin

					MatRowGet(POr,i,POrw);
						if(FindSubString(search,POrw.ArtCode)) then begin
							field = "ArtCode";
							res=i;
							goto LBreak;
						end else begin
						
							if(FindSubString(search,POrw.Spec)) then begin
								field = "Spec";
								res=i;
								goto LBreak;
							end else begin
				
								if(FindSubString(search,POrw.Price)) then begin
									field = "Price";
									res=i;
									goto LBreak;
									end;
								end;
								end;
			  
		  end;  
	
	end else begin

	if (RepSpec.flags[2]==2) then begin  //backward search
		  for (i = RepSpec.flags[1];i>=0;i=i-1) begin

					MatRowGet(POr,i,POrw);
						if(FindSubString(search,POrw.ArtCode)) then begin
							field = "ArtCode";
							res=i;
							goto LBreak;
						end else begin
						
							if(FindSubString(search,POrw.Spec)) then begin
								field = "Spec";
								res=i;
								goto LBreak;
							end else begin
				
								if(FindSubString(search,POrw.Price)) then begin
									field = "Price";
									res=i;
									goto LBreak;
									end;
								end;
								end;						 
			end;	  
		
		  end;
	end;

  if ((field =="") ) then begin
 	MessageBox(31306,search);
  end;

  LBreak:;	
  FindInMathPO=res;
return;
end;





global    //added -----------------------Dima 26.11.2014
function Integer FindInMathIntOR(var record RcVc RepSpec,var string field)
begin
  record IntORVc IntORr;
  row IntORVc IntORrw;
  boolean continue;
  Integer i,rwcnt,mwn,res,wn;
  string 20 search;
  
  //wn = CurWindow; //IntORTableSearchIClass
  mwn = RepSpec.flags[0];
  search = RepSpec.f1;
  GetWindowRecord(mwn,IntORr);
  rwcnt = MatRowCnt(IntORr);
  res=RepSpec.flags[3]; //last result
  field="";

	if (RepSpec.flags[2]==1) then begin  //forward search
		  for (i = RepSpec.flags[1];i<rwcnt;i=i+1) begin

					MatRowGet(IntORr,i,IntORrw);
						if(FindSubString(search,IntORrw.ArtCode)) then begin
							field = "ArtCode";
							res=i;
							goto LBreak;
						end else begin
						
							if(FindSubString(search,IntORrw.Spec)) then begin
								field = "Spec";
								res=i;
								goto LBreak;
							end else begin
				
								if(FindSubString(search,IntORrw.Price)) then begin
									field = "Price";
									res=i;
									goto LBreak;
									end;
								end;
								end;
			  
		  end;  
	
	end else begin

	if (RepSpec.flags[2]==2) then begin  //backward search
		  for (i = RepSpec.flags[1];i>=0;i=i-1) begin

					MatRowGet(IntORr,i,IntORrw);
						if(FindSubString(search,IntORrw.ArtCode)) then begin
							field = "ArtCode";
							res=i;
							goto LBreak;
						end else begin
						
							if(FindSubString(search,IntORrw.Spec)) then begin
								field = "Spec";
								res=i;
								goto LBreak;
							end else begin
				
								if(FindSubString(search,IntORrw.Price)) then begin
									field = "Price";
									res=i;
									goto LBreak;
									end;
								end;
								end;						 
			end;	  
		
		  end;
	end;

  if ((field =="") ) then begin
  	MessageBox(31306,search);
  end;

  LBreak:;	
  FindInMathIntOR=res;
return;
end;


global    //added -----------------------Dima 26.11.2014
function Integer FindInMathReb(var record RcVc RepSpec,var string field)
begin
  record RebVc Rebr;
  row RebVc Rebrw;
  boolean continue;
  Integer i,rwcnt,mwn,res,wn;
  string 20 search;
  
  //wn = CurWindow; //IntORTableSearchIClass
  mwn = RepSpec.flags[0];
  search = RepSpec.f1;
  GetWindowRecord(mwn,Rebr);
  rwcnt = MatRowCnt(Rebr);
  res=RepSpec.flags[3]; //last result
  field="";

	if (RepSpec.flags[2]==1) then begin  //forward search
		  for (i = RepSpec.flags[1];i<rwcnt;i=i+1) begin

					MatRowGet(Rebr,i,Rebrw);
					if(FindSubString(search,Rebrw.ITCode)) then begin
						field = "ITCode";
						res=i;
						goto LBreak;
					end;
			  
		  end;  
	
	end else begin

	if (RepSpec.flags[2]==2) then begin  //backward search
		  for (i = RepSpec.flags[1];i>=0;i=i-1) begin

					MatRowGet(Rebr,i,Rebrw);
						if(FindSubString(search,Rebrw.ITCode)) then begin
							field = "ITCode";
							res=i;
							goto LBreak;
						end;					 
			end;	  
		
		  end;
	end;

  if ((field =="") ) then begin
  	MessageBox(31306,search);
  end;

  LBreak:;	
  FindInMathReb=res;
return;
end;






global    //Edit---------------Anton  
function Integer FindInMathMyReb(var record RcVc RepSpec,var string field)
begin
  record MyRebVc MyRebr;
  row MyRebVc MyRebrw;
  boolean continue;
  Integer i,rwcnt,mwn,res,wn;
  string 20 search;
  
  //wn = CurWindow; //IntORTableSearchIClass
  mwn = RepSpec.flags[0];
  search = RepSpec.f1;
  GetWindowRecord(mwn,MyRebr);
  rwcnt = MatRowCnt(MyRebr);
  res=RepSpec.flags[3]; //last result
  field="";

	if (RepSpec.flags[2]==1) then begin  //forward search
		  for (i = RepSpec.flags[1];i<rwcnt;i=i+1) begin

					MatRowGet(MyRebr,i,MyRebrw);
					if(FindSubString(search,MyRebrw.ITCode)) then begin
						field = "ITCode";
						res=i;
						goto LBreak;
					end;
			  
		  end;  
	
	end else begin

	if (RepSpec.flags[2]==2) then begin  //backward search
		  for (i = RepSpec.flags[1];i>=0;i=i-1) begin

					MatRowGet(MyRebr,i,MyRebrw);
						if(FindSubString(search,MyRebrw.ITCode)) then begin
							field = "ITCode";
							res=i;
							goto LBreak;
						end;					 
			end;	  
		
		  end;
	end;

  if ((field =="") ) then begin
  	MessageBox(31306,search);
  end;

  LBreak:;	
  FindInMathMyReb=res;
return;
end;




global    //Edit---------------Anton  
function Integer FindInMathPLDef(var record RcVc RepSpec,var string field)
begin
  record PLDefVc PLDefr;
  row PLDefVc PLDefrw;
  boolean continue;
  Integer i,rwcnt,mwn,res,wn;
  string 20 search;
  
  //wn = CurWindow; //IntORTableSearchIClass
  mwn = RepSpec.flags[0];
  search = RepSpec.f1;
  GetWindowRecord(mwn,PLDefr);
  rwcnt = MatRowCnt(PLDefr);
  res=RepSpec.flags[3]; //last result
  field="";

	if (RepSpec.flags[2]==1) then begin  //forward search
		  for (i = RepSpec.flags[1];i<rwcnt;i=i+1) begin

					MatRowGet(PLDefr,i,PLDefrw);
					if(FindSubString(search,PLDefrw.ItemCode)) then begin
						field = "ItemCode";
						res=i;
						goto LBreak;
					end;
			  
		  end;  
	
	end else begin

	if (RepSpec.flags[2]==2) then begin  //backward search
		  for (i = RepSpec.flags[1];i>=0;i=i-1) begin

					MatRowGet(PLDefr,i,PLDefrw);
						if(FindSubString(search,PLDefrw.ItemCode)) then begin
							field = "ItemCode";
							res=i;
							goto LBreak;
						end;					 
			end;	  
		
		  end;
	end;

  if ((field =="") ) then begin
  	MessageBox(31306,search);
  end;

  LBreak:;	
  FindInMathPLDef=res;
return;
end;




global    //Edit---------------Anton  11:10 14.06.2018
function Integer FindInMathStockTake(var record RcVc RepSpec,var string field)
begin
  record StockTakeVc STr;
  row StockTakeVc STrw;
  boolean continue;
  Integer i,rwcnt,mwn,res,wn;
  string 20 search;
  
  //wn = CurWindow; //IntORTableSearchIClass
  mwn = RepSpec.flags[0];
  search = RepSpec.f1;
  GetWindowRecord(mwn,STr);
  rwcnt = MatRowCnt(STr);
  res=RepSpec.flags[3]; //last result
  field="";

	if (RepSpec.flags[2]==1) then begin  //forward search
		  for (i = RepSpec.flags[1];i<rwcnt;i=i+1) begin

					MatRowGet(STr,i,STrw);
					if(FindSubString(search,STrw.Spec)) then begin
						field = "Spec";
						res=i;
						goto LBreak;
					end else begin
						if(FindSubString(search,STrw.ArtCode)) then begin
							field = "ArtCode";
							res=i;
							goto LBreak;
						end;
					end;
			  
		  end;  
	
	end else begin

	if (RepSpec.flags[2]==2) then begin  //backward search
		  for (i = RepSpec.flags[1];i>=0;i=i-1) begin

					MatRowGet(STr,i,STrw);
						if(FindSubString(search,STrw.Spec)) then begin
							field = "Spec";
							res=i;
							goto LBreak;
						end else begin
							if(FindSubString(search,STrw.ArtCode)) then begin
								field = "ArtCode";
								res=i;
								goto LBreak;
							end;
						end;
			end;	  
		
		  end;
	end;

  if ((field =="") ) then begin
  	MessageBox(31306,search);
  end;

  LBreak:;	
  FindInMathStockTake=res;
return;
end;







global      // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:33 18.06.2019
function Integer FindInMathTemporaryPrices(var record RcVc RepSpec,var string field)
begin
  record TemporaryPricesVc STr;
  row TemporaryPricesVc STrw;
  boolean continue;
  Integer i,rwcnt,mwn,res,wn;
  string 20 search;
  
  //wn = CurWindow; //IntORTableSearchIClass
  mwn = RepSpec.flags[0];
  search = RepSpec.f1;
  GetWindowRecord(mwn,STr);
  rwcnt = MatRowCnt(STr);
  res=RepSpec.flags[3]; //last result
  field="";

	if (RepSpec.flags[2]==1) then begin  //forward search
		for (i = RepSpec.flags[1];i<rwcnt;i=i+1) begin
			MatRowGet(STr,i,STrw);
			if(FindSubString(search,STrw.ArtCode)) then begin
				field = "ArtCode";
				res=i;
				goto LBreak;
			end;
		end;  
	end else begin
		if (RepSpec.flags[2]==2) then begin  //backward search
		  for (i = RepSpec.flags[1];i>=0;i=i-1) begin
				MatRowGet(STr,i,STrw);
				if(FindSubString(search,STrw.ArtCode)) then begin
					field = "ArtCode";
					res=i;
					goto LBreak;
				end;
			end;	  
		end;
	end;

  if ((field =="") ) then begin
  	MessageBox(31306,search);
  end;

  LBreak:;	
  FindInMathTemporaryPrices=res;
return;
end;










global 
procedure GoToRow (boolean next)
begin
  record IntORVc IntORr;
  record POVc POr;
  record PUVc PUr;
  record RetVc Retr;
  record RebVc Rebr;
  record MyRebVc MyRebr;
  record RcVc RepSpec;
  record PLDefVc PLDefr;
  record StockTakeVc STr;
	record TemporaryPricesVc TPr;
  Integer wn,mwn,i; // i - number of current string
  string 20 field;
  string 50 windowClass;

  //field = "ArtCode"; //default field for ORVc
  wn=CurWindow;
  DeselectWindow(wn,true);
  GetWindowRecord(wn,RepSpec);
  mwn = RepSpec.flags[0]; //MotherWindow
  RepSpec.flags[1]=WindowActiveRow(mwn);


	  if (next==true) then begin    			//кнопка След. 
	   
	    		if (RepSpec.flags[1]<0) then begin  
	    			RepSpec.flags[1]=0; 
	    		end;
	    		if (RepSpec.flags[2]<>0) then begin
	    		RepSpec.flags[1]=RepSpec.flags[1]+1;
	    		end;
			RepSpec.flags[2]=1; //прямой поиск
	  end else begin						//кнопка Пред. 
			if (RepSpec.flags[2]<>0 ) then begin
	     	RepSpec.flags[1]=RepSpec.flags[1]-1;
	    end;
			RepSpec.flags[2]=2; //обратный поиск
	  end;

  PutWindowRecord(wn,RepSpec);  
 // i = FindInMath(RepSpec,field);


  windowClass = GetWindowClass(mwn);

  switch(windowClass) begin

  case "IntORDClass":
		i = FindInMathIntOR(RepSpec,field);
		GetWindowRecord(mwn,IntORr);
  		WindowFieldGoto(mwn,IntORr,i,field,true);

  case "PODClass":
		i = FindInMathPO(RepSpec,field);
		GetWindowRecord(mwn,POr);
  		WindowFieldGoto(mwn,POr,i,field,true);

  case "RetDClass":
		i = FindInMathRet(RepSpec,field);
		GetWindowRecord(mwn,Retr);
  		WindowFieldGoto(mwn,Retr,i,field,true);

  case "PUDClass":
		i = FindInMathPU(RepSpec,field);
		GetWindowRecord(mwn,PUr);
  		WindowFieldGoto(mwn,PUr,i,field,true);
  		
  case "RebDClass":
		i = FindInMathReb(RepSpec,field);
		GetWindowRecord(mwn,Rebr);
  		WindowFieldGoto(mwn,Rebr,i,field,true);
		
  case "MyRebDClass":
		i = FindInMathMyReb(RepSpec,field);
		GetWindowRecord(mwn,MyRebr);
  		WindowFieldGoto(mwn,MyRebr,i,field,true);
  case "PLDefDClass":
		i = FindInMathPLDef(RepSpec,field);
		GetWindowRecord(mwn,PLDefr);
  		WindowFieldGoto(mwn,PLDefr,i,field,true);
  case "StockTakeDClass":
		i = FindInMathStockTake(RepSpec,field);
		GetWindowRecord(mwn,STr);
  		WindowFieldGoto(mwn,STr,i,field,true);
	case "TemporaryPricesDClass":
		i = FindInMathTemporaryPrices(RepSpec,field);
		GetWindowRecord(mwn,TPr);
  		WindowFieldGoto(mwn,TPr,i,field,true);
  end;

  RepSpec.flags[1]=i;
  RepSpec.flags[3]=i;
  PutWindowRecord(wn,RepSpec);

return;
end;



global 		//added -----------------------Dima 25.11.2014
procedure GoNextItem()
begin
//next = true;
GoToRow(true);
return;
end;

global //added -----------------------ABR 4.12.2018
procedure BarCodeClick()
begin
record INVc INr;
integer wn,actwn;

wn = curwindow;
if(ReadMarkedRecord(wn,INr)) then begin
	CloseWindow(wn);
	wn = OpenWindow("INDClass",0,0,"","",INr);
end;
return;
end;


global 		//added -----------------------Dima 25.11.2014
procedure GoPreviousItem()
begin
//previous = false;
GoToRow(false);
return;
end;


global 
procedure TableSearchDsm()
BEGIN
  record RcVc RepSpec;
  Integer wn,res;
  wn = CurWindow;
  RepSpec.flags[0] = wn;
  RepSpec.flags[1] = 0;  //current row in table
  RepSpec.flags[2] = 0;  //search direction: 1-forward, 2-backward
  RepSpec.flags[3] = 0; 
  res = OpenWindow("TableSearchIClass",0,wn,"","",RepSpec);

  RETURN;
END;




global
procedure ZRepLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
	newOK = false;
	if (CurrentUser=="SA3") then begin
		newOK = true;
	end;
  return;
end;


global
procedure ZRepDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
	newOK = false;
	if (CurrentUser=="SA3") then begin
		newOK = true;
	end;
  return;
end;



