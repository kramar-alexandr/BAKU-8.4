remote updating procedure LinkIVtoLoyaltyCard(string,string,var record LoyaltyCardVc,var longint);

global updating procedure CheckPLRhistDsm()
begin
	integer wn;
	record PLVc PLr,OldPLr,OldPL2r;
	record RHistVc RHistr;
  record RHistVc RHist2r;
  string 100 tstr;
  boolean TrHs;
  record RcVc RepSpec;
	
	wn = curwindow;
	getwindowrecord(wn,PLr);
	RepSpec.f1 = PLr.ArtCode;
	RepSpec.f2 = PLr.PLCode;
	RepSpec.repname = "RHistCompareRecordRn";
	RunMaintenance(RepSpec);//(RepSpec,0);
	
	

return;
end;

global updating procedure RHistCompareRecordRn(record RcVc RepSpec)
begin
	integer wn;
	record PLVc PLr,OldPLr,OldPL2r;
	record RHistVc RHistr;
  record RHistVc RHist2r;
  string 100 tstr;
  boolean TrHs,first,diff;
  
  startreportnoheaderjob("RHistCompareRecordRn");
  	PLr.ArtCode = RepSpec.f1;
  	PLr.PLCode = RepSpec.f2;
  	if(readfirstmain(PLr,2,true))then begin
  		tstr = BuildRecordIdStr(PLr,currentcompany);
			TrHs = true;
			recordcopy(OldPLr,PLr);
			RHist2r.RecidStr = tstr;
			while(loopbackkey("RecidStr",RHist2r,1,TrHs))begin
				diff = false;
				if(RHist2r.RecidStr!=tstr)then begin TrHs = false; end;
				
				if(TrHs)then begin
					ReadOriginalRecord(RHist2r,OldPL2r);
					if(OldPL2r.PLCode!="RRP")then begin
						recorddelete(RHist2r);
						//stepback(RHist2r);
					end else begin
						if(!first)then begin
							first = true;
						end else begin
							ReadOriginalRecord(RHistr,OldPLr);						
						end;
						if(OldPLr.ExVatPrice!=OldPL2r.ExVatPrice or OldPLr.CurncyCode!=OldPL2r.CurncyCode)then begin
							diff = true;
						end;
						if(diff)then begin
							recordcopy(RHistr,RHist2r);
						end else begin
							recorddelete(RHist2r);
							//stepback(RHist2r);
						end;
						StartFormat(15);
							outstring(0,0,RHist2r.SerNr,false);
							if(diff)then begin
								outstring(15,0,"1",false);
							end else begin
								outstring(15,0,"0",false);
							end;
							outstring(100,0,OldPL2r.ExVatPrice,false);
							outstring(150,0,OldPLr.ExVatPrice,false);
						endformat;
					end;
				end;
			end;
			
  	end;
	
	endjob;

return;
end;


global webpublic updating procedure WebDelteteCopyPLHist()
begin
	record PLVc PLr;
	integer i;
	record RcVc RepSpec;
	boolean TrHs;
	
	
	logtext(0,"WebDelteteCopyPLHist");
	for(i=0;i<35;i=i+1)begin
		setcompany(i+1,true);
		logtext(0,"WebDelteteCopyPLHist compnr " & currentcompany);
		resetloop(PLr);
		PLr.ArtCode = "";
		TrHs = true;
		
		while(loopmain(PLr,1,TrHs))begin
			if(fileexists("stop"))then begin
				TrHs = false;
			end;
			RepSpec.f1 = PLr.ArtCode;
			RepSpec.f2 = PLr.PLCode;
			RHistCompareRecordRn(RepSpec);
		end;
	
	end;
	logtext(0,"WebDelteteCopyPLHist end");
return;
end;


global
updating procedure LinkIVDsm()
BEGIN
  record RcVc RepSpec;
  record LoyaltyCardVc LCr;
  record CUVc CUr;
  integer wn,nwn;
  boolean testf;
  
  wn = curwindow;
  if (WindowState(wn)==Rs_normal) then begin
    getwindowrecord(wn,LCr);
    CUr.Code = LCr.CustCode;
    testf = true;
    if (ReadFirstMain(CUr,1,true)==true) then begin
      if (CUr.blockedFlag==1) then begin 
        MessageBox(26436,"");
        testf = false;
      end;  
      if (CUr.CUType!=1) then begin 
        MessageBox(26437,"");
        testf = false;
      end;
    end else begin 
      MessageBox(20859,"");
      testf = false;
    end;
    if (testf) then begin
      RepSpec.f2 = LCr.SerNr;
      nwn = OpenWindow("LinkIVVClass",0,wn,"","",RepSpec);
      SelectWindow(nwn);
    end;
  end else begin
    MessageBox(1356,"");
  end;
	
  RETURN;
END;

global updating
function Boolean LinkIVVClassOnOKWindow(Integer wn)
begin
  Integer mwn;
  record RCVc RepSpec;
  record LoyaltyCardVc LCr;
  longint err;

  mwn = MotherWindow(wn);
	DeselectWindow(wn,true);
	GetWindowRecord(wn,RepSpec);
	if (nonblank(RepSpec.f1)) then begin
    LinkIVtoLoyaltyCard(RepSpec.f1,RepSpec.f2,LCr,err);
    if (err==-1) then begin
      PutWindowRecord(mwn,LCr);
      WindowDoOK(mwn,0);
      CloseWindow(wn);
    end else begin
      MessageBox(err,"");
    end;
	end;
  
  LinkIVVClassOnOKWindow = false;
  return;
end;

global
function string 40 LCCashbackCorrectionDClassSpecPasteName(Integer wn,string defpsname)
begin
  string 255 psname;
  record LCCashbackCorrectionVc LCCbCr;
  row LCCashbackCorrectionVc LCCbCrw;
  Integer rownr;
  
  psname = defpsname;
  switch (WindowActiveField(wn)) begin
    case "ITCode":
      GetWindowRecord(wn,LCCbCr);
      rownr = WindowActiveRow(wn);
      if (rownr>=0) then begin
        MatRowGet(LCCbCr,rownr,LCCbCrw);
      end;
      switch (LCCbCrw.CodeType) begin
        case 0: psname = "ITSClass";
        case 1: psname = "INSClass";
      end;
  end;
  LCCashbackCorrectionDClassSpecPasteName = psname;
  return;
end;


function Boolean LoyaltyCardDClassCustCodeEFActive(Integer wn,Integer fn,Integer wnst,Integer ef)
begin
  Boolean res;
  record PointsHistVc PointsHistr;
  record LoyaltyCardVc LoyaltyCardr;
  
  res = true;
  
  if (wnst==2) then begin//updatemode
    GetPrevWindowRecord(wn,LoyaltyCardr);
    PointsHistr.LMCardNr = LoyaltyCardr.SerNr;
    PointsHistr.CustCode = LoyaltyCardr.CustCode;
    if (ReadFirstKey("CustCode",PointsHistr,2,true)) then begin 
      // res = false;// Edit ************************** BPI Ukraine - KramarAlexandr - Thursday, 6 December 2018 15:38:22
    end;
    if (LoyaltyCardr.Closed!=0) then begin
      // res = false;// Edit ************************** BPI Ukraine - KramarAlexandr - Thursday, 6 December 2018 15:35:43
    end;
  end;

  LoyaltyCardDClassCustCodeEFActive = res;
  return;
end;

function Boolean LoyaltyCardDClassStartDateEFActive(Integer wn,Integer fn,Integer wnst,Integer ef)
begin
  Boolean res;
  record PointsHistVc PointsHistr;
  record LoyaltyCardVc LoyaltyCardr;
  
  res = true;
  
  if (wnst==2) then begin//updatemode
    GetPrevWindowRecord(wn,LoyaltyCardr);
    PointsHistr.LMCardNr = LoyaltyCardr.SerNr;
    PointsHistr.CustCode = LoyaltyCardr.CustCode;
    if (ReadFirstKey("CustCode",PointsHistr,2,true)) then begin 
      res = false;
    end;  
  end;
  LoyaltyCardDClassStartDateEFActive = res;
  return;
end;

global
function Boolean LoyaltyCardDClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin
  Boolean res;
  record LoyaltyCardVc LoyaltyCardr;
  
  res = true;
  switch (fieldname) begin
    case "CustCode": res = LoyaltyCardDClassCustCodeEFActive(wn,fn,wnst,changed);
    // case "StartDate": res = LoyaltyCardDClassStartDateEFActive(wn,fn,wnst,changed);
    otherwise
      switch (wnst) begin
        case Rs_update:
          GetPrevWindowRecord(wn,LoyaltyCardr);  
          if (LoyaltyCardr.Closed!=0) then begin
            res = false;
          end;
      end;
  end;
  
  if(currentuser=="SA")then begin// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 26 March 2018 14:56:35
  	//res = true;
  end;
  
  LoyaltyCardDClassActiveEditField = res;
  return;
end;