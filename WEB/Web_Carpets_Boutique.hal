//server-only
external procedure ExtractObj(string,var Integer,var string);
external procedure ExtractObjWithSeparator(string,string,Boolean,var Integer,var string);
external function string 255 StrReplace(string,string,string);// Edit ************************** Tuesday, 3 October 2017 17:25:37
external function string 255 imgStrReplace(string);// Edit ************************** Tuesday, 10 October 2017 15:20:55

function boolean FindTextInArea(string find,area farea)
begin
	boolean res;
	longint pos,i,lenth,lenarea;
	string 200 sfind,sfind1;
	area alentest;
	
	addtexttoarea(find,alentest);
	lenarea = GetAreaLength(alentest);
	sfind1 = getstringfromarea(alentest,0,lenarea);
	res = false;
	lenth = GetAreaLength(farea);
	if(lenth>=lenarea)then begin
		For(i=0;i<=lenth-lenarea;i=i+1) begin
			sfind = getstringfromarea(farea,i,lenarea);
			if(UpperCase(sfind)==UpperCase(sfind1))then begin
				res = true;
				goto LFind;
			end;
		end;
	end; 
LFind:;	
	FindTextInArea = res;
return;
end;

function integer CheckRequestForSendCarpet(string lastsyncnr,integer requestf,var string opencurlybr,var string closecurlybr,var string opensqrbr,var string closesqrbr,var string paws,var string kpaws,var string colon,var string space,var string nextline,var string comma)
begin	
  integer res;
  
  logtext(0,"CheckRequestForSendCarpet 1");
  
	res = 0;
	switch (requestf) begin
	 case 1:
	   res = 1;
  	 colon = ":";
  	 comma = "!===!";
	 case 2:
	   if (lastsyncnr=="OK") then begin
	     res = 2;
	   end;
	   if (lastsyncnr=="FAIL") then begin
	     res = 3;
	   end;
	end;
	logtext(0,"CheckRequestForSendCarpet 2");
 
 CheckRequestForSendCarpet = res;
 return;
end;

procedure CheckImagePath(string filename1,string filepathP,var string filepathC,var string exten)
begin
	string 50 filename;
  
  filename = imgStrReplace(filename1);
  
  
  exten = "";
  if (FILEEXISTS(filepathP & filename & ".jpeg")) then begin
		filepathC = filepathP & filename & ".jpeg";
		exten = "jpeg";
	end else begin
		if (FILEEXISTS(filepathP & filename & ".png")) then begin
			filepathC = filepathP & filename & ".png";
			exten = "png";
		end else begin
			if (FILEEXISTS(filepathP & filename & ".jpg")) then begin
				filepathC = filepathP & filename & ".jpg";
				exten = "jpg";
			end else begin
			  if (FILEEXISTS(filepathP & filename & ".tif")) then begin
			    filepathC = filepathP & filename & ".tif";
				  exten = "tif";
			  end;
			end;
		end;
	end;
	
  return;
end;

global
updating function boolean HandleWebSendItemsCarpetsBoutique()
begin
  record ItemStatusVc ISr;
  record INVc INr;
  row INVc INrw;
  record DIVc DIr;
  record PLVc PLr;
  record CompaniesBlock Compb;
  row CompaniesBlock Comprw;
  string 2 opencurlybr,closecurlybr,opensqrbr,closesqrbr,paws,kpaws,colon,space,comma;
  string 5 nextline,exten;
  boolean TrHs,TrHs1,testf,testf1,res,openjson;
  integer sendf,requestf;
  integer pos,i,j,rwcnt,rwcnt1,oldcompany,loopcnt;
  string 20 classfound,brand,type,collection,suff;
  string 255 azedescr,rusdescr,engdescr,azename,rusname,engname,azetech,rustech,engtech,filename;
  string 100 filepathP,filepathC,lastsyncnr;
  area imagearea,ames,isarea;
  LongInt arelen,foundflag,lastflag;
  val price;
  	
	res = false;
	openjson = false;
	logtext(0,"Sending items to IP: " & WebRemoteIpAddress);
	
	lastsyncnr = WebGetArg("lastsyncnr");
	requestf = StringToInt(WebGetArg("requestf"));
	
	// logtext(0,"lastsyncnr " & lastsyncnr);
	// logtext(0,"requestf " & requestf);
	
	sendf = CheckRequestForSendCarpet(lastsyncnr,requestf,opencurlybr,closecurlybr,opensqrbr,closesqrbr,paws,kpaws,colon,space,nextline,comma);
	
	switch (sendf) begin
	  case 0:
		  LogText(0,"Error: Unknown command for WebSendItemsCarpetsBoutique");
		  goto LHandleWebSendItemsCarpetsBoutique;
		case 2:
			LogText(0,"Items are synchronized with IP: " & WebRemoteIpAddress);
			goto LHandleWebSendItemsCarpetsBoutique;
	  case 3:
	 	  LogText(0,"Items posting failed to IP: " & WebRemoteIpAddress);
		  goto LHandleWebSendItemsCarpetsBoutique;
	end;
	
	foundflag = StringToLongInt(lastsyncnr);
	
	logtext(0,"Sending items to IP1: " & WebRemoteIpAddress);
	
	oldcompany = CurrentCompany;  
  BlockLoad(Compb);
  rwcnt1 = MatRowCnt(Compb);  
  for (j=0;j<rwcnt1;j=j+1) begin
  	MatRowGet(Compb,j,Comprw);
  	//if ((StringToInt(Comprw.CompCode)==13) and SetCompanyCode(Comprw.CompCode,false) and Comprw.ActiveStatus==0) then begin 
  	if (j==12) then begin 
  		SetCompany(j+1,false);
			if (sendf==1) then begin
				if (openjson==false) then begin
				  AddTextToArea(opensqrbr & nextline, ames);
				  AddTextToArea(opencurlybr & nextline, ames);
          AddTextToArea(kpaws & "Service" & kpaws & colon & space & paws & "Request Is Valid" & paws & nextline, ames);
				end;
				loopcnt = 0;
				INr.SyncFlag = foundflag;
				TrHs = true;
				logtext(0,"HandleWebSendItemsCarpetsBoutique loop SyncFlag begin");
				while (LoopKey("SyncFlag",INr,1,TrHs)) begin
					testf = true;
					if (INr.SyncFlag<=foundflag) then begin testf = false; end;
					if (testf) then begin
						if (openjson==false) then begin
	            AddTextToArea(closecurlybr & comma & nextline, ames);
						  openjson = true;
						end else begin
						  AddTextToArea(closecurlybr & comma & nextline, ames);
						end;		
						
						AddTextToArea(opencurlybr & nextline, ames);
						
						AddTextToArea(kpaws & "item" & kpaws & colon & space & paws & INr.Code & paws & comma & nextline, ames);
						AddTextToArea(kpaws & "barcode" & kpaws & colon & space & paws & INr.BarCode & paws & comma & nextline, ames);
						AddTextToArea(kpaws & "name" & kpaws & colon & space & paws & INr.Name & paws & comma & nextline, ames);
						AddTextToArea(kpaws & "size" & kpaws & colon & space & paws & INr.Size & paws & comma & nextline, ames);
						AddTextToArea(kpaws & "colour" & kpaws & colon & space & paws & INr.Colour & paws & comma & nextline, ames);
						PLr.PLCode = "RRP";
		        PLr.ArtCode = INr.Code;
		        ReadFirstMain(PLr,2,true);
		        price = PLr.ExVatPrice;
						AddTextToArea(kpaws & "price" & kpaws & colon & space & price & nextline, ames);
				  	if (lastflag < INr.SyncFlag) then begin
				  		lastflag = INr.SyncFlag;
				  	end;
					end;
				  loopcnt = loopcnt + 1;	
				  
				  if(loopcnt>40)then begin// Edit ************************** BPI Ukraine - KramarAlexandr - Wednesday, 31 January 2018 18:29:17
				   //TrHs = false;
				  end;
				end; RESETLOOP(INr);
				logtext(0,"HandleWebSendItemsCarpetsBoutique loop SyncFlag end");
				SetAreaZeroSize(isarea);
				ISr.Location = ";;;";
      	TrHs1 = true;
      	while (LoopKey("Location",ISr,1,TrHs1)) begin
      	  testf1 = true;
      	  if (ISr.Location!=";;;") then begin testf1 = false; TrHs1 = false; end;
      	  if (ISr.Instock<=0) then begin testf1 = false; end;
      	  if (testf1) then begin
      	    AddTextToArea(ISr.Code & "????", isarea);
      	  end;
      	end; RESETLOOP(ISr);
			end;
		end;
	end; 
	
	if (openjson==false) then begin
    AddTextToArea(closecurlybr & comma & nextline, ames);
    lastflag = foundflag;
	  openjson = true;
	end;
	if (openjson) then begin
	 AddTextToArea(closecurlybr, ames);
	 
	 AddTextToArea(comma & nextline & opencurlybr & nextline, ames);
	 AddTextToArea(kpaws & "itemscount" & kpaws & colon & space & loopcnt & nextline, ames);
	 AddTextToArea(closecurlybr, ames);
	 
	 AddTextToArea(comma & nextline & opencurlybr & nextline, ames);
	 AddTextToArea(kpaws & "availableitems" & kpaws & colon & space & paws, ames);
	 InsertAreaBeforeArea(ames,isarea);
	 SetAreaZeroSize(ames);
	 GetAreaFromArea(isarea,0,GetAreaLength(isarea),ames);
	 AddTextToArea(paws & nextline & closecurlybr, ames);
	 
	 AddTextToArea(comma & nextline & opencurlybr & nextline, ames);
	 AddTextToArea(kpaws & "lastsyncflag" & kpaws & colon & space & lastflag & nextline, ames);
	 AddTextToArea(closecurlybr & nextline, ames);
	 
	 AddTextToArea(closesqrbr & nextline, ames);
	 //WriteAreaToFile(ames,filename,1);
	end;

	ResetCompany(oldcompany);
	
	if (sendf==1 /*and FileExists(filename)*/) then begin

		WEBOUTAREA(ames);
		//WebOutFile(filename);
		//Delete_File(filename);
		res = true;
	end;
	
LHandleWebSendItemsCarpetsBoutique:;
	
	HandleWebSendItemsCarpetsBoutique = res;
  
  return;
end;

global 
webpublic updating Procedure WebSendItemsCarpetsBoutique()
begin
		
		
		LogText(0,"Carpets WebSendItemsCarpetsBoutique");
  	if (HandleWebSendItemsCarpetsBoutique) then begin
  		LogText(0,"Items are sent to IP: " & WebRemoteIpAddress);
  	end;

return;
end;

global
procedure MyExtractObjWithSeparator(string separator,string ostr,Boolean skipblankf,var Integer pos,var string rstr)
begin
  string 10 c1,c2;
  Boolean sepf;
  integer seplen;

  rstr = "";
  seplen = len(separator);
  if (skipblankf==false) then begin
LNEXTCHAR:;
    if (pos>=len(ostr)) then begin goto L99; end;
    c1 = Mid(ostr,pos,1); 
    c2 = Mid(ostr,pos,seplen); 
    pos = pos + 1;
    if (c2==separator) then begin
      pos = pos + (seplen - 1);
      goto L99; 
    end else begin
      rstr = rstr & c1;
      goto LNEXTCHAR;
    end;
  end else begin
L477:;
    if (pos>=len(ostr)) then begin goto L99; end;
    c1 = Mid(ostr,pos,1);
    c2 = Mid(ostr,pos,seplen); 
    pos = pos + 1;
    if (c2==separator) then begin
      if (len(rstr)==0) then begin 
        goto L477; 
      end;
      pos = pos + (seplen - 1);
      goto L8888;
    end;
    if ((len(rstr)<255)) then begin 
      rstr = rstr & c1;
    end;
    goto L477;
L8888:;
    if (pos>len(ostr)) then begin goto L99; end;
    c1 = Mid(ostr,pos,1);  
    c2 = Mid(ostr,pos,seplen);
    pos = pos + 1;
    if (c2==separator) then begin pos = pos + (seplen - 1); goto L8888; end;
    pos = pos - 1;
  end;
L99:;
  return;
end;

global 
webpublic updating Procedure WebGetIconCarpetsBoutique()
begin
  area imagearea,ames;
  string 20 splitstr,exten,curitem,curlen;
  string 100 filepathP,filepathC;
  LongInt curimagelength,curlenlongInt;
  record INVc INr;
  record CompaniesBlock Compb;
  row CompaniesBlock Comprw;
  integer j,rwcnt1,oldcompany,pos,pos1,cnt;
  string 255 imagenames, chkimagelength
    
    imagenames = WebGetArg("imagename");
  	chkimagelength = WebGetArg("chkimagelength");
  	SetAreaZeroSize(ames);
  	// logtext(0,"imagenames " & imagenames);
  	// logtext(0,"chkimagelength " & chkimagelength);
  	WebSetContentType("application/binary");
    oldcompany = CurrentCompany;  
    splitstr = "!===!";
    BlockLoad(Compb);
    rwcnt1 = MatRowCnt(Compb);  
    //for (j=0;j<rwcnt1;j=j+1) begin
    	MatRowGet(Compb,12,Comprw);
    	if (SetCompany(13,false)) then begin 
  			filepathP = "webcust/" & Comprw.ShortName & "/";
  			pos = 0;
  			
  			pos1 = 0;
        MyExtractObjWithSeparator("!===!",imagenames,true,pos,curitem);
        
        MyExtractObjWithSeparator("!===!",chkimagelength,false,pos1,curlen);
        curlenlongInt = StringToLongInt(curlen);
        while (nonblank(curitem)) begin
          filepathC = "";
    			if (StringToInt(Comprw.CompCode)==9) then begin
    				INr.Code = curitem;
    				ReadFirstMain(INr,1,true);
    				CheckImagePath(INr.AlternativeCode,filepathP,filepathC,exten);
    			end else begin
    				CheckImagePath(curitem,filepathP,filepathC,exten);
    			end;
    			if (NonBlank(filepathC)) then begin
  					SetAreaZeroSize(imagearea);
  					AddFileToArea(filepathC,imagearea,true);
  					curimagelength = GetAreaLength(imagearea);
  					// logtext(0,filepathC & " | " & curimagelength);
  					if (curimagelength==StringToLongInt(curlenlongInt)) then begin 
  					  AddTextToArea(splitstr & "imagelength:" & curimagelength & splitstr & "imageext:" & splitstr & "imagecode:" & splitstr,ames);
  					end else begin 
  					  AddTextToArea(splitstr & "imagelength:" & curimagelength & splitstr & "imageext:" & curitem & "." & exten & splitstr & "imagecode:",ames);
  					  writeareatofile(ames,"ames " & cnt & ".txt",0);
  					  InsertAreaBeforeArea(ames,imagearea);
  					  
  					  cnt = cnt - 1;
  					  SetAreaZeroSize(ames);
  					  GetAreaFromArea(imagearea,0,GetAreaLength(imagearea),ames);
  					end;
  				end else begin
  				  AddTextToArea(splitstr & "imagelength:0" & splitstr & "imageext:" & splitstr & "imagecode:" & splitstr,ames);
				  end;
          
          MyExtractObjWithSeparator("!===!",imagenames,true,pos,curitem);
          MyExtractObjWithSeparator("!===!",chkimagelength,false,pos1,curlen); 
          curlenlongInt = StringToLongInt(curlen);
        end;
  		end;
  	//end; 
  
  	ResetCompany(oldcompany);

  	if (GetAreaLength(ames)!=0) then begin
  		writeareatofile(ames,"ames.txt",0);
  	  WEBOUTAREA(ames);
  	end else begin
  	  WebOutString("");
  	end;

return;
end;


global 
webpublic updating Procedure WebShakeHandsCarpetsBoutique()
begin

  WebOutString("Connection_is_OK");

return;
end;