//server-only
external procedure ExtractObjWithSeparator(string,string,Boolean,var Integer,var string);
external function Boolean LoggedInTest();
external function string 255 ChangeCaseStr(string,integer);
external function boolean CompanyIsJWLikeCompany(Integer);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external procedure RunSTCompRn(record RcVc,boolean);

webpublic
global procedure WebMyLogIn()
begin
  Time checkTime;
  array string 5 checkTimeStr;
  string 255 sentMD5,checkMD5;
  integer deltaMin,i,cti;
  boolean isLogedIn;
  
	logtext(0,"================================================ WebMyLogIn");
  deltaMin = 2;
  sentMD5 = WebGetArg("param");
  checkTime = CurrentTime;
  cti = 0;
  checkTimeStr[cti] = GetHour(checkTime) & ":" & GetMinute(checkTime);
  cti = cti + 1;
  for (i=1;i<deltaMin;i=i+1) begin
    checkTimeStr[cti] = GetHour(checkTime) & ":" & (GetMinute(checkTime) + i);
    cti = cti + 1;
    checkTimeStr[cti] = GetHour(checkTime) & ":" & (GetMinute(checkTime) - i);
    cti = cti + 1;
  end;
  isLogedIn = LoggedInTest();
  if !isLogedIn then begin
    for (i=0;i<checkTimeStr.length;i=i+1) begin
      checkMD5 = MD5String(checkTimeStr[i]);
      if (sentMD5==checkMD5) then begin
        isLogedIn = true;
        i = checkTimeStr.length;
      end;
    end;
  end;
  if isLogedIn then begin
    WebOutString(MD5String(GetHour(checkTime) & ":" & GetMinute(checkTime)));
    if (WebGetArg("comp")=="") then begin
      WebOutString("," & currentcompany);
    end;
  end;
  return;
end;

webpublic
global procedure WebSales()
begin
	record DIVc DIr;
  record IVVc IVr;
  row IVVc IVrw;
	record INVc INr;
	boolean TrHs,testf;
	vector string 100 vClass,vName;
	string 100 type,brand,category,tstr;
	integer pos,comp;
	vector val vSum,vBrandSum;
	array string 50 aTags;
  vector boolean vBarndInArr,vTagInArr;
	integer i,mtrw,b,t,cti;
  string 5 nl,tab;
  array string 50 aBrand,aBrandTmp;
  
  Date sd,ed;
  Time checkTime;
  array string 5 checkTimeStr;
  string 255 sentMD5,checkMD5,loc,cat;
  
  integer deltaMin;
  boolean isLogedIn;

	logtext(0,"================================================ WebSales");
  deltaMin = 2;
	sd = StringToDate(WebGetArg("sd"));
  ed = StringToDate(WebGetArg("ed"));
  loc = WebGetArg("loc");
  comp = StringToInt(WebGetArg("comp"));
  sentMD5 = WebGetArg("param");
  cat = WebGetArg("cat");
  if (cat=="null") then begin
    cat = "";
  end;
  
  SetCompanyCode(comp,false);
  checkTime = CurrentTime;
  cti = 0;
  checkTimeStr[cti] = GetHour(checkTime) & ":" & GetMinute(checkTime);
  cti = cti + 1;
  for (i=1;i<deltaMin;i=i+1) begin
    checkTimeStr[cti] = GetHour(checkTime) & ":" & (GetMinute(checkTime) + i);
    cti = cti + 1;
    checkTimeStr[cti] = GetHour(checkTime) & ":" & (GetMinute(checkTime) - i);
    cti = cti + 1;
  end;
  isLogedIn = false;
  for (i=0;i<checkTimeStr.length;i=i+1) begin
    checkMD5 = MD5String(checkTimeStr[i]);
    if (sentMD5==checkMD5) then begin
      isLogedIn = true;
      i = checkTimeStr.length;
    end;
  end;
  if isLogedIn then begin
  
    //nl = "<br>";
    //tab = " | ";
    nl = chr(13) & chr(10);
    tab = ",";
    WebOutString("Brand" & tab & "Type" & tab & "Sum" & nl);
    resetloop(DIr);
    while(loopmain(DIr,1,true))begin
      vClass[DIr.Code] = DIr.CType;
      vName[DIr.Code] = DIr.Name;
    end;
    
    resetloop(IVr);
    TrHs = true;
    t = 0;
    IVr.InvDate = sd;
    while(loopkey("InvDate",IVr,1,TrHs))begin
      testf = true;
      if (IVr.InvDate>ed) then begin TrHs = false; testf = false; end;
      if (nonblank(loc) and (IVr.Location!=loc)) then begin testf = false; end;
      if (IVr.OKFlag==0) then begin testf = false; end;
      if (testf) then begin
        mtrw = matrowcnt(IVr);
        for (i=0;i<mtrw;i=i+1) begin
          matrowget(IVr,i,IVrw);
          if (IVrw.Sum!=0) then begin
            if (IVrw.stp==kInvoiceRowTypeNormal) then begin
              INr.Code = IVrw.ArtCode;
              readfirstmain(INr,1,true);
              type = "UNKNOWN";
              brand = "UNKNOWN";
              category = "";
              tstr = "";
              pos = 0;
              ExtractObjWithSeparator(",",INr.DispGroups,true,pos,tstr);
              while (nonblank(tstr)) begin
                if (nonblank(tstr)) then begin
                  if (vClass[tstr]=="TYPE") then begin
                    type = vName[tstr];
                  end;
                  if (vClass[tstr]=="BRAND") then begin
                    brand = vName[tstr];
                    if !vBarndInArr[brand] then begin
                      aBrand[b] = brand;
                      vBarndInArr[brand] = true;
                      b = b + 1;
                    end;
                  end;
                  switch (cat) begin
                    case "Accessories":
                      if (type=="ACCESSORIES") then begin
                        if (vClass[tstr]=="CATEGORY_A") then begin
                          category = vName[tstr];
                        end;
                      end;
                    case "Watch":
                      //?????????????
                    case "Jewellery":
                      if (type=="JEWELLERY") then begin
                        if (vClass[tstr]=="CATEGORY_J") then begin
                          category = vName[tstr];
                        end;
                      end;
                  end;
                end;
                ExtractObjWithSeparator(",",INr.DispGroups,true,pos,tstr);
              end;
              if nonblank(cat) then begin
                if nonblank(category) then begin
                  vSum[brand & ";" & category] = vSum[brand & ";" & category] + MulRateToBase1(IVrw.CurncyCode,IVrw.Sum,IVrw.FrRate,IVrw.ToRateB1,IVrw.ToRateB2,IVrw.BaseRate1,IVrw.BaseRate2,DefaultCurRoundOff);
                  if (vSum[brand & ";" & category] != 0) then begin
                    if (!vTagInArr[brand & ";" & category]) then begin
                      aTags[t] = brand & ";" & category;
                      t = t + 1;
                      vTagInArr[brand & ";" & category] = true;
                    end;
                  end;
                  vBrandSum[brand] = vBrandSum[brand] + MulRateToBase1(IVrw.CurncyCode,IVrw.Sum,IVrw.FrRate,IVrw.ToRateB1,IVrw.ToRateB2,IVrw.BaseRate1,IVrw.BaseRate2,DefaultCurRoundOff);
                end;
              end else begin
                vSum[brand & ";" & type] = vSum[brand & ";" & type] + MulRateToBase1(IVrw.CurncyCode,IVrw.Sum,IVrw.FrRate,IVrw.ToRateB1,IVrw.ToRateB2,IVrw.BaseRate1,IVrw.BaseRate2,DefaultCurRoundOff);
                if (!vTagInArr[brand & ";" & type]) then begin
                  aTags[t] = brand & ";" & type;
                  t = t + 1;
                  vTagInArr[brand & ";" & type] = true;
                end;
                vBrandSum[brand] = vBrandSum[brand] + MulRateToBase1(IVrw.CurncyCode,IVrw.Sum,IVrw.FrRate,IVrw.ToRateB1,IVrw.ToRateB2,IVrw.BaseRate1,IVrw.BaseRate2,DefaultCurRoundOff);
              end;
            end;
          end;
        end;
      end;
    end;
    /*GetVectorTags(vSum,aTags);
    for (i=0;i<aTags.length;i=i+1) begin
      vTagExist[aTags[i]] = true;
    end;*/
    
    for (b=0;b<aBrand.length-1;b=b+1) begin
      for (i=0;i<aBrand.length-1;i=i+1) begin
        if (vBrandSum[aBrand[i]] < vBrandSum[aBrand[i+1]]) then begin
          tstr = aBrand[i+1];
          aBrand[i+1] = aBrand[i];
          aBrand[i] = tstr;
        end;
      end;
    end;
    for (i=0;i<aBrand.length;i=i+1) begin
      aBrandTmp[i] = aBrand[i];
      vBarndInArr[aBrand[i]] = false;
      aBrand[i] = "";
    end;
    //ClearArray(aBrand);
    
    for (i=0;i<10;i=i+1) begin
      aBrand[i] = aBrandTmp[i];
      vBarndInArr[aBrand[i]] = true;
    end;
    for (i=0;i<aTags.length;i=i+1) begin
      pos = 0;
      ExtractObjWithSeparator(";",aTags[i],true,pos,brand);
      if vBarndInArr[brand] then begin
        ExtractObjWithSeparator(";",aTags[i],true,pos,type);
        WebOutString(ChangeCaseStr(brand,4) & tab & ChangeCaseStr(type,4) & tab & vSum[aTags[i]] & nl);
      end;
    end;
  end;
  return;
end;

webpublic
global procedure WebLoadCompanies()
begin
  record CompaniesBlock Compb;
  row CompaniesBlock Comprw;
	integer i,mtrw;
  string 5 nl,delim;
  boolean firstf;
  
	logtext(0,"================================================ WebLoadCompanies");
  nl = chr(13) & chr(10);
  delim = ",";
  firstf = true;
  BlockLoad(Compb);
  mtrw = matrowcnt(Compb);
  for(i=0;i<mtrw;i=i+1)begin
    matrowget(Compb,i,Comprw);
    if ((StringToInt(Comprw.CompCode)==16) or (CompanyIsJWLikeCompany(StringToInt(Comprw.CompCode)))) or (uppercase(WebGetArg("all"))=="TRUE") then begin
      if (firstf) then begin
        firstf = false;
        WebOutString(Comprw.CompCode & delim & Comprw.CompName & delim & Comprw.ShortName);
      end else begin
        WebOutString(nl & Comprw.CompCode & delim & Comprw.CompName & delim & Comprw.ShortName);
      end;
    end;
  end;
  
  return;
end;

webpublic
global procedure WebLoadPeriods()
begin
  record PeriodBlock PeriodRec;
  row PeriodBlock Periodrw;
  Integer i,rwcnt,comp;
  string 5 nl,delim;
  boolean firstf,foudnf;
  
	logtext(0,"================================================ WebLoadPeriods");
  WebSetContentType("text/binary; charset=UTF-8");
  nl = chr(13) & chr(10);
  delim = ",";
  firstf = true;
  comp = StringToInt(WebGetArg("comp"));
  
  foudnf = false;
  if(blank(comp))then begin
  	WebOutString("-");
  	comp = 1;
  end;
  SetCompanyCode(comp,false);
  BlockLoad(PeriodRec);
  rwcnt = MatRowCnt(PeriodRec);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(PeriodRec,i,Periodrw);
    if (firstf) then begin
      firstf = false;
      WebOutString(DateToString(Periodrw.FromDate,"DD/MM/YYYY") & ":" & DateToString(Periodrw.ToDate,"DD/MM/YYYY"));
      foudnf = true;
    end else begin
      WebOutString(nl & DateToString(Periodrw.FromDate,"DD/MM/YYYY") & ":" & DateToString(Periodrw.ToDate,"DD/MM/YYYY"));
      foudnf = true;
    end;
    //Periodrw.CodeStr;
  end;  
	
	if(foudnf==false)then begin
		WebOutString("-");
	end;
  return;
end;

webpublic
global procedure WebLoadLocations()
begin
  record LocationVc Locr;
	Integer comp;
  string 5 nl,delim;
  boolean firstf;
    
	logtext(0,"================================================ WebLoadLocations");
  nl = chr(13) & chr(10);
  delim = ",";
  firstf = true;
  comp = StringToInt(WebGetArg("comp"));
  
  SetCompanyCode(comp,false);
  Locr.Code = "";
  while(loopmain(Locr,1,true))begin
    if (firstf) then begin
      firstf = false;
      WebOutString(Locr.Code);
    end else begin
      WebOutString(nl & Locr.Code);
    end;
  end;

  return;
end;

webpublic
global procedure WebLoadGroups()
begin
  record ITVc ITr;
  Integer comp;
  string 5 nl,delim;
  boolean firstf;
	
	logtext(0,"================================================ WebLoadGroups");

  nl = chr(13) & chr(10);
  delim = ",";
  firstf = true;
  comp = StringToInt(WebGetArg("comp"));
  
  SetCompanyCode(comp,false);
  ITr.Code = "";
  while(loopmain(ITr,1,true))begin
    if (firstf) then begin
      firstf = false;
      WebOutString(ITr.Code);
    end else begin
      WebOutString(nl & ITr.Code);
    end;
  end;

  return;
end;

webpublic
global procedure WebLoadBrands()
begin
  record BPIBrandVc ITr;
  Integer comp;
  string 5 nl,delim;
  boolean firstf;
  
	
	logtext(0,"================================================ WebLoadBrands");
  
  nl = chr(13) & chr(10);
  delim = ",";
  firstf = true;
  comp = StringToInt(WebGetArg("comp"));
  
  SetCompanyCode(comp,false);
  ITr.Name = "";
  while(loopkey("Name",ITr,1,true))begin
    if (firstf) then begin
      firstf = false;
      WebOutString(ITr.Name);
    end else begin
      WebOutString(nl & ITr.Name);
    end;
  end;

  return;
end;

webpublic
global procedure WebLoadClassifs()
begin
  record DIVc DIr;
  Integer comp;
  string 5 nl,delim;
  boolean firstf;
	
	logtext(0,"================================================ WebLoadClassifs");

  nl = chr(13) & chr(10);
  delim = ",";
  firstf = true;
  comp = StringToInt(WebGetArg("comp"));
  
  SetCompanyCode(comp,false);
  DIr.Code = "";
  while(loopmain(DIr,1,true))begin
    if (firstf) then begin
      firstf = false;
      WebOutString(DIr.Code);
    end else begin
      WebOutString(nl & DIr.Code);
    end;
  end;

  return;
end;

webpublic
global procedure WebSTCompRn()
begin
  record RcVc RepSpec;
  record BPIBrandVc BPIBrandr;

	logtext(0,"================================================ WebSTCompRn");

  SetCompanyCode(StringToInt(WebGetArg("comp")),false);
  RepSpec.f3 = WebGetArg("group");
  RepSpec.f4 = WebGetArg("classif");
  RepSpec.f6 = WebGetArg("brand");
  if(nonblank(RepSpec.f6))then begin
  	BPIBrandr.Name = RepSpec.f6;
  	if(readfirstkey("Name",BPIBrandr,1,true))then begin
  		RepSpec.f6 = BPIBrandr.Code;
  	end;
  end;
  RepSpec.AccStr = WebGetArg("loc");
  RepSpec.RegDate = WebGetArg("date");
  RunSTCompRn(RepSpec,true);
  
  return;
end;