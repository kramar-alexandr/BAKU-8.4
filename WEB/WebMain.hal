//server-only
webpublic global
procedure WebMainMenu()
begin
  if (WebLoginStatus==3) then begin
    WebOutString(MD5String(GetHour(CurrentTime) & ":" & GetMinute(CurrentTime)));
  end;
  return;
end;

webpublic global
procedure WebMain()
begin
  string 60 serverip;
	record ProgramStatusBlock PSb;
	integer compnr;
	record CompaniesBlock Cb;
	row CompaniesBlock Cbrw;
	
  blockload(PSb);
	blockload(Cb);
	compnr = currentcompany;
	matrowget(Cb,compnr-1,Cbrw);
	serverip = Cbrw.TCPIP & ":" & PSb.httpPort;
  WebOutString("<script>location.href = 'http://" & serverip & "/SaleStat.html'</script>");
  return;
end;

webpublic global
procedure WebUnknownLogin()
begin
  return;
end;

webpublic global
procedure ToolWebNotLoggedinMess()
begin
  return;
end;

//Edit-------------------Vitalii 15:30 05.04.2018
webpublic global
updating procedure WebDoLogout()
begin
  WebLogout;
  //WebMain;
  return;
end;


webpublic global
updating procedure WebCheckRHist()
begin
  record RHistVc RHr;
  string 30 rstr,RecidStr;
  vector integer vrstr;
  array string 20 keys;
  integer i,j,counter;
  string 10 c;
  string 50 recname,compnr,mainkey;
  integer cter,pref,check;
  boolean newrhr,TrHs;
  area arr;
  
  RecidStr = "";
  RHr.RecidStr = "";
  TrHs = true;
  while(loopkey("RecidStr",RHr,1,TrHs))begin
  	newrhr = false;
  	if(RHr.RecidStr!=RecidStr and nonblank(RHr.RecidStr))then begin
  		GetVectorTags(vrstr,keys);
  		if(keys.length>0)then begin
  			for(i=0;i<keys.length;i=i+1)begin
  				if(vrstr[keys[i]]>1)then begin
  					c = left(RHr.RecidStr,1);
						pref = asc(c) + 1;
						compnr = mid(RHr.RecidStr,1,asc(c));
						recname = "";
						mainkey = "";
						cter = 0;
						if(pref<len(RHr.RecidStr))then begin
							for(j=pref;j<len(RHr.RecidStr);j=j+1)begin
									c = mid(RHr.RecidStr,j,1);
								if(asc(c)==0)then begin
									if((j+1)<len(RHr.RecidStr))then begin
										mainkey = mid(RHr.RecidStr,j+1,len(RHr.RecidStr)-(j+1));
									end;
									j = len(RHr.RecidStr);
								end else begin
									recname = recname & c;
								end;
							end;
						end else begin
						end;
						counter = counter + 1;
						if(counter>100)then begin
							TrHs = false;
						end;
						logtext(0,"compnr " & compnr & "_____record " & recname & " mainkey " & mainkey);
						//setareazerosize(arr);
						//addtexttoarea(compnr & "_____record " & recname & " RecidStr " & RecidStr & chr(13) & chr(10),arr);
						//writeareatofile(arr,"rsidstr.txt",1);
  				end;
  			end;
  		end;
  		ClearArray(keys);
  		ClearVector(vrstr);
  		newrhr = true;
  		RecidStr = RHr.RecidStr;
  	end;
  	vrstr[RHr.TransDate & "_" & RHr.TransTime] = vrstr[RHr.TransDate & "_" & RHr.TransTime] + 1;
  
  end;
  
  return;
end;


global webpublic updating procedure WebUpdatePLHist()
begin
	record PLVc PLr;
	record PLHistVc PLHr;
	boolean TrHs;
	
	setcompany(25,false);
	
	TrHs = true;
	PLHr.PLCode = "RRP";
	while(loopmain(PLHr,1,TrHs))begin
		if(PLHr.PLCode!="RRP")then begin TrHs = false; end;
		if(blank(PLHr.LastCurncyCode) or PLHr.LastPrice==blankval)then begin
			PLr.PLCode = PLHr.PLCode;
			PLr.ArtCode = PLHr.ArtCode;
			if(readfirstmain(PLr,2,true))then begin
				PLHr.LastPrice = PLr.ExVatPrice; 
				PLHr.LastCurncyCode = PLr.CurncyCode;
				recordstore(PLHr,true);
			end;
			
		end;
	end;

return;
end;