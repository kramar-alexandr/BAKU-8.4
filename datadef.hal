SourceFile("halcust/halpatch",0);
//SourceFile("halcust/halpatch\\ToImport",0);// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 26 December 2017 10:27:54
SourceFile("halcust/Import",0);
SourceFile("halcust/RActions",0);
SourceFile("halcust/Bitrix",0);
SourceFile("halcust/Export",0);
SourceFile("halcust/Report",0);
SourceFile("halcust/ReportCust",0);
SourceFile("halcust/ReportStd",0);
SourceFile("halcust/RemoteWA",0);
SourceFile("halcust/Windows",0);
SourceFile("halcust\\Windows_ENG",0);// Edit ************************** Monday, 3 November 2014 10:59:24
//SourceFile("halcust\\WindowsFarsi",3);// Edit ************************** Monday, 3 November 2014 10:59:24
SourceFile("halcust/WAction",0);
SourceFile("halcust/WEB",0);
SourceFile("halcust/ItemHist",0);
SourceFile("halcust/Fiscal",0);
//SourceFile("halcust\\Fiscal",0);


begin
	BlockBegin(CassaIDBlock,-,"");   //  by Ira
		RecordField(CassaId,M4Str,255,0);
		RecordField(CassaToken,M4Str,255,0);
  EndBlock;
	
  RecordAddBegin(INVc,"INVc_Custom");
    RecordField(PurchAcc,M4Code,10,AccVc); //Edit***************************Sasha2,11:29 16.12.2014
    RecordField(SyncFlag,M4Long,0,0); //Edit***************************Sasha2,16:33 28.11.2014
    RecordField(TempFlag,M4Long,0,0); //Edit***************************Sasha2,16:34 28.11.2014
    RecordField(SavedCount,M4Long,0,0); //Edit***************************Sasha2,10:22 01.12.2014
    RecordField(ConsgType,M4Set,900,0); //Edit***************************Sasha2,10:22 01.12.2014
    RecordField(MainDisp,M4UStr,10,DIVc); //Edit***************************Sasha2,15:37 04.11.2015
    RecordField(RebGroup,M4UStr,20,ITVc); //Edit***************************Sasha2,15:37 04.11.2015
		RecordField(ItemCat,M4Code,100,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:26 17.07.2018
		RecordField(SubItemCat,M4Code,100,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:26 17.07.2018
		RecordField(TypeSeasNeeds,M4Code,100,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:26 17.07.2018
		RecordField(LeadTime,M4Long,0,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:26 17.07.2018
		RecordField(LifeCicle,M4Code,100,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:26 17.07.2018
		RecordField(SeasonalReorderMonth,M4Long,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 12:55 18.07.2018
		RecordField(Category,M4Code,100,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:03 30.07.2018
		RecordField(CategoryName,M4Str,100,0) //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:03 30.07.2018
		RecordField(CompletCode,M4Code,100,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:03 30.07.2018
		RecordField(SN,M4Code,100,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:03 30.07.2018
		RecordField(SNOne,M4Code,100,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:03 30.07.2018
		RecordField(OldDispGroups,M4UStr,255,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 14:57 10.09.2018
		
		RecordField(BPIBrand,M4Code,20,0);
		RecordField(BPICollection,M4Code,20,0);
		RecordField(BPIGroup,M4Code,20,0);
		RecordField(BPISubGroup,M4Code,20,0);
		RecordField(BPICategory,M4Code,20,0);
		RecordField(BPIMaterial,M4Code,20,0);
		RecordField(BPIColor,M4Code,20,0);
		RecordField(BPIShape,M4Code,20,0);
		RecordField(BPISize,M4Code,20,0);
		RecordField(BPIUse,M4Code,20,0);
		RecordField(BPISex,M4Code,20,0);
		RecordField(BPIPlating,M4Code,20,0);
		RecordField(BPIClarity,M4Code,20,0);
		RecordField(BPIWeight,M4Code,20,0);
		RecordField(BPICut,M4Code,20,0);
		RecordField(BPIStone,M4Code,20,0);
		RecordField(BPIStrap,M4Code,20,0);
		RecordField(BPIOdour,M4Code,20,0);
		RecordField(GlobalArtCode,M4Code,50,0);
		RecordField(MainCode,M4Code,50,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 23 November 2018 10:45:25
		RecordField(OutOfOrder,M4Int,0,0);//Edit_________________ABR 27.11.18 16:00
		RecordField(IDOldINNr,M4Code,255,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 12:33 11.12.2018
		RecordField(ABCSubClass,M4Str,255,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 12:06 20.03.2019
		RecordField(BTRxGiftClass,M4Code,255,0);
		RecordField(BTRxInterCatClass,M4Code,255,0);
		RecordField(BTRxFirstLevCat,M4Code,255,0);
		RecordField(BTRxSecondLevCat,M4Code,255,0);
		RecordField(BTRxThirdLevCat,M4Code,255,0);
		RecordField(BTRxLimitedGood,M4Int,0,0);
		RecordField(BTRxWatchMechanism,M4Code,255,0);
		RecordField(BTRxPowerReserve,M4Code,255,0);
		RecordField(BTRxStrapColour,M4Code,255,0);
		RecordField(BTRxPlacerScatt,M4Val,0,0);
		RecordField(BTRxPhoneModel,M4Code,255,0);
		RecordField(BTRxChainsMaterial,M4Code,255,0);
		RecordField(BTRxFilling,M4Code,255,0);
		RecordField(BTRxProdColour,M4Code,255,0);
		RecordField(BTRxWatterResf,M4Int,0,0);
		RecordField(BTRxDiam,M4Val,0,0);
		RecordField(BTRxWatchGradeA,M4Code,255,0);
		RecordField(BTRxWatchGradeB,M4Code,255,0);
		RecordField(BTRxWatchGradeC,M4Code,255,0);
		RecordField(BTRxStoneA,M4Code,255,0);
		RecordField(BTRxStoneB,M4Code,255,0);
		RecordField(BTRxStoneC,M4Code,255,0);
		RecordField(BTRxStoneScattA,M4Val,0,0);
		RecordField(BTRxStoneScattB,M4Val,0,0);
		RecordField(BTRxStoneScattC,M4Val,0,0);
		RecordField(BTRxChainMaterial,M4Code,255,0);
		RecordField(BTRxType,M4Code,255,0);
		RecordField(BTRxSetQty,M4Int,0,0);//Edit***************************AB,17:14 18.09.2020 количество в наборе
		RecordField(BTRxWatterRes,M4Code,255,0);
		RecordField(OrigCode,M4Str,255,0);
		ChangeField(InvCode,M4UStr,10,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 04, 28 11 2019 y. at 10:07:45 AM
		ChangeField(Department,M4UStr,10,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 04, 28 11 2019 y. at 10:07:48 AM
		RecordField(ConsolidateItemCode,M4Code,255,0);//Edit_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-Irkan 15:55 09.12.2019
		RecordField(ExtProwItRegulations,M4Long,0,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 12:01 22.06.2020
		RecordField(BTRxFourthLevCat,M4Code,255,0);
    RecordField(Year,M4UVal,0,0); //Edit***************************Irkan,17:34 01.07.2020
		RecordField(Life,M4UVal,0,0); //Edit***************************Sasha2,17:34 01.07.2020
		RecordField(High,M4Str,200,0); //Edit***************************Irkan,17:34 01.07.2020
		RecordField(Life2,M4Str,200,0); //Edit***************************Sasha2,17:34 01.07.2020
		RecordField(BtrxAllMaterials,M4Str,255,0);//Edit***************************AB,17:14 18.09.2020 Все материалы
		RecordField(BTRxSize,M4Code,20,0);//Edit***************************AB,17:14 18.09.2020 Размер
		RecordField(BTRxStrapMat,M4Code,100,0);//Edit***************************AB,17:14 18.09.2020 материал ремешка
		RecordField(BtrxClockFaceColour,M4Str,255,0);//Edit***************************AB,17:14 18.09.2020 цвет циферблата
		RecordField(BtrxClockFaceMaterial,M4Str,255,0);//Edit***************************AB,17:14 18.09.2020 Материал циферблата
		RecordField(BtrxCaseDiam,M4Str,255,0); //Edit***************************AB,17:14 18.09.2020 Диаметр корпуса
		RecordField(BtrxCentralGim,M4Str,255,0); //Edit***************************AB,17:14 18.09.2020 Диаметр корпуса
		RecordField(BtrxMicrowaveProtect,M4Str,255,0); //Edit***************************AB,17:14 18.09.2020 Защита от волн
		RecordField(BtrxStoveCompat,M4UStr,255,0);//Edit***************************AB,17:14 18.09.2020 Отвечает плите
		RecordField(BtrxWarranty,M4Str,255,0);//Edit***************************AB,17:14 18.09.2020 гарантия
		RecordField(BtrxScratchRes,M4Str,255,0);//Edit***************************AB,17:14 18.09.2020 Устойчивость к царапинам
		RecordField(BtrxAddProdDescription,M4Str,255,0);//Edit***************************AB,17:14 18.09.2020 Дополнительная инф-я
		RecordField(BtrxCare,M4Str,255,0);//Edit***************************AB,17:14 18.09.2020 уход
		RecordField(BtrxProductFeaches,M4Str,255,0);//Edit***************************AB,17:14 18.09.2020 Фичи продукта
		RecordField(BtrxLength,M4Code,200,0);//Edit***************************AB,17:14 18.09.2020 
		RecordField(BtrxWidth,M4Code,200,0);//Edit***************************AB,17:14 18.09.2020 
		RecordField(BtrxDiameter,M4Code,200,0);//Edit***************************AB,17:14 18.09.2020	
		RecordField(BtrxHeight,M4Code,200,0);	//Edit***************************AB,17:14 18.09.2020	
		RecordField(BtrxVol,M4Code,200,0);//Edit***************************AB,17:14 18.09.2020	
		RecordField(BtrxWeight,M4Code,200,0);//Edit***************************AB,17:14 18.09.2020	
		RecordField(BtrxItemSize,M4Code,200,0);//Edit***************************AB,17:14 18.09.2020
		RecordField(BtrxUnitOfMeas,M4Code,200,0);//Edit***************************AB,17:14 18.09.2020
		RecordField(BtrxMatchesKitchenStove,M4Code,200,0);//Edit***************************AB,17:14 18.09.2020
		RecordField(BtrxComplications,M4Code,200,0);//Edit***************************AB,17:14 18.09.2020
		RecordField(BtrxClarity,M4Str,20,0);//Edit***************************AB,17:14 18.09.2020
		RecordField(BtrxProductName,M4Str,20,0);//Edit***************************AB,17:14 18.09.2020
		RecordField(BtrxCountInSet,M4Code,200,0);//Edit***************************AB,17:14 18.09.2020
		RecordField(BtrxColor,M4Code,255,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 18:49 05.10.2020
		RecordField(BtrxMaterial,M4Code,255,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 18:49 05.10.2020
		RecordField(BtrxSex,M4Code,255,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 18:49 05.10.2020
		RecordField(BtrxOdour,M4Code,255,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 18:49 05.10.2020
		RecordField(BtrxPlating,M4Code,255,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 18:50 05.10.2020
		RecordField(BTRxStone,M4Code,255,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 18:58 05.10.2020
		RecordField(CCCollectName,M4Str,255,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:49 19.11.2020
		RecordField(CCModelName,M4Str,255,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:49 19.11.2020
		RecordField(BTRxCentralCarat,M4Str,255,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 18:58 05.10.2020
		ArrayField(Description,M4Str,255,0); //Edit***************************Sasha2,17:34 01.12.2014 
    ArrayField(Technical,M4Str,255,0); //Edit***************************Sasha2,15:17 21.01.2015
	
    // Edit Start ---------------------------------------------- Edit Start
  	//Monday, 23 September 2013 16:22:43
    SubsetKeyBegin2(DIAlternativeCode);
    StoreInBaseKey;
    AppendListFieldToKeyName(DispGroups);
    KeySegment(AlternativeCode);
    KeySegment(Code);
  	// Edit End ---------------------------------------------- Edit End
  	KeyBegin(MyDispGroups);
    KeySegment(DispGroups);
    KeySegment(Code);
  	KeyBegin(SyncFlag); //Edit***************************Sasha2,12:10 01.12.2014 {
    KeySegment(SyncFlag);
    KeySegment(Code); //Edit***************************Sasha2,12:10 01.12.2014 }
  EndRecordAdd;
  
	RecordAddBegin(OrderClassVc,"OrderClassVc_Custom");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:02 11.12.2018
		RecordField(IDLastORNr,M4Long,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:02 11.12.2018
	EndRecordAdd;
	
  RecordAddBegin(POVc,"POVc_Custom");
    RecordField(OKDate,M4Date,0,0);// Edit ************************** Wednesday, 13 November 2013 15:49:09
  	RecordField(OrderDoneFlag,M4Int,0,0);// Edit ************************** Wednesday, 13 November 2013 17:15:36
  	RecordField(OrderDoneDate,M4Date,0,0);// Edit ************************** Wednesday, 13 November 2013 17:15:48
  	RecordField(CheckCurncyCode,M4Code,5,CurncyCodeVc);
  	RecordField(OfficialSerNr,M4Str,40,0);//Edit----------------------Dima  31.03.2015
 		RecordField(AllowOtherVEItem,M4Int,0,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 11 December 2017 15:06:14
    RecordField(IDRefPRNum,M4Str,60,0);
    RecordField(IDPrjNum,M4Str,60,0);
    RecordField(IDProfInvNum,M4Str,60,0);
    RecordField(IDManufacturer,M4Code,100,DIVc);
    RecordField(IDMfrFinDate,M4Date,0,0);
    RecordField(IDMfrFinConfirmDate,M4Date,0,0);
    RecordField(IDMfrFinConfirmFlag,M4Int,0,0);
    RecordField(IDStatus,M4Str,60,0);
    RecordField(IDReguester,M4Str,60,0);
    RecordField(IDFreight,M4Str,60,0);
    RecordField(IDShipper,M4Str,60,0);
    RecordField(IDIncoterms,M4Str,60,0);
    RecordField(IDCustCode,M4Code,20,CUVc);
    RecordField(IDStatusDetail,M4Str,255,0);
    RecordField(IDVolume,M4Val,0,0);
    RecordField(IDWeight,M4Val,0,0);

    RecordField(IDPurchaseCost,M4Val,0,0);
    RecordField(IDPrepay,M4Val,0,0);
    RecordField(IDPrepayProc,M4Val,0,0);
    RecordField(IDPrepayPaid,M4Int,0,0);
    RecordField(IDPrepayDate,M4Date,0,0);
    RecordField(IDBalPay,M4Val,0,0);
    RecordField(IDBalPayProc,M4Val,0,0);
    RecordField(IDCreditAccFlag,M4Int,0,0);
    RecordField(IDBankName,M4Str,100,0);
		RecordField(IDPayDealText,M4Str,100,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:58 27.07.2018
		RecordField(IDSum4,M4Val,0,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Wednesday, 29 August 2018 09:50:17
		RecordField(ShipCostOKFlag,M4Int,0,0);// Edit_____________________________________________ABR 16.05.19
		RecordField(CustomsCostOKFlag,M4Int,0,0);// Edit_____________________________________________ABR 16.05.19
		RecordField(ConsManualCost,M4Int,0,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 01, 22 07 2019 y. at 9:57:57 AM
		RecordField(ExtraCostInPU,M4Int,0,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 01, 22 07 2019 y. at 9:57:57 AM
    RecordField(DaysForBallancePayment,M4Int,0,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 12:21 24.09.2019
		RecordField(TotWeight,M45Val,0,0); 
		RecordField(TotVolume,M45Val,0,0); 
		RecordField(UpdStatDate,M4Date,0,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:23 27.09.2019
		RecordField(IDOldMfrFinConfirmDate,M4Date,0,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:03 01.11.2019
		RecordField(PartDelSum4,M4Val,0,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 17:07 13.02.2020
		RecordField(ItemFromOtherSTockObj,M4Code,100,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:37 09.09.2020
		
  	ArrayField(PPNum,M4Int,0,0);// Edit ************************** Friday, 31 August 2012 15:06:24
    ArrayField(xClassification,M4UStr,200,0);// Edit ************************** Friday, 31 August 2012 15:14:02
    ArrayField(EAN13Code,M4UStr,200,0);// Edit ************************** Friday, 31 August 2012 15:14:02
    ArrayField(RowWeight,M4Str,20,0);// Edit ************************** Thursday, 11 April 2013 11:40:05
    ArrayField(Size,M4Str,20,0);// Edit ************************** Thursday, 11 April 2013 11:40:05
    ArrayField(Metal,M4Str,20,0);// Edit ************************** Thursday, 11 April 2013 11:40:06
    ArrayField(Colour,M4Str,20,0);// Edit ************************** Thursday, 11 April 2013 11:40:06
    ArrayField(MajStoneDet,M4Str,20,0);// Edit ************************** Thursday, 11 April 2013 11:42:47
    ArrayField(BrcStr,M4Str,20,0);// Edit ************************** Thursday, 11 April 2013 11:42:47
    ArrayField(Gender,M4Str,20,0);// Edit ************************** Thursday, 11 April 2013 11:42:47
    ArrayField(Reference,M4Str,60,0);// Edit ************************** Thursday, 11 April 2013 11:42:47
    ArrayField(ConsgType,M4Set,900,0); //Edit***************************Sasha2,11:31 16.12.2014
    ArrayField(IDAltCode,M4Str,40,0);
    ArrayField(IDPrmsdDt,M4Date,0,0);
    ArrayField(IDProductCode,M4Str,40,0);
		ArrayField(ItemConsgType,M4Set,901,0); //Edit_______________________________ABR,11:00 25.06.19
		ArrayField(WeightRow,M45Val,0,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:53 08.07.2019
		ArrayField(CaratRow,M45Val,0,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:53 08.07.2019
		ArrayField(CaratTipeSet,M4Set,902,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:50 11.07.2019
		ArrayField(CaratplacerRow,M45Val,0,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:20 12.07.2019
		ChangeMatrixField(vRebate,M423Val,0,0);  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:57 26.12.2019
		ArrayField(BrndCurrCode,M4Code,25,0);  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:01 06.01.2020
		
    KeyBegin(InvAddr4);// Edit ************************** Wednesday, 13 November 2013 14:34:40
    KeySegment(InvAddr4);// Edit ************************** Wednesday, 13 November 2013 14:34:39
    KeySegment(SerNr);// Edit ************************** Wednesday, 13 November 2013 14:34:38
    
    SubsetKeyBegin2(Comment);// Edit ************************** BPI Ukraine - KramarAlexandr - 07, 06 10 2019 y. at 10:30:24 PM
		StoreInBaseKey;
		AppendFieldToKeyName(SalesMan);
		AppendFieldToKeyName(SalesGroup);
		KeySegment(Comment);
		KeySegment(SerNr);
  EndRecordAdd;

  RecordAddBegin(IVVc,"IVVc3Cst");
    RecordField(NotForReport,M4Mark,0,0);	//Edit----------------------Dima  01.04.2015
    RecordField(ReceiptNrForReturn,M4Str,30,0);
    RecordField(UsedBirthRebateH,M4Int,0,0);// Edit ************************** Thursday, 18 May 2017 12:29:54
    RecordField(LinkLoyaltyCardNr,M4Code,20,0);
		RecordField(ReceivedBy,M4Code,50,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 14:00 25.09.2018
		RecordField(CheckedBy,M4Code,50,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:56 25.09.2018
		RecordField(ConfirmedBy,M4Code,50,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 14:00 25.09.2018
		RecordField(ReturnedBy,M4Code,50,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 14:00 25.09.2018
		RecordField(ApprovedBy,M4Code,50,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:56 25.09.2018
		RecordField(CRMid,M4Str,150,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Thursday, 18 October 2018 17:55:31
		RecordField(TaxFree,M4Int,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:41 11.06.2019
		RecordField(RetChekf,M4Int,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:41 11.06.2019
		ChangeMatrixField(vRebate,M423Val,0,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 06, 30 03 2019 y. at 8:38:30 PM
		RecordField(RebateVaucher,M4Code,100,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Wednesday, 8 May 2019 10:52:26
		RecordField(CRMCustomer,M4Str,200,0);
		RecordField(CRMCustomerName,M4Str,200,0);
		RecordField(VaucherCode,M4Code,50,0);// Edit_____________________________________________ABR 02.10.19
    RecordField(ECOMMERCEOrdf,M4Int,0,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:41 13.04.2020
		RecordField(TaxTransactionCode,M4Str,100,0);// Edit_____________________________________________Irkan Ahmadov 14.19.20
		RecordField(TaxTransactionDate,M4Date,0,0);// Edit_____________________________________________Irkan Ahmadov 14.19.20
		RecordField(TaxParentDocument,M4Str,200,0);// Edit_____________________________________________Irkan Ahmadov 17.19.20
		RecordField(TaxReturnCode,M4Str,100,0);// Edit_____________________________________________Irkan Ahmadov 21.19.20
		RecordField(TaxReturnDate,M4Date,0,0);// Edit_____________________________________________Irkan Ahmadov 21.19.20
		RecordField(TaxCancelCode,M4Str,100,0);// Edit_____________________________________________Irkan Ahmadov 21.19.20
		RecordField(TaxCancelDate,M4Date,0,0);// Edit_____________________________________________Irkan Ahmadov 21.19.20
		
		ArrayField(FIFOCur,M45Val,0,0); //Edit***************************Sasha2,17:22 19.05.2016
    ArrayField(FIFORowValCur,M45Val,0,0); //Edit***************************Sasha2,17:21 19.05.2016
    ArrayField(CurncyCodeCur,M4Code,5,CurncyCodeVc); //Edit***************************Sasha2,17:22 19.05.2016
    ArrayField(IVForRetNr,M4Long,0,0); //Edit***************************Sasha2,11:44 23.05.2016
    ArrayField(RetFromComp,M4Code,5,0); //Edit***************************Sasha2,11:44 23.05.2016
    ArrayField(UsedBirthRebate,M4Int,0,0);// Edit ************************** Tuesday, 16 May 2017 14:39:32
		ArrayField(ProdLoyltPoints,M4Int,0,0);
	
  EndRecordAdd;
  
	RecordBegin(IVTaxTrVc,-,"");  // Edit ************************** BPI Ukraine - KramarAlexandr - 06, 24 10 2020 y. at 6:33:48 PM
		RecordField(SerNr,M4Long,0,0);
		RecordField(TaxTransactionCode,M4Str,100,0);
		RecordField(document_number,M4Str,100,0);
		RecordField(long_id,M4Str,100,0);
		RecordField(short_id,M4Str,100,0);
		RecordField(shift_document_nubber,M4Str,100,0);
		MainKeyBegin(SerNr,0);
		KeySegment(SerNr);
		KeyBegin(TaxTransactionCode);
		KeySegment(TaxTransactionCode);
		KeySegment(SerNr);
  EndRecord;
	
	
	RecordAddBegin(SDVc,"SDVcCst");
		RecordField(Reservf,M4Int,0,0);
	EndRecordAdd;
	
  
  /*RecordBegin(TAXVc,"TAXVc");  //TAXVc ----------------- Irkan Ahmadov 04.08.2020
  RecordField(Code,M4Code,100,0);
  RecordField(TransactionDate,M4Date,0,0);
  RecordField(TaxCode,M4Str,100,0);
  RecordField(TaxMessage,M4Str,1000,0);
  RecordField(ParentDocument,M4Str,200,0);
  RecordField(TransactionId,M4Str,200,0);
  ArrayField(ArtCode,M4Code,50,0);
  ArrayField(Quant,M4Int,0,0);
  ArrayField(Price,M4Val,0,0);
  
  MainKeyBegin(Code,0);
  KeySegment(Code);
  SynchronizationIndex;
  KeySegment(Code);
  EndRecord;*/
	
	
	
	
	
	RecordAddBegin(VIVc,"VIVc_Custom");
    RecordField(PartPUSerNr,M4Long,0,0);	 // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:32 09.08.2019
		RecordField(BigPUNr,M4Long,0,0);	 // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- ABR 14:32 03.09.2019
		RecordField(ExtraCostObj,M4Str,255,0);	 // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- ABR 14:32 03.09.2019
		RecordField(BrandShipCostf,M4Int,0,0);  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:11 23.12.2019
		RecordField(BrandShipCostIVUsedf,M4Int,0,0);  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:11 23.12.2019
  EndRecordAdd;
	
	
	
	

  RecordAddBegin(LocationVc,"LocationVc_Custom");
    RecordField(SalesAcc,M4Code,10,AccVc);// Edit ************************** Monday, 15 September 2014 10:08:11
    RecordField(ARAcc,M4Code,10,AccVc);// Edit ************************** Monday, 15 September 2014 10:08:11
		RecordField(CoinStoreNr,M4Str,255,0);
		RecordField(CRMid,M4Str,255,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:10 12.09.2018
		RecordField(FOBSuplier,M4Code,255,0); //Edit_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-ABR 15:40 24.04.2019	
		RecordField(ConsigStockCode,M4Code,255,0);  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:48 31.08.2020
		RecordField(DefectStockCode,M4Code,255,0);  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 20:51 31.08.2020
    
		KeyBegin(Objects);  // was added
    KeySegment(Objects);
    KeySegment(Code);
  EndRecordAdd;

  RecordAddBegin(LoyPointsRedeemVc,"LPRedeemVc_Custom");
    RecordField(PayBefReb,M4Int,0,0);// Edit ************************** Tuesday, 26 February 2013 10:04:49
  EndRecordAdd;

  RecordAddBegin(LocLoyPointsRedeemVc,"LocLPRedeemVc_Custom");
    RecordField(PayBefReb,M4Int,0,0);// Edit ************************** Tuesday, 26 February 2013 10:04:49
  EndRecordAdd;

  RecordAddBegin(PLVc,"PLVc_Custom");
    RecordField(SerialNr,M4Str,30,0);// Edit ************************** Friday, 22 March 2013 09:49:32
    RecordField(CurncyCode,M4Code,5,CurncyCodeVc);// Edit ************************** Wednesday, 3 April 2013 15:34:34

    DisableIndex("PLCode");
    DisableIndex("ArtCode");
    DisableIndex("Price");
    DisableIndex("Comment");
    MainKeyBegin(PLCode,0);
    KeySegment(PLCode);
    KeySegment(ArtCode);
    KeySegment(CustCode);
    KeySegment(SerialNr);// Edit ************************** Friday, 22 March 2013 09:54:17
    KeyBegin(ArtCode);
    KeySegment(ArtCode);
    KeySegment(PLCode);
    KeySegment(CustCode);
    KeySegment(SerialNr);// Edit ************************** Friday, 22 March 2013 09:54:17
    KeyBegin(Price);
    KeySegment(ExVatPrice);
    KeySegment(PLCode);
    KeySegment(ArtCode);
    KeySegment(CustCode);
    KeySegment(SerialNr);// Edit ************************** Friday, 22 March 2013 09:54:17
    KeyBegin(Comment);
    KeySegment(Comment);
    KeySegment(PLCode);
    KeySegment(ArtCode);
    KeySegment(CustCode);
    KeySegment(SerialNr);// Edit ************************** Friday, 22 March 2013 09:54:17
    KeyBegin(SerialNr);// Edit ************************** Saturday, 23 March 2013 19:06:08
    KeySegment(SerialNr);
    KeySegment(PLCode);
    KeySegment(ArtCode);
    KeySegment(CustCode);
  EndRecordAdd;

  RecordAddBegin(LocalPLVc,"LocalPLVc_Custom");
    RecordField(SerialNr,M4Str,30,0);// Edit ************************** Friday, 22 March 2013 09:49:32
    RecordField(CurncyCode,M4Code,5,CurncyCodeVc);// Edit ************************** Wednesday, 3 April 2013 15:34:34

    DisableIndex("PLCode");
    DisableIndex("ArtCode");
    DisableIndex("Price");
    DisableIndex("Comment");
    MainKeyBegin(PLCode,0);
    KeySegment(PLCode);
    KeySegment(ArtCode);
    KeySegment(CustCode);
    KeySegment(SerialNr);// Edit ************************** Friday, 22 March 2013 09:54:17
    KeyBegin(ArtCode);
    KeySegment(ArtCode);
    KeySegment(PLCode);
    KeySegment(CustCode);
    KeySegment(SerialNr);// Edit ************************** Friday, 22 March 2013 09:54:17
    KeyBegin(Price);
    KeySegment(ExVatPrice);
    KeySegment(PLCode);
    KeySegment(ArtCode);
    KeySegment(CustCode);
    KeySegment(SerialNr);// Edit ************************** Friday, 22 March 2013 09:54:17
    KeyBegin(Comment);
    KeySegment(Comment);
    KeySegment(PLCode);
    KeySegment(ArtCode);
    KeySegment(CustCode);
    KeySegment(SerialNr);// Edit ************************** Friday, 22 March 2013 09:54:17
    KeyBegin(SerialNr);// Edit ************************** Saturday, 23 March 2013 19:06:08
    KeySegment(SerialNr);
    KeySegment(PLCode);
    KeySegment(ArtCode);
    KeySegment(CustCode);
  EndRecordAdd;

  RecordAddBegin(UserVc,"UserVc_Custom");
    RecordField(UserLocations,M4Str,200,0);// Edit ************************** Tuesday, 30 April 2013 10:04:03
    RecordField(Brand,M4Str,200,0);//Edit----------------------Dima  24.02.2016
    RecordField(IsSalesMan,M4Mark,0,0);// Edit ************************** Thursday, 6 July 2017 18:05:27
		RecordField(DemandPlannComp,M4Str,255,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 17:24 14.08.2018
		RecordField(CRMid,M4Str,255,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 20 August 2018 14:55:32
 		RecordField(OpenClosePerDate,M4Date,0,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Thursday, 30 May 2019 15:35:45
 		RecordField(KassaIPAddr,M4Str,255,0);// Edit ************************** Irkan Ahmadov - 14 May 2020 15:35:45
  EndRecordAdd;

  RecordAddBegin(CUVc,"CUVc_Custom");
    RecordField(CreateSalesMan,M4Code,10,UserVc);// Edit ************************** Friday, 27 September 2013 09:32:41
    RecordField(CreateLocation,M4Code,10,0);// Edit ************************** Friday, 27 September 2013 09:32:41
    RecordField(CreateMachineCode,M4Code,20,0);// Edit ************************** Friday, 27 September 2013 09:32:41
    RecordField(CreateComment,M4Str,200,0);// Edit ************************** Friday, 27 September 2013 09:32:41
    RecordField(CreateCompany,M4Int,0,0);// Edit ************************** Friday, 27 September 2013 09:32:41
    RecordField(PlanShipDays,M4Int,0,0);// Edit ************************** Monday, 7 October 2013 13:40:09
    RecordField(AllowSendSMS,M4Int,0,0);// Edit ************************** Thursday, 24 October 2013 15:19:33
    RecordField(AllowSendeMail,M4Int,0,0);// Edit ************************** Thursday, 24 October 2013 15:19:33
    RecordField(AllowSendCall,M4Int,0,0);// Edit ************************** Thursday, 24 October 2013 15:19:33
    RecordField(AllowSendkMail,M4Int,0,0);// Edit ************************** Thursday, 24 October 2013 15:19:33
    RecordField(SuprDate,M4Date,0,0);// Edit ************************** Wednesday, 16 December 2015 11:36:34
    RecordField(WedDate,M4Date,0,0);// Edit ************************** Wednesday, 16 December 2015 11:36:35
    RecordField(ItaldizainSite,M4Int,0,0);		//Edit----------------------Dima  01.04.2016
    RecordField(OtherInformation,M4Int,0,0);
    RecordField(Instagram,M4Int,0,0);
    RecordField(Facebook,M4Int,0,0);
    RecordField(Advertising,M4Int,0,0);
    RecordField(Radio,M4Int,0,0);
    RecordField(OtherInformationSource,M4Str,200,0);//Edit----------------------Dima  01.04.2016
    RecordField(AllowWhatsApp,M4Int,0,0);			//Edit----------------------Dima  01.04.2016
    RecordField(PhoneDublFlag,M4Int,0,0);//Edit-------------------Vitalii 15:42 04.05.2017
    RecordField(EmailDublFlag,M4Int,0,0);//Edit-------------------Vitalii 15:42 04.05.2017
    RecordField(BirthRebateInComp,M4Int,0,0);// Edit ************************** Tuesday, 16 May 2017 14:41:06
    RecordField(BirthRebateLastDate,M4Date,0,0);// Edit ************************** Tuesday, 16 May 2017 14:41:08
    RecordField(BirthRebateTransNr,M4Long,0,0);// Edit ************************** Tuesday, 16 May 2017 14:41:07
		RecordField(PlanShipDaysMin,M4Int,0,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 16 February 2018 13:37:31
		RecordField(CurEmplCreator,M4Code,10,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:37 15.05.2018
		RecordField(InstagramAcc,M4Str,255,0);//EDIT_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-Anton 17:01 04.07.2018
		RecordField(AirDeliveryDays,M4Val,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:21 19.07.2018
		RecordField(RoadDeliveryDays,M4Val,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:21 19.07.2018
		RecordField(CalculatedLeadTime,M4Val,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 12:53 06.08.2018
		RecordField(DeliveryWay,M4Int,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 12:53 06.08.2018
		RecordField(DeliveryFrom,M4Int,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 12:53 06.08.2018
		RecordField(DemPlanner,M4Str,200,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:20 07.08.2018
		RecordField(CRMid,M4Str,255,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:10 12.09.2018
		RecordField(CRMName,M4Str,255,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 14:13 20.09.2018
		RecordField(CRMLName,M4Str,255,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 14:13 20.09.2018
		RecordField(CRMPatr,M4Str,255,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 14:13 20.09.2018
		RecordField(ELevel,M4Val,0,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 21 September 2018 17:15:07
		RecordField(IDOldCUCode,M4Str,255,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 12:18 11.12.2018
		
    // Edit Start ---------------------------------------------- Edit Start
  	//Thursday, 26 September 2013 10:44:43
    /*KeyBegin(DateCreated); already exists in 8.4
    KeySegment(DateCreated);
    KeySegment(Code);*/
  	// Edit End ---------------------------------------------- Edit End
  EndRecordAdd;

  RecordAddBegin(StockMovVc,"StockMovVc_Custom");
    RecordField(NotForReport,M4Mark,0,0);	//Edit----------------------Dima  01.04.2015
    RecordField(SentCoin,M4Int,0,0);//Edit-------------------Vitalii 12:11 26.07.2016
    RecordField(TypeCoin,M4Int,0,0);
    RecordField(SentDateCoin,M4Date,0,0);
    RecordField(FileNameCoin,M4Str,255,0);
    RecordField(TransBillCoin,M4Str,10,0);//Edit-------------------Vitalii 12:13 26.07.2016
		RecordField(GBRNr,M4Long,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:16 16.08.2018
		RecordField(PRNr,M4Long,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:16 16.08.2018
		RecordField(RefPRNr,M4Long,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:16 16.08.2018
    RecordField(User01,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:16
    RecordField(User02,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:17
    RecordField(User03,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:17
    RecordField(User04,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:18
    RecordField(User05,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:19
		RecordField(GBRCode,M4Code,100,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 12:02 20.08.2018
		RecordField(PRCode,M4Code,100,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 12:02 20.08.2018
		RecordField(RefPRCode,M4Long,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 12:02 20.08.2018
		RecordField(IssuedBy,M4Str,255,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:13 23.08.2018
		RecordField(ReceivedBy,M4Str,255,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:13 23.08.2018
		RecordField(CompletedBy,M4Str,255,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:13 23.08.2018
		RecordField(ConfirmedBy,M4Str,255,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:13 23.08.2018
		RecordField(TRNumber,M4Code,50,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:14 23.08.2018
		RecordField(RfPRCode,M4Code,50,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:13 25.09.2018
    ArrayField(BarCode,M4Code,20,0);//Edit-------------------Vitalii 14:47 28.07.2016
    KeyBegin(TruckInfo);// Edit ************************** Tuesday, 1 October 2013 11:12:30
    KeySegment(TruckInfo);// Edit ************************** Tuesday, 1 October 2013 11:12:32
    KeySegment(SerNr);// Edit ************************** Tuesday, 1 October 2013 11:12:32
  EndRecordAdd;

  RecordAddBegin(DIVc,"DIVc_Custom");
    RecordField(CCat,M4Code,50,0);// Edit ************************** Tuesday, July 15, 2014 at 11:51:30
    RecordField(Name_RU,M4Str,200,0); //Edit***************************Sasha2,16:16 28.11.2014
    RecordField(Name_AZ,M4Str,200,0); //Edit***************************Sasha2,16:16 28.11.2014
    RecordField(SyncFlag,M4Long,0,0); //Edit***************************Sasha2,16:33 28.11.2014
    RecordField(TempFlag,M4Long,0,0); //Edit***************************Sasha2,16:33 28.11.2014
    RecordField(SavedCount,M4Long,0,0); //Edit***************************Sasha2,10:22 01.12.2014
		RecordField(CRMid,M4Str,255,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:10 12.09.2018
		ChangeField(Name,M4Str,200,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 06, 30 03 2019 y. at 8:43:18 PM
    KeyBegin(SyncFlag); //Edit***************************Sasha2,12:10 01.12.2014 {
    KeySegment(SyncFlag);
    KeySegment(Code); //Edit***************************Sasha2,12:10 01.12.2014 }

    SubsetKeyBegin2(CTCode);
		StoreInBaseKey;
		AppendListFieldToKeyName(CType);
		KeySegment(Code);
		SubsetKeyBegin2(CTName);
		StoreInBaseKey;
		AppendListFieldToKeyName(CType);
		KeySegment(Name);
		KeySegment(Code);
  EndRecordAdd;

  RecordAddBegin(ORVc,"ORVc_Custom");
	RecordField(OKDate,M4Date,0,0);// Edit ************************** Wednesday, 13 November 2013 15:34:25
	RecordField(UsedBirthRebateH,M4Int,0,0);// Edit ************************** Thursday, 18 May 2017 12:29:54
	RecordField(MfrTimeAdj,M4Int,0,0); // Edit Dima ************* 2018-02-15 02:30 AM

	RecordField(ReqEnquiryTime,M4Int,0,0); // Edit Dima ************* 2018-02-15 10:21 AM
	RecordField(PrepaymentTime,M4Int,0,0); // Edit Dima ************* 2018-02-15 10:21 AM
	RecordField(ShipTimeReadlinesTime,M4Int,0,0); // Edit Dima ************* 2018-02-15 10:21 AM
	RecordField(MfrTime,M4Int,0,0); // Edit Dima ************* 2018-02-15 01:52 PM

	RecordField(PoUrgent1,M4Int,0,0); // Edit Dima ************* 2018-02-16 10:52 AM
	RecordField(PoUrgent2,M4Int,0,0); // Edit Dima ************* 2018-02-16 10:52 AM
	
	RecordField(IDStatus,M4Str,255,0);// Edit ************************** BPI Ukraine - KramarAlexandr - вґвторок, 27 лютого 2018 р. о 11:40:33
	RecordField(IDStatusDetail,M4Str,255,0);// Edit ************************** BPI Ukraine - KramarAlexandr - вґвторок, 27 лютого 2018 р. о 11:40:33
	RecordField(IDSumWOReb,M4Val,0,0);
	RecordField(IDPRCostDesc,M4Str,255,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Wednesday, 28 February 2018 10:50:05
	RecordField(IDPrepDesc,M4Str,255,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Wednesday, 28 February 2018 10:50:27
	RecordField(IDBalPayDesc,M4Str,255,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Wednesday, 28 February 2018 10:50:36
	RecordField(IDRemarks2,M4Str,255,0);
	RecordField(IDPrepay,M4Val,0,0);
	RecordField(IDBalPay,M4Val,0,0);
	RecordField(IDDesPay,M4Val,0,0);
	RecordField(IDTotalCost,M4Val,0,0);
  RecordField(IDSum4Proc,M4Val,0,0);//Edit-------------------Vitalii 11:31 15.03.2018 {
  RecordField(IDPrepayProc,M4Val,0,0);
  RecordField(IDBalPayProc,M4Val,0,0);
  RecordField(IDDesPayProc,M4Val,0,0);
  RecordField(IDDiscount,M4Val,0,0);
  RecordField(IDPrepayPaid,M4Int,0,0);
	RecordField(IDBalPayPaid,M4Int,0,0);
  RecordField(IDHold,M4Int,0,0);
  RecordField(IDBarter,M4Int,0,0);
  RecordField(IDReguester,M4Str,255,0);
  RecordField(IDDiscCard,M4Code,20,LoyaltyCardVc);//Edit-------------------Vitalii 18:44 02.04.2018 }
  RecordField(IDManufacturerTotal,M4Val,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 12:08 20.06.2018
  RecordField(IDPayDealText,M4Str,100,0);//Edit-------------------Vitalii 14:26 31.07.2018
  RecordField(IDSum4,M4Val,0,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Wednesday, 29 August 2018 13:40:32
	RecordField(WEBReservOnStock,M4Int,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:38 12.10.2018
	RecordField(OrderConfirmed,M4Int,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:41 23.10.2018
  RecordField(eMail,M4Str,50,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 17:38 13.12.2018
	RecordField(EndReserv,M4Date,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 17:15 10.01.2019
	RecordField(ECORCompl,M4Mark,0,0);
	RecordField(ECORLocCompl,M4Mark,0,0);
	RecordField(ECLocSHOK,M4Mark,0,0);
	RecordField(ECSHOK,M4Mark,0,0);
	RecordField(ECORSuccOK,M4Mark,0,0);
	RecordField(ECORSelfDelf,M4Mark,0,0);
	ChangeMatrixField(vRebate,M423Val,0,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 06, 30 03 2019 y. at 8:38:30 PM
	RecordField(CLPersData01,M4Str,250,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 02, 01 10 2019 y. at 2:02:47 PM
	RecordField(CLPersData02,M4Str,250,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 02, 01 10 2019 y. at 2:02:47 PM
	RecordField(CLPersData03,M4Str,250,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 02, 01 10 2019 y. at 2:02:47 PM
	RecordField(CLPersData04,M4Str,250,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 02, 01 10 2019 y. at 2:02:47 PM
	RecordField(CLPersData05,M4Str,250,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 02, 01 10 2019 y. at 2:02:47 PM
	
	RecordField(OrigIDPRCostDesc,M4Str,250,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 12 November 2019 10:30:57
	RecordField(OrigSum4,M4Val,0,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 12 November 2019 10:30:57
	RecordField(OrigPlanShipDate,M4Date,0,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 12 November 2019 10:30:57
	RecordField(AmendVers,M4Int,0,0);
	RecordField(CLPersData06,M4Str,250,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 05, 17 01 2020 y. at 4:50:13 PM
	RecordField(CLPersData07,M4Str,250,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 05, 17 01 2020 y. at 4:50:13 PM
	RecordField(CLPersData08,M4Str,250,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 05, 17 01 2020 y. at 4:50:13 PM
	RecordField(CLPersData09,M4Str,250,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 05, 17 01 2020 y. at 4:50:13 PM

	RecordField(ECOMMERCEOrdf,M4Mark,0,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 17:20 10.04.2020
	RecordField(ECLoyaltyCard,M4Code,150,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 17:22 10.04.2020
	RecordField(ECCUCode,M4Code,250,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:20 13.08.2020
	RecordField(ECBTRxPaymentDeal,M4Code,250,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:26 15.12.2020
	RecordField(ECOrdConfirmTime,M4Time,0,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:19 28.12.2020

	
	ArrayField(UsedBirthRebate,M4Int,0,0);// Edit ************************** Tuesday, 16 May 2017 14:39:32
	ArrayField(PlanCostCur,M4Code,20,0);// Edit ************************** Wednesday, 30 August 2017 10:54:17
	ArrayField(PlanCostVal,M4Val,0,0);// Edit ************************** Wednesday, 30 August 2017 10:54:18
  ArrayField(PriceWithReb,M4Val,0,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Thursday, 15 February 2018 12:17:36
  ArrayField(IDManufacturer,M4Code,100,DIVc);//Edit-------------------Vitalii 16:16 19.03.2018
  ArrayField(MfrTimeRow,M4Int,0,0);
  ArrayField(MfrTimeAdjRow,M4Int,0,0);
  ArrayField(PoUrgent1Row,M4Int,0,0);
	ArrayField(PoUrgent2Row,M4Int,0,0);
  ArrayField(ReqEnquiryTimeRow,M4Int,0,0);
  ArrayField(PrepaymentTimeRow,M4Int,0,0);
  ArrayField(ShipTimeReadinessRow,M4Int,0,0);
  ArrayField(IDManufacturerName,M4Str,255,0);
  ArrayField(PlanShipDateRow,M4Date,0,0);
  ArrayField(Spec2,M4Str,255,0);
  ArrayField(IDAltCode,M4Str,40,0);
  ArrayField(IDAmount,M4Val,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 12:07 20.06.2018
  ArrayField(IDUrg1Row,M4Str,50,0);//Edit-------------------Vitalii 11:41 07.08.2018
	ArrayField(IDUrg2Row,M4Str,50,0);
	ArrayField(GlobalItemArtCode,M4Code,50,0);
	ArrayField(ECReceived,M4Int,0,0);
	ArrayField(ECReservComp,M4Int,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:38 19.11.2018
	ArrayField(ECReservStock,M4Code,50,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:38 19.11.2018
	ArrayField(AmendVers,M4Int,0,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 5 November 2019 10:49:13
	ArrayField(BrndCurrCode,M4Code,50,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:03 06.01.2020
	ArrayField(LCPOrow,M4Int,0,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:55 23.01.2020
  EndRecordAdd;

  RecordAddBegin(ItemHistVc,"ItemHistVc_Custom");
    RecordField(CurncyCode,M4Str,20,0);// Edit ************************** Monday, 12 May 2014 09:53:21
    RecordField(TotCostPriceCurncy,M45Val,0,0);// Edit ************************** Monday, 12 May 2014 09:54:32
    RecordField(RemCostPriceCurncy,M45Val,0,0);// Edit ************************** Monday, 12 May 2014 09:54:45
    RecordField(InDate,M4Date,0,0);// Edit ************************** Monday, 30 March 2015 10:15:05
    RecordField(InFileName,M4Str,20,0);// Edit ************************** Monday, 30 March 2015 10:15:05
  EndRecordAdd;

  RecordAddBegin(UserDefRepLinesVc,"UserDRLVc_Custom");
    RecordField(CustType,M4Int,0,0)// Edit ************************** Tuesday, 21 October 2014 11:58:03
    RecordField(CurncyCode,M4Code,5,CurncyCodeVc);// Edit ************************** Thursday, 5 March 2015 14:48:11
    RecordField(ObjDetail,M4Int,0,0);// Edit ************************** Friday, 22 January 2016 10:47:06
    RecordField(SalesOfGoodsUse,M4Int,0,0);//Edit-------------------Vitalii 17:30 28.08.2017
    RecordField(SalesOfGoodsUseRetail,M4Int,0,0);//Edit-------------------Vitalii 11:29 15.11.2017
  EndRecordAdd;

  RecordAddBegin(CLCorspVc,"CLCorspVc_Custom");
    RecordField(Objects,M4UStr,60,ObjVc);// Edit ************************** Thursday, 30 October 2014 09:40:11
  EndRecordAdd;

  RecordAddBegin(IntORVc,"IntORVc_Custom");
    RecordField(VECode,M4Str,60,0);// Edit ************************** Tuesday, 16 December 2014 13:51:24
    RecordField(PORdSerNr,M4Long,0,0);// Edit ************************** Tuesday, 16 December 2014 13:51:24
		RecordField(CurncyCode,M4Str,20,0);// Edit ************************** ABR, 14.02.2020 09:40:11
    ArrayField(EAN13Code,M4UStr,200,0);	//Edit by Victor 19.11.14
    ArrayField(xClassification,M4UStr,200,0);	//Edit by Victor 19.11.14
    ArrayField(Colour,M4Str,20,0);	//Edit by Victor 19.11.14
    ArrayField(Size,M4Str,20,0);	//Edit by Victor 19.11.14
    ArrayField(VEQuant,M4UVal,0,0);	//Edit by Victor 19.11.14
    ArrayField(AlternativeCode,M4Str,40,0);	//Edit by Victor 19.11.14
  EndRecordAdd;

  RecordAddBegin(PUVc,"PUVc_Custom");
    RecordField(OfficialSerNr,M4Str,40,0);//Edit----------------------Dima  31.03.2015
    RecordField(NotForReport,M4Mark,0,0);	//Edit----------------------Dima  01.04.2015
		RecordField(ItemClassifCheck,M4Mark,0,0);	//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:18 10.07.2018	
    RecordField(User01,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:16
    RecordField(User02,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:17
    RecordField(User03,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:17
    RecordField(User04,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:18
    RecordField(User05,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:19
		RecordField(InvPackListNr,M4Code,60,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:55 23.08.2018
		RecordField(AWBCMRRBNr,M4Code,60,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:55 23.08.2018
		RecordField(RefPrNr,M4Code,60,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:55 23.08.2018
		RecordField(PRJCode,M4Code,60,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:55 23.08.2018
		RecordField(ClientCode,M4Code,60,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:55 23.08.2018
		RecordField(QtyOfPkgs,M4Int,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:57 23.08.2018
		RecordField(OSDNr,M4Code,60,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 14:38 05.09.2018
		RecordField(ReceivedBy,M4Str,100,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:29 05.09.2018
		RecordField(CheckedBy,M4Str,100,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:29 05.09.2018
		RecordField(ConfirmedBy,M4Str,100,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:29 05.09.2018
		RecordField(ApprovedBy,M4Str,100,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:29 05.09.2018
		RecordField(IDPONr,M4Code,60,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:04 13.09.2018
		RecordField(ShipCostOKFlag,M4Int,0,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:18 23.07.2019
		RecordField(CustomsCostOKFlag,M4Int,0,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:18 23.07.2019
		RecordField(ItemsCostOKFlag,M4Int,0,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 18:26 24.07.2019
		RecordField(SHandCUSTCostOKCondf,M4Int,0,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 17:28 29.01.2020
		
    ArrayField(PrintQuant,M4UVal,0,0); //Edit***************************Sasha2,11:34 19.05.2016
		ArrayField(ECCSTItCode,M4Str,255,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:32 03.12.2018
		ArrayField(ECCSTItBarCode,M4Str,255,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:32 03.12.2018
		ArrayField(OrdPrice,M4Val,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:04 29.08.2018
  EndRecordAdd;
  
  RecordAddBegin(SHVc,"SHVc_Custom");
    RecordField(User01,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:16
    RecordField(User02,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:17
    RecordField(User03,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:17
    RecordField(User04,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:18
    RecordField(User05,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:19
		RecordField(PRNr,M4Code,40,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 12:01 21.09.2018
		RecordField(ECOMMERCEOrdf,M4Int,0,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:36 13.04.2020
		
		ArrayField(LCPOrowNr,M4Long,0,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:13 23.01.2020
		ArrayField(ItemCompCode,M4Code,100,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 12:41 20.08.2020
	EndRecordAdd;
	
	RecordAddBegin(RetVc,"RetVc_Custom");
		RecordField(ECOMMERCEOrdf,M4Int,0,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:36 13.04.2020
  EndRecordAdd;

	

  RecordAddBegin(RetPUVc,"RetPUVc_Custom");
    RecordField(NotForReport,M4Mark,0,0);		//Edit----------------------Dima  14.04.2015
    RecordField(SentCoin,M4Int,0,0);//Edit***************************Sasha2,14:38 26.07.2016 {
    RecordField(TypeCoin,M4Int,0,0);
    RecordField(SentDateCoin,M4Date,0,0);
    RecordField(FileNameCoin,M4Str,255,0);
    RecordField(TransBillCoin,M4Str,10,0);
    RecordField(PackageEANNum,M4Str,15,0); //Edit***************************Sasha2,14:38 26.07.2016 }
    RecordField(User01,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:16
    RecordField(User02,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:17
    RecordField(User03,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:17
    RecordField(User04,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:18
    RecordField(User05,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:19

    ArrayField(BarCode,M4Code,20,0); //Edit***************************Sasha2,17:43 26.07.2016
  EndRecordAdd;

  RecordAddBegin(ObjVc,"ObjVc_Custom");
    /*SubsetKeyBegin2(ActSbstOTCode); already exists in 8.4
    StoreInBaseKey;
    AppendFieldToKeyName(OTCode);
    KeySegment(Code);
    SubsetKeyBegin2(ActSbstComment);
    StoreInBaseKey;
    AppendFieldToKeyName(OTCode);
    KeySegment(Comment);
    KeySegment(Code);*/
  EndRecordAdd;

  RecordAddBegin(PLDefVc,"PLDefVc_Custom");
    ArrayField(DispGroups,M4Code,100,DIVc);// Edit ************************** Thursday, 20 August 2015 13:45:31
  EndRecordAdd;

  RecordAddBegin(TRVc,"TRVc_Custom");
    ArrayField(MyVal1,M4Val,0,0);
    ArrayField(MyVal2,M4Val,0,0);
    ArrayField(MyVal3,M4Val,0,0);
    ArrayField(MyVal4,M4Val,0,0);
    ArrayField(MyVal5,M4Val,0,0);
    ArrayField(MyVal6,M4Val,0,0);
    ArrayField(CustCode,M4Code,20,CUVc);//Edit***************************Sasha2,12:10 23.01.2017
    ArrayField(MyVal7,M4Val,0,0);
    ArrayField(MyVal8,M4Val,0,0);
    ArrayField(MyVal9,M4Val,0,0);
    ArrayField(MyVal10,M4Val,0,0);
    ArrayField(MyVal11,M4Val,0,0);
    ArrayField(MyVal12,M4Val,0,0);
    ArrayField(MyVal13,M4Val,0,0);
    ArrayField(MyVal14,M4Val,0,0);
    ArrayField(MyVal15,M4Val,0,0);
    ArrayField(RowNr,M4Long,0,0);
    ArrayField(CorrespNr,M4Long,0,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 28 September 2018 12:36:12
  EndRecordAdd;

  RecordAddBegin(LoyaltyCardVc,"LoyaltyCardVc_Custom");
    RecordField(StartBalance,M4Val,0,0);// Edit ************************** Tuesday, 25 April 2017 09:52:28
    RecordField(IVSerNr,M4Str,255,0);//Edit-------------------Vitalii 17:00 31.05.2017
    RecordField(CompNr,M4Str,255,0);//Edit-------------------Vitalii 17:00 31.05.2017
    RecordField(PointsBalanceTotal,M4Val,0,0); //Edit***************************Sasha2,10:10 23.06.2017
    RecordField(CashbackLevelPoints,M4Val,0,0); //Edit***************************Sasha2,10:10 23.06.2017
		RecordField(RebCodeCRM,M4Code,30,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:41 06.09.2018
		RecordField(CRMid,M4Str,255,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:10 12.09.2018
  EndRecordAdd;
	
	
	RecordAddBegin(CTypeVc,"CClassVc_Custom");
    RecordField(Relatedf,M4Int,0,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:43 24.09.2020
	EndRecordAdd;
	
	

  RecordAddBegin(PointsHistVc,"PointsHistVc_Custom");
    RecordField(User,M4Code,10,UserVc);//Edit-------------------Vitalii 16:01 25.04.2017
  EndRecordAdd;

  RecordAddBegin(ERVc,"ERVc_Custom");
    RecordField(RateShareFlag,M4Mark,0,0); //Edit***************************Sasha2,11:46 03.05.2017
  EndRecordAdd;

  //Virtual register is used to avoid using of many variables in the reports
  //You can use and expand this register as much as you want
  RecordBegin(TotalsRepVc,-,"TotalRep");		//Edit----------------------Dima  23.02.2016
    RecordField(SerNr,M4Long,0,0);
    RecordField(TotQuant,M4Val,0,0);
    RecordField(TotCost,M4Val,0,0);
    RecordField(TotPrice,M4Val,0,0);
  EndRecord;

  RecordBegin(MarketingVc,-,"MarketingVc_New");// Edit ************************** Friday, July 18, 2014 at 9:47:38
    RecordField(SerNr,M4Long,0,0);
    RecordField(CustCode,M4Code,20,CUVc);
    RecordField(Name,M4Str,200,0);
    RecordField(TransDate,M4Date,0,0);
    RecordField(TransTime,M4Time,0,0);
    RecordField(Location,M4Code,20,LocationVc);
    RecordField(LocalMachine,M4Code,20,0);
    RecordField(Phone1,M4Str,20,0);
    RecordField(Phone2,M4Str,20,0);
    RecordField(Address,M4Str,200,0);
    RecordField(eMail,M4Str,200,0);
    RecordField(CommentResult,M4Str,200,0);
    RecordField(Age,M4Int,0,0);
    RecordField(Gender,M4Int,0,0);
    RecordField(NationalityRbtn,M4Int,0,0);
    RecordField(NationalityTxt,M4Str,200,0);
    RecordField(Reason,M4Str,200,0);
    RecordField(ReferenceRbtn,M4Int,0,0);
    RecordField(ReferenceTxt,M4Str,200,0);
    RecordField(ResultRbtn,M4Int,0,0);
    RecordField(ResultTxt,M4Str,200,0);// Edit ************************** Thursday, 24 July 2014 13:35:30
    RecordField(InvNr,M4Str,200,0);//Edit by Victor July 22 10.17 M4string -> M4Str
    RecordField(CityRbtn,M4Int,0,0);
    RecordField(CityTxt,M4Str,200,0);
    RecordField(PersonsQty,M4Int,0,0);
    RecordField(SalesMan,M4Str,100,UserVc);//Edit by Victor July 22 10.17 100,0 -> 100,UserVc
    RecordField(Math,M4TextField,0,0);
    RecordField(Phone3,M4Str,20,0);
    RecordField(ReasonBtn,M4Int,0,0);
    RecordField(ReferenceTxtWeb,M4Str,250,0);
    RecordField(ReferenceTxtMag,M4Str,250,0);
    RecordField(GenderQty,M4Int,0,0);
    RecordField(AnotherCard,M4Int,0,0);
    RecordField(AnotherCardNr,M4Str,100,0);
    RecordField(CustCodeType,M4Int,0,0);
    RecordField(SaleType,M4Int,0,0);
		RecordField(CRMid,M4Str,255,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:10 12.09.2018

    MainKeyBegin(SerNr,0);
    KeySegment(SerNr);
    KeyBegin(CustCode);
    KeySegment(CustCode);
    KeySegment(SerNr);
    KeyBegin(Name);
    KeySegment(Name);
    KeySegment(SerNr);
  	KeyBegin(TransDate);
    KeySegment(TransDate);
    KeySegment(TransTime);
    KeySegment(SerNr);
    KeyBegin(Location);
    KeySegment(Location);
    KeySegment(SerNr);
    KeyBegin(LocalMachine);
    KeySegment(LocalMachine);
    KeySegment(SerNr);
  EndRecord;

  RecordBegin(ExternalStoreVc,-,"ExternalStoreVc_New");// Edit ************************** Tuesday, 27 May 2014 15:35:31
    RecordField(Code,M4Code,20,0);
    RecordField(Name,M4Str,200,0);
    RecordField(Comment,M4Str,200,0);
    MainKeyBegin(Code,0);
    KeySegment(Code);
  EndRecord;

  RecordBegin(ExternalSalesVc,-,"ExternalSalesVc_New");// Edit ************************** Tuesday, 27 May 2014 15:35:31
    RecordField(SerNr,M4Long,0,0);
    RecordField(CustCode,M4Code,20,CUVc);
    RecordField(Name,M4Str,200,0);
    RecordField(TransDate,M4Date,0,0);
    RecordField(Location,M4Code,20,ExternalStoreVc);
    RecordField(Comment,M4Str,200,0);
    RecordField(Sum,M4Val,0,0);
    RecordField(SumB1,M4Val,0,0);
    RecordField(OKFlag,M4Mark,0,0);

    MainKeyBegin(SerNr,0);
    KeySegment(SerNr);
    KeyBegin(CustCode);
    KeySegment(CustCode);
    KeySegment(SerNr);
    KeyBegin(Name);
    KeySegment(Name);
    KeySegment(SerNr);
    KeyBegin(TransDate);
    KeySegment(TransDate);
    KeySegment(SerNr);
    KeyBegin(Location);
    KeySegment(Location);
    KeySegment(SerNr);
    KeyBegin(CustDate);
    KeySegment(CustCode);
    KeySegment(TransDate);
    KeySegment(SerNr);
  EndRecord;

  RecordBegin(PackListVc,-,"PackListVc_New");
    RecordField(SerNr,M4Long,0,0);
    RecordField(PUSerNr,M4Long,0,0);
    RecordField(SMSerNr,M4Long,0,0);
    RecordField(SHSerNr,M4Long,0,0);
    RecordField(Comment,M4Str,200,0);
    RecordField(SumPack,M4Val,0,0);
    RecordField(SumWeight,M4Val,0,0);
    RecordField(SumVolume,M4Val,0,0);
    RecordField(Math,M4Matrix,0,0);
    ArrayBegin(Math,-,1);
    ArrayField(VECode,M4Code,20,CUVc);
    ArrayField(VEName,M4Str,200,0);
    ArrayField(OrderNr,M4Str,200,0);
    ArrayField(Pack,M4Val,0,0);
    ArrayField(Weight,M4Val,0,0);
    ArrayField(Volume,M4Val,0,0);
    ArrayField(Comment,M4Str,200,0);
    EndArray;

    MainKeyBegin(SerNr,0);
    KeySegment(SerNr);
    KeyBegin(PUSerNr);
    KeySegment(PUSerNr);
    KeySegment(SerNr);
    KeyBegin(SMSerNr);
    KeySegment(SMSerNr);
    KeySegment(SerNr);
    KeyBegin(SHSerNr);
    KeySegment(SHSerNr);
    KeySegment(SerNr);
  EndRecord

  RecordBegin(GlobalLocationVc,-,"GlLocationVc_New");
    RecordField(Code,M4Code,10,0);
    RecordField(Name,M4Str,60,0);
    RecordField(Company,M4Int,0,0);

    MainKeyBegin(Code,0);
    KeySegment(Code);
    KeyBegin(Name);
    KeySegment(Name);
    KeySegment(Code);
    KeyBegin(Company);
    KeySegment(Company);
    KeySegment(Code);
  EndRecord;

  RecordBegin(NewINVc,-,"NewINVc_New");
    RecordField(SerNr,M4Long,0,0);
  	RecordField(TransDate,M4Date,0,0);
  	RecordField(SalesMan,M4Code,10,UserVc);
  	RecordField(OKFlag,M4Mark,0,0);
		RecordField(Name,M4Str,100,0);
		RecordField(Unittext,M4Str,10,0);
		RecordField(MinLevel,M4Qty,0,0);
		RecordField(Objects,M4UStr,60,ObjVc);
		RecordField(SalesAcc,M4Code,10,AccVc);
		RecordField(UPrice1,M423Val,0,0);
		RecordField(ItemType,M4Int,0,0);
		RecordField(Group,M4Code,5,ITVc);
		RecordField(x1,M4Dummy,0,0);
		RecordField(x2,M4Dummy,0,0);
		RecordField(InPrice,M45Val,0,0);
		RecordField(InvCode,M4Code,10,0);
		RecordField(ExtraCost,M4Val,0,0);
		RecordField(SerNrf,M4Int,0,0);
		RecordField(Department,M4Code,10,0);
		RecordField(Weight,M45Val,0,0);
		RecordField(Volume,M45Val,0,0);
		RecordField(EUCodex,M4Code,20,0);
		RecordField(InCurncyCode,M4Code,5,CurncyCodeVc);
		RecordField(Bonus,M4Qty,0,0);
		RecordField(Recepy,M4Code,20,RecVc);
		RecordField(Markup,M4Qty,0,0);
		RecordField(x3,M4Dummy,0,0);
		RecordField(BarCode,M4Code,20,0);
		RecordField(UpdateCost,M4Int,0,0);
		RecordField(LastPriceChange,M4Date,0,0);
		RecordField(CalcPrice,M4Code,5,0);
		RecordField(VATCode,M4Code,10,VATCodeBlock);
		RecordField(PriceFactor,M45Val,0,0);
		RecordField(Terminated,M4Int,0,0);
		RecordField(AvgMarkup,M4Val,0,0);
		RecordField(LastPurchPrice,M45Val,0,0); /* this has always been LastPurchCost */
		RecordField(LastPurchCurncyCode,M4Code,5,CurncyCodeVc);
		RecordField(WeighedAvPrice,M45Val,0,0);  /* Changed to M45Val, not a database change */
		RecordField(Conversion1,M45Val,0,0);
		RecordField(Conversion2,M45Val,0,0);
		RecordField(WarrantyLength,M4Qty,0,0);
		RecordField(Math,M4Matrix,0,0);
		RecordField(InvRecepy,M4Code,20,RecVc);
		RecordField(EUSalesAcc,M4Code,10,AccVc);
		RecordField(ExpSalesAcc,M4Code,10,AccVc);
		RecordField(VATCodeEU,M4Code,10,VATCodeBlock);
		RecordField(VATCodeExp,M4Code,10,VATCodeBlock);
		RecordField(ChangePrice,M4Int,0,0);
		RecordField(RebCode,M4Code,5,0);
		RecordField(ExplodeRec,M4Int,0,0);
		RecordField(Unittext2,M4Str,10,0);
		RecordField(UnitCoefficient,M45Val,0,0);
		RecordField(WarnText1,M4Str,255,0);
		RecordField(VARList,M4UStr,30,0);
		RecordField(ItemMaterial,M4Int,0,0);
		RecordField(AlcPrc,M4UVal,0,0);
		RecordField(DefaultSource,M4Code,10,0);
		RecordField(AlternativeCode,M4Str,40,0);
		RecordField(CostAcc,M4Code,10,AccVc); /* Why was this 20 size */
		RecordField(DefLocation,M4Code,10,0);
		RecordField(LastBasePriceChange,M4Date,0,0);
		RecordField(MaxLevel,M4Qty,0,0);
		RecordField(LastPurchPrice2,M45Val,0,0);/* This is LastPurchPrice, not incl. the extra costs */
		RecordField(Width,M4UVal,0,0);
		RecordField(Height,M4UVal,0,0);
		RecordField(Depth,M4UVal,0,0);
		RecordField(ContractItem,M4Code,20,INVc);
		RecordField(Internal,M4Int,0,0);
		RecordField(InclItemFreight,M4Int,0,0);
		RecordField(FixedFreight,M4Val,0,0);
		RecordField(DispGroups,M4UStr,200,DIVc);
		RecordField(HazLevCode,M4Code,5,HazLevVc);
		RecordField(Density,M45Val,0,0);
		RecordField(xClassification,M4UStr,200,0);
		RecordField(CredSalesAcc,M4Code,10,AccVc);
		RecordField(CredEUSalesAcc,M4Code,10,AccVc);
		RecordField(CredExpSalesAcc,M4Code,10,AccVc);
		RecordField(CredVATCode,M4Code,10,VATCodeBlock);
		RecordField(CredVATCodeEU,M4Code,10,VATCodeBlock);
		RecordField(CredVATCodeExp,M4Code,10,VATCodeBlock);
		RecordField(RentalItem,M4Code,20,INVc);
		RecordField(CompUsage,M4Code,10,AccVc);
		RecordField(colnr,M4Set,46,0);
		RecordField(VARMask,M4UStr,60,0);
		RecordField(VARRepOrder,M4UStr,60,0);
		RecordField(VARSubsets,M4UStr,200,0);
		RecordField(LocArea,M4Code,20,0);
		RecordField(EKNCode,M4Code,20,0);
		RecordField(DefPalletItem,M4Code,20,INVc);
		RecordField(QtyonPallet,M4UVal,0,0);
		RecordField(PalletWidth,M4UVal,0,0);
		RecordField(PalletHeight,M4UVal,0,0);
		RecordField(PalletDepth,M4UVal,0,0);
		RecordField(Brand,M4Str,60,0);
		RecordField(BrandType,M4Str,60,0);
		RecordField(PickArea,M4Code,20,0);
		RecordField(SWWCode,M4Str,60,0);
		RecordField(RepaPricePerWeight,M4Val,0,0);
		RecordField(PalletsInPickArea,M4UVal,0,0);
		RecordField(DefPosWidth,M4UVal,0,0);
		RecordField(DefPosHeight,M4UVal,0,0);
		RecordField(DefPosDepth,M4UVal,0,0);
		RecordField(InPriceB2,M45Val,0,0);
		RecordField(WeighedAvPriceB2,M45Val,0,0);
		RecordField(EUCostAcc,M4Code,10,AccVc);
		RecordField(ExpCostAcc,M4Code,10,AccVc);
		RecordField(PalletLayers,M4UVal,0,0);
		RecordField(QtyonPalletLayer,M4UVal,0,0);
		RecordField(UserStr1,M4Str,255,0);
		RecordField(UserStr2,M4Str,255,0);
		RecordField(UserStr3,M4Str,255,0);
		RecordField(UserStr4,M4Str,255,0);
		RecordField(UserStr5,M4Str,255,0);
		RecordField(UserVal1,M4UVal,0,0);
		RecordField(UserVal2,M4UVal,0,0);
		RecordField(UserVal3,M4UVal,0,0);
		RecordField(UserDate1,M4Date,0,0);
		RecordField(UserDate2,M4Date,0,0);
		RecordField(UserDate3,M4Date,0,0);
		RecordField(RentGroup,M4Code,5,0);
		RecordField(FAGroup,M4Code,5,0);
		RecordField(NetWeight,M45Val,0,0);
		RecordField(PrimaryCostModel,M4Int,0,0);
		RecordField(QueuedCostModel,M4Int,0,0);
		RecordField(CostPerc,M4Val,0,0);
		RecordField(FIFOPerSerialNr,M4Int,0,0);
		RecordField(FIFOPerLocation,M4Int,0,0);
		RecordField(WAPerLocation,M4Int,0,0);
		RecordField(CostPricePerLocation,M4Int,0,0);
		RecordField(NotForSales,M4Int,0,0);
		RecordField(SRUpdateCost,M4Int,0,0);
		RecordField(SuppSerialNr,M4Str,20,0);
		RecordField(MajStoneDet,M4Str,20,0);
		RecordField(Colour,M4Str,20,0);
		RecordField(Clarity,M4Str,20,0);
		RecordField(Cert,M4Str,20,0);
		RecordField(MinStoneDet,M4Str,20,0);
		RecordField(Metal,M4Str,20,0);
		RecordField(RowWeight,M4Str,20,0);
		RecordField(Size,M4Str,20,0);
		RecordField(Length,M4Str,20,0);
		RecordField(WatchBrand,M4Str,20,0);
		RecordField(StyleName,M4Str,20,0);
		RecordField(WatchMetal,M4Str,20,0);
		RecordField(Movement,M4Str,20,0);
		RecordField(BrcStr,M4Str,20,0);
		RecordField(Gender,M4Str,20,0);
		RecordField(Other,M4Str,20,0);
		RecordField(Other2,M4Str,20,0);
		RecordField(Reference,M4Str,60,0);
		RecordField(Perceptions,M4Int,0,0);
		RecordField(Withholdings,M4Int,0,0);
		RecordField(TaxTemplateCode,M4Code,10,TaxTemplateVc);
		RecordField(TaxTemplateCodeEU,M4Code,10,TaxTemplateVc);
		RecordField(TaxTemplateCodeExp,M4Code,10,TaxTemplateVc);
		RecordField(DonotRequireBatchNrOnIVCash,M4Int,0,0);
		RecordField(HotelWIPAcc,M4Code,10,AccVc);
		RecordField(CPSCode,M4Str,60,0);
		RecordField(SVOInvbleSalesAcc,M4Code,10,AccVc);
		RecordField(SVOWarrantySalesAcc,M4Code,10,AccVc);
		RecordField(SVOContractSalesAcc,M4Code,10,AccVc);
		RecordField(SVOGoodwillSalesAcc,M4Code,10,AccVc);
		RecordField(SVOInvbleCostAcc,M4Code,10,AccVc);
		RecordField(SVOWarrantyCostAcc,M4Code,10,AccVc);
		RecordField(SVOContractCostAcc,M4Code,10,AccVc);
		RecordField(SVOGoodwillCostAcc,M4Code,10,AccVc);
		RecordField(PreOrderf,M4Mark,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:49 06.07.2018
		RecordField(Category,M4Str,60,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:49 06.07.2018
		ArrayBegin(Math,-,1);
		ArrayField(Code,M4Code,20,INVc);
		ArrayField(Name,M4Str,100,0);
		ArrayField(Unittext,M4Str,10,0);
		ArrayField(MinLevel,M4Qty,0,0);
		ArrayField(Objects,M4UStr,60,ObjVc);
		ArrayField(SalesAcc,M4Code,10,AccVc);
		ArrayField(UPrice1,M423Val,0,0);
		ArrayField(ItemType,M4Int,0,0);
		ArrayField(Group,M4Code,5,ITVc);
		ArrayField(InPrice,M45Val,0,0);
		ArrayField(InvCode,M4Code,10,0);
		ArrayField(ExtraCost,M4Val,0,0);
		ArrayField(SerNrf,M4Set,1432,0); //Edit***************************Sasha2,13:56 25.12.2015
		ArrayField(Department,M4Code,10,0);
		ArrayField(Weight,M45Val,0,0);
		ArrayField(Volume,M45Val,0,0);
		ArrayField(EUCodex,M4Code,20,0);
		ArrayField(InCurncyCode,M4Code,5,CurncyCodeVc);
		ArrayField(Bonus,M4Qty,0,0);
		ArrayField(Recepy,M4Code,20,RecVc);
		ArrayField(Markup,M4Qty,0,0);
		ArrayField(BarCode,M4Code,20,0);
		ArrayField(UpdateCost,M4Int,0,0);
		ArrayField(LastPriceChange,M4Date,0,0);
		ArrayField(CalcPrice,M4Code,5,0);
		ArrayField(VATCode,M4Code,10,VATCodeBlock);
		ArrayField(PriceFactor,M45Val,0,0);
		ArrayField(Terminated,M4Int,0,0);
		ArrayField(AvgMarkup,M4Val,0,0);
		ArrayField(LastPurchPrice,M45Val,0,0); /* this has always been LastPurchCost */
		ArrayField(LastPurchCurncyCode,M4Code,5,CurncyCodeVc);
		ArrayField(WeighedAvPrice,M45Val,0,0);  /* Changed to M45Val, not a database change */
		ArrayField(Conversion1,M45Val,0,0);
		ArrayField(Conversion2,M45Val,0,0);
		ArrayField(WarrantyLength,M4Qty,0,0);
		ArrayField(InvRecepy,M4Code,20,RecVc);
		ArrayField(EUSalesAcc,M4Code,10,AccVc);
		ArrayField(ExpSalesAcc,M4Code,10,AccVc);
		ArrayField(VATCodeEU,M4Code,10,VATCodeBlock);
		ArrayField(VATCodeExp,M4Code,10,VATCodeBlock);
		ArrayField(ChangePrice,M4Int,0,0);
		ArrayField(RebCode,M4Code,5,0);
		ArrayField(ExplodeRec,M4Int,0,0);
		ArrayField(Unittext2,M4Str,10,0);
		ArrayField(UnitCoefficient,M45Val,0,0);
		ArrayField(WarnText1,M4Str,255,0);
		ArrayField(VARList,M4UStr,30,0);
		ArrayField(ItemMaterial,M4Int,0,0);
		ArrayField(AlcPrc,M4UVal,0,0);
		ArrayField(DefaultSource,M4Code,10,0);
		ArrayField(AlternativeCode,M4Str,40,0);
		ArrayField(CostAcc,M4Code,10,AccVc); /* Why was this 20 size */
		ArrayField(DefLocation,M4Code,10,0);
		ArrayField(LastBasePriceChange,M4Date,0,0);
		ArrayField(MaxLevel,M4Qty,0,0);
		ArrayField(LastPurchPrice2,M45Val,0,0);/* This is LastPurchPrice, not incl. the extra costs */
		ArrayField(Width,M4UVal,0,0);
		ArrayField(Height,M4UVal,0,0);
		ArrayField(Depth,M4UVal,0,0);
		ArrayField(ContractItem,M4Code,20,INVc);
		ArrayField(Internal,M4Int,0,0);
		ArrayField(InclItemFreight,M4Int,0,0);
		ArrayField(FixedFreight,M4Val,0,0);
		ArrayField(DispGroups,M4UStr,200,DIVc);
		ArrayField(HazLevCode,M4Code,5,HazLevVc);
		ArrayField(Density,M45Val,0,0);
		ArrayField(xClassification,M4UStr,200,0);
		ArrayField(CredSalesAcc,M4Code,10,AccVc);
		ArrayField(CredEUSalesAcc,M4Code,10,AccVc);
		ArrayField(CredExpSalesAcc,M4Code,10,AccVc);
		ArrayField(CredVATCode,M4Code,10,VATCodeBlock);
		ArrayField(CredVATCodeEU,M4Code,10,VATCodeBlock);
		ArrayField(CredVATCodeExp,M4Code,10,VATCodeBlock);
		ArrayField(RentalItem,M4Code,20,INVc);
		ArrayField(CompUsage,M4Code,10,AccVc);
		ArrayField(colnr,M4Set,46,0);
		ArrayField(VARMask,M4UStr,60,0);
		ArrayField(VARRepOrder,M4UStr,60,0);
		ArrayField(VARSubsets,M4UStr,200,0);
		ArrayField(LocArea,M4Code,20,0);
		ArrayField(EKNCode,M4Code,20,0);
		ArrayField(DefPalletItem,M4Code,20,INVc);
		ArrayField(QtyonPallet,M4UVal,0,0);
		ArrayField(PalletWidth,M4UVal,0,0);
		ArrayField(PalletHeight,M4UVal,0,0);
		ArrayField(PalletDepth,M4UVal,0,0);
		ArrayField(Brand,M4Str,60,0);
		ArrayField(BrandType,M4Str,60,0);
		ArrayField(PickArea,M4Code,20,0);
		ArrayField(SWWCode,M4Str,60,0);
		ArrayField(RepaPricePerWeight,M4Val,0,0);
		ArrayField(PalletsInPickArea,M4UVal,0,0);
		ArrayField(DefPosWidth,M4UVal,0,0);
		ArrayField(DefPosHeight,M4UVal,0,0);
		ArrayField(DefPosDepth,M4UVal,0,0);
		ArrayField(InPriceB2,M45Val,0,0);
		ArrayField(WeighedAvPriceB2,M45Val,0,0);
		ArrayField(EUCostAcc,M4Code,10,AccVc);
		ArrayField(ExpCostAcc,M4Code,10,AccVc);
		ArrayField(PalletLayers,M4UVal,0,0);
		ArrayField(QtyonPalletLayer,M4UVal,0,0);
		ArrayField(UserStr1,M4Str,255,0);
		ArrayField(UserStr2,M4Str,255,0);
		ArrayField(UserStr3,M4Str,255,0);
		ArrayField(UserStr4,M4Str,255,0);
		ArrayField(UserStr5,M4Str,255,0);
		ArrayField(UserVal1,M4UVal,0,0);
		ArrayField(UserVal2,M4UVal,0,0);
		ArrayField(UserVal3,M4UVal,0,0);
		ArrayField(UserDate1,M4Date,0,0);
		ArrayField(UserDate2,M4Date,0,0);
		ArrayField(UserDate3,M4Date,0,0);
		ArrayField(RentGroup,M4Code,5,0);
		ArrayField(FAGroup,M4Code,5,0);
		ArrayField(NetWeight,M45Val,0,0);
		ArrayField(PrimaryCostModel,M4Int,0,0);
		ArrayField(QueuedCostModel,M4Int,0,0);
		ArrayField(CostPerc,M4Val,0,0);
		ArrayField(FIFOPerSerialNr,M4Int,0,0);
		ArrayField(FIFOPerLocation,M4Int,0,0);
		ArrayField(WAPerLocation,M4Int,0,0);
		ArrayField(CostPricePerLocation,M4Int,0,0);
		ArrayField(NotForSales,M4Int,0,0);
		ArrayField(SRUpdateCost,M4Int,0,0);
		ArrayField(SuppSerialNr,M4Str,20,0);
		ArrayField(MajStoneDet,M4Str,20,0);
		ArrayField(Colour,M4Str,20,0);
		ArrayField(Clarity,M4Str,20,0);
		ArrayField(Cert,M4Str,20,0);
		ArrayField(MinStoneDet,M4Str,20,0);
		ArrayField(Metal,M4Str,20,0);
		ArrayField(RowWeight,M4Str,20,0);
		ArrayField(Size,M4Str,20,0);
		ArrayField(Length,M4Str,20,0);
		ArrayField(WatchBrand,M4Str,20,0);
		ArrayField(StyleName,M4Str,20,0);
		ArrayField(WatchMetal,M4Str,20,0);
		ArrayField(Movement,M4Str,20,0);
		ArrayField(BrcStr,M4Str,20,0);
		ArrayField(Gender,M4Str,20,0);
		ArrayField(Other,M4Str,20,0);
		ArrayField(Other2,M4Str,20,0);
		ArrayField(Reference,M4Str,60,0);
		ArrayField(Perceptions,M4Int,0,0);
		ArrayField(Withholdings,M4Int,0,0);
		ArrayField(TaxTemplateCode,M4Code,10,TaxTemplateVc);
		ArrayField(TaxTemplateCodeEU,M4Code,10,TaxTemplateVc);
		ArrayField(TaxTemplateCodeExp,M4Code,10,TaxTemplateVc);
		ArrayField(DonotRequireBatchNrOnIVCash,M4Int,0,0);
		ArrayField(HotelWIPAcc,M4Code,10,AccVc);
		ArrayField(CPSCode,M4Str,60,0);
		ArrayField(SVOInvbleSalesAcc,M4Code,10,AccVc);
		ArrayField(SVOWarrantySalesAcc,M4Code,10,AccVc);
		ArrayField(SVOContractSalesAcc,M4Code,10,AccVc);
		ArrayField(SVOGoodwillSalesAcc,M4Code,10,AccVc);
		ArrayField(SVOInvbleCostAcc,M4Code,10,AccVc);
		ArrayField(SVOWarrantyCostAcc,M4Code,10,AccVc);
		ArrayField(SVOContractCostAcc,M4Code,10,AccVc);
		ArrayField(SVOGoodwillCostAcc,M4Code,10,AccVc);
		ArrayField(BrandSC,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(Collection,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(Style,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(Type,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(GenderSC,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(Dial,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(Strap,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(Material,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(PrecStones,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(Mechanism,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(Function,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(WaterResist,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(Diameter,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(Category,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(Division,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(WeightOfMat,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(Diamonds,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(DiamondsCarat,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(SolidStones05,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(PrecAndSemiPrec,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(RingSizes,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(Carat,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(ClaritySC,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(Color,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(ColorOfMat,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(ShapeCut,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(Description,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(Art,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(WatchType,M4Str,200,DIVc); //Edit***************************Sasha2,15:44 04.12.2015
		ArrayField(classif30,M4Str,200,DIVc); //Edit***************************Sasha2,11:49 26.01.2016
		ArrayField(classif31,M4Str,200,DIVc); //Edit***************************Sasha2,11:49 26.01.2016
		ArrayField(classif32,M4Str,200,DIVc); //Edit***************************Sasha2,11:49 26.01.2016
		ArrayField(classif33,M4Str,200,DIVc); //Edit***************************Sasha2,11:49 26.01.2016
		ArrayField(classif34,M4Str,200,DIVc); //Edit***************************Sasha2,11:49 26.01.2016
		ArrayField(classif35,M4Str,200,DIVc); //Edit***************************Sasha2,11:49 26.01.2016
		
		ArrayField(GroupCl,M4Str,200,DIVc);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:19 13.09.2018
		ArrayField(SubGroupCl,M4Str,200,DIVc);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:19 13.09.2018
		ArrayField(SizeCl,M4Str,200,DIVc);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:19 13.09.2018
		ArrayField(UseCl,M4Str,200,DIVc);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:19 13.09.2018
		ArrayField(SexCl,M4Str,200,DIVc);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:19 13.09.2018
		ArrayField(PlatingCl,M4Str,200,DIVc);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:19 13.09.2018
		ArrayField(CutCl,M4Str,200,DIVc);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:19 13.09.2018
		ArrayField(StoneCl,M4Str,200,DIVc);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:19 13.09.2018
		ArrayField(OdourCl,M4Str,200,DIVc);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:19 13.09.2018
		ArrayField(WeightCl,M4Str,200,DIVc);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:19 13.09.2018
		ArrayField(ConsgType,M4Set,900,INVc); //Edit_________________ABR 19.11.18
		ArrayField(VendorCode,M4Code,20,0);//Edit_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-ABR 11:49 14.05.2019
		ArrayField(NewBarCode,M4Code,20,0);//Edit______________________________________________ABR 11:16 22.10.19
		ArrayField(NewVECode,M4Code,20,0);//Edit______________________________________________ABR 11:16 22.10.19
		
		ArrayField(ProductCategoryCode,M4Str,200,BtrxProductCategoryVc);
		ArrayField(ProductNameCode,M4Str,200,BtrxProductNameVc);
		ArrayField(SetQty,M4UVal,0,0);
		ArrayField(StrapColourCode,M4Str,200,BtrxColourVc);
		ArrayField(StrapMat,M4Str,200,BtrxMaterialVc);
		ArrayField(ClockFaceColourCode,M4Str,200,BtrxColourVc);
		ArrayField(ClockFaceMaterialCode,M4Str,200,BtrxMaterialVc);
		ArrayField(StoneScattA,M45Val,0,0);
		ArrayField(Year,M4UVal,0,0);
		ArrayField(Life,M4UVal,0,0);
		ArrayField(LimitedGood,M4Str,200,0);
		ArrayField(Warranty,M4Str,200,0);
		ArrayField(ScratchRes,M4Str,200,0);
		
		ArrayField(StoneScattA2,M4Str,200,0);
		ArrayField(Length2,M4Str,200,BtrxSizeVc);
		ArrayField(Width2,M4Str,200,BtrxSizeVc);
		ArrayField(Height2,M4Str,200,BtrxSizeVc);
		ArrayField(Diameter2,M4Str,200,BtrxSizeVc);
		ArrayField(Volume2,M4Str,200,BtrxSizeVc);
		ArrayField(Weight2,M4Str,200,BtrxSizeVc);
		ArrayField(ItemSize,M4Str,200,BtrxSizeVc);
		ArrayField(UnitOfMeasurement,M4Str,200,BtrxSizeVc);
		ArrayField(AllMaterials,M4UStr,200,BtrxAllMaterialsVc);
		ArrayField(Complications,M4Str,200,BtrxComplicationsVc);
		ArrayField(CaseDiameter,M4Str,200,BtrxCaseDiamVc);
		ArrayField(WatchMechanism,M4Str,200,BtrxWatchMechanVc);
		ArrayField(PowerReserve,M4Str,200,BtrxPowerReserveVc);
		ArrayField(WaterResistant,M4Str,200,BtrxWaterResistantVc);
		ArrayField(Filling,M4Str,200,BtrxFillingVc);
		ArrayField(MicrowaveSafe,M4Str,200,BtrxMicrowaveProtectVc);
		ArrayField(MatchesKitchenStove,M4Str,200,BtrxStoveCompatVc);
		//ArrayField(BtrxPlatingCl,M4Str,200,BtrxPlatingVc);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Irkan Ahmadov 10:19 17.07.2020
		ArrayField(High,M4Str,200,0);
		ArrayField(CountInSet,M4Str,200,BtrxCountInSetVc);
		ArrayField(CentralCarat,M4Str,200,BtrxCentralCaratVc);
		ArrayField(Life2,M4Str,200,0);
		ArrayField(AddProdDesc,M4Str,255,0);
		ArrayField(Care,M4Str,255,0);
		ArrayField(Sctrchresistant,M4Str,255,0);
		ArrayField(ProdFeat,M4Str,255,0);
		ArrayField(BTRxGroup,M4Str,255,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 17:01 27.10.2020
		EndArray;

		MainKeyBegin(SerNr,0);
		KeySegment(SerNr);
		KeyBegin(TransDate);
		KeySegment(TransDate);
		KeySegment(SerNr);
		KeyBegin(SalesMan);
		KeySegment(SalesMan);
		KeySegment(TransDate);
		KeySegment(SerNr);
		KeyBegin(OKFlag);
		KeySegment(OKFlag);
		KeySegment(TransDate);
		KeySegment(SerNr);
  EndRecord;
	
	
	
	
	 RecordBegin(IDEANewINVc,-,"IDEANewINVc");
    RecordField(SerNr,M4Long,0,0);
  	RecordField(TransDate,M4Date,0,0);
  	RecordField(SalesMan,M4Code,10,UserVc);
  	RecordField(OKFlag,M4Mark,0,0);
		RecordField(Unittext,M4Str,10,0);
		RecordField(Group,M4Code,5,ITVc);
		RecordField(Brand,M4Str,60,0);
		RecordField(UserStr1,M4Str,255,0);
		RecordField(UserStr2,M4Str,255,0);
		RecordField(UserStr3,M4Str,255,0);
		RecordField(UserStr4,M4Str,255,0);
		RecordField(UserStr5,M4Str,255,0);
		RecordField(UserVal1,M4UVal,0,0);
		RecordField(UserVal2,M4UVal,0,0);
		RecordField(UserVal3,M4UVal,0,0);
		RecordField(UserDate1,M4Date,0,0);
		RecordField(UserDate2,M4Date,0,0);
		RecordField(UserDate3,M4Date,0,0);
		RecordField(RentGroup,M4Code,5,0);
		RecordField(PreOrderf,M4Mark,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:49 06.07.2018
		RecordField(Category,M4Str,60,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:49 06.07.2018
		RecordField(Math,M4Matrix,0,0);
		ArrayBegin(Math,-,1);
		ArrayField(Code,M4Code,20,INVc);
		ArrayField(Name,M4Str,100,0);
		ArrayField(Unittext,M4Str,10,0);
		ArrayField(Objects,M4UStr,60,ObjVc);
		ArrayField(Group,M4Code,5,ITVc);
		ArrayField(SerNrf,M4Set,1432,0); //Edit***************************Sasha2,13:56 25.12.2015
		ArrayField(Recepy,M4Code,20,RecVc);
		ArrayField(Markup,M4Qty,0,0);
		ArrayField(BarCode,M4Code,20,0);
		ArrayField(VATCode,M4Code,10,VATCodeBlock);
		ArrayField(PriceFactor,M45Val,0,0);
		ArrayField(UserStr1,M4Str,255,0);
		ArrayField(UserStr2,M4Str,255,0);
		ArrayField(UserStr3,M4Str,255,0);
		ArrayField(UserStr4,M4Str,255,0);
		ArrayField(UserStr5,M4Str,255,0);
		ArrayField(UserVal1,M4UVal,0,0);
		ArrayField(UserVal2,M4UVal,0,0);
		ArrayField(UserVal3,M4UVal,0,0);
		ArrayField(UserDate1,M4Date,0,0);
		ArrayField(UserDate2,M4Date,0,0);
		ArrayField(UserDate3,M4Date,0,0);
		ArrayField(Colour,M4Str,20,0);
		ArrayField(Reference,M4Str,60,0);
		ArrayField(AlternativeCode,M4Str,40,0);
		
		ArrayField(classif30,M4Str,200,DIVc); //Edit***************************Sasha2,11:49 26.01.2016
		ArrayField(classif31,M4Str,200,DIVc); //Edit***************************Sasha2,11:49 26.01.2016
		ArrayField(classif32,M4Str,200,DIVc); //Edit***************************Sasha2,11:49 26.01.2016
		ArrayField(classif33,M4Str,200,DIVc); //Edit***************************Sasha2,11:49 26.01.2016
		ArrayField(classif34,M4Str,200,DIVc); //Edit***************************Sasha2,11:49 26.01.2016
		ArrayField(classif35,M4Str,200,DIVc); //Edit***************************Sasha2,11:49 26.01.2016
		
		ArrayField(ConsgType,M4Set,900,INVc); //Edit_________________ABR 19.11.18
		ArrayField(VendorCode,M4Code,20,0);//Edit_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-ABR 11:49 14.05.2019
		ArrayField(NewBarCode,M4Code,20,0);//Edit______________________________________________ABR 11:16 22.10.19
		ArrayField(NewVECode,M4Code,20,0);//Edit______________________________________________ABR 11:16 22.10.19
		
		ArrayField(Year,M4UVal,0,0);
		ArrayField(Life,M4UVal,0,0);
		ArrayField(LimitedGood,M4Str,200,0);
		ArrayField(Warranty,M4Str,200,0);
		ArrayField(ScratchRes,M4Str,200,0);
		
		ArrayField(Category,M4Code,100,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:03 30.07.2018
		ArrayField(CategoryName,M4Str,100,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:03 30.07.2018
		ArrayField(CompletCode,M4Code,100,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:03 30.07.2018
		ArrayField(SN,M4Code,100,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:03 30.07.2018
		ArrayField(SNOne,M4Code,100,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:03 30.07.2018
		ArrayField(IDEAModel,M4Str,100,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 19:08 27.01.2021
		ArrayField(IDEAColour,M4Str,100,0);  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 19:08 27.01.2021
		ArrayField(Brand,M4Str,100,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 17:55 01.02.2021
		EndArray;

		MainKeyBegin(SerNr,0);
		KeySegment(SerNr);
		KeyBegin(TransDate);
		KeySegment(TransDate);
		KeySegment(SerNr);
		KeyBegin(SalesMan);
		KeySegment(SalesMan);
		KeySegment(TransDate);
		KeySegment(SerNr);
		KeyBegin(OKFlag);
		KeySegment(OKFlag);
		KeySegment(TransDate);
		KeySegment(SerNr);
		KeyBegin(Group);
		KeySegment(Group);
		KeySegment(SerNr);
		KeyBegin(GroupTD);
		KeySegment(Group);
		KeySegment(TransDate);
		KeySegment(SerNr);
  EndRecord;
	
	

  RecordBegin(INConsVc,-,"INConsVc_New");
    RecordField(Code,M4Str,20,INVc);
		RecordField(Name,M4Str,100,0);
		RecordField(Days,M4Int,0,0);
		RecordField(d1,M4Date,0,0);
		RecordField(d2,M4Date,0,0);
		RecordField(i1,M4Int,0,0);
		RecordField(i2,M4Int,0,0);
		RecordField(s1,M4Str,100,0);
		RecordField(s2,M4Str,100,0);

		MainKeyBegin(Code,0);
		KeySegment(Code);
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
  EndRecord;

  RecordBegin(PLHistVc,-,"PLHistVc_New");
    RecordField(PLCode,M4Code,5,0);
		RecordField(ArtCode,M4Code,20,INVc);
		RecordField(CustCode,M4Code,20,CUVc);
		RecordField(SerialNr,M4Str,30,0);
		RecordField(TransDate,M4Date,0,0);
		RecordField(TransTime,M4Time,0,0);
		RecordField(LastPrice,M4Val,0,0);
		RecordField(LastCurncyCode,M4Str,20,0);

		MainKeyBegin(PLCode,0)
		KeySegment(PLCode);
		KeySegment(ArtCode);
		KeySegment(CustCode);
		KeySegment(SerialNr);
		KeyBegin(TransDate);
		KeySegment(TransDate);
		KeySegment(TransTime);
		KeySegment(PLCode);
		KeySegment(ArtCode);
		KeySegment(CustCode);
		KeySegment(SerialNr);
  EndRecord;

  RecordBegin(PricePointListVc,-,"PPList_New");
    RecordField(SerNr,M4Long,0,0);
    RecordField(TransDate,M4Date,0,0);
    RecordField(OKFlag,M4Int,0,0);
    RecordField(Closed,M4Int,0,0);
    RecordField(Math,M4Matrix,0,0);
    ArrayBegin(Math,-,1);
    ArrayField(Num,M4Int,0,0);
    ArrayField(Cost,M4Val,0,0);
    ArrayField(Price,M4Val,0,0);
    ArrayField(PriceUSD,M4Val,0,0);//Edit-------------------Vitalii 11:07 31.01.2018
    EndArray;

    MainKeyBegin(SerNr,0);
    KeySegment(SerNr);
    KeyBegin(TransDate);
    KeySegment(TransDate);
    KeySegment(SerNr);
  EndRecord;

  RecordBegin(IVrsVc,-,"IVrsVc_New");
    ImpExpLevel(0);
    RecordField(SerNr,M4Long,0,0);
    RecordField(IVNr,M4Long,0,0);
    RecordField(TransDate,M4Date,0,0);
    RecordField(RowNr,M4Int,0,0);
    RecordField(ArtCode,M4Code,20,INVc);
    RecordField(Spec,M4Str,100,0);
    RecordField(Group,M4Code,5,ITVc);
    RecordField(DispGroups,M4Str,100,DIVc);
    RecordField(MachineName,M4Code,20,0);
    RecordField(Quant,M4UVal,0,0);
    RecordField(FIFO,M45Val,0,0);
    RecordField(Sum,M4Val,0,0);

    MainKeyBegin(SerNr,0);
    KeySegment(SerNr);
    KeyBegin(IVNr);
    KeySegment(IVNr);
    KeySegment(SerNr);
    KeyBegin(TransDate);
    KeySegment(TransDate);
    KeySegment(MachineName);
    KeySegment(Group);
    KeySegment(ArtCode);
    KeySegment(SerNr);
    KeyBegin(Group);
    KeySegment(Group);
    KeySegment(ArtCode);
    KeySegment(TransDate);
    KeySegment(MachineName);
    KeySegment(SerNr);
    KeyBegin(DispGroups);
    KeySegment(DispGroups);
    KeySegment(ArtCode);
    KeySegment(TransDate);
    KeySegment(MachineName);
    KeySegment(SerNr);
    KeyBegin(MachineName);
    KeySegment(MachineName);
    KeySegment(Group);
    KeySegment(ArtCode);
    KeySegment(TransDate);
    KeySegment(SerNr);
  EndRecord;

  RecordBegin(CoinPackListVc,-,"coinpacklist"); //Edit***************************Sasha2,12:07 01.07.2016 {
    RecordField(SerNr,M4Long,0,0);
    RecordField(FileName,M4Str,200,0);
    RecordField(ImpDate,M4Date,0,0);
    RecordField(ImpTime,M4Time,0,0);
    RecordField(TransDate,M4Date,0,0); //Date of document
    RecordField(Handled,M4Mark,0,0); //packlist is handled for "Management of goods" and closed
    RecordField(RecordType,M4Str,5,0); //DT or PK
    RecordField(StoreID,M4Str,5,0) //Store number (deliverer)
    RecordField(StoreID2,M4Str,5,0); //Store number (receiver).
    RecordField(TransportBill,M4Str,10,0); //delivery number
    RecordField(TransportBillDate,M4Str,10,0); //delivery date
    RecordField(RowNumber,M4Str,5,0);
    RecordField(Deliverer,M4Str,70,0);
    RecordField(Recipient,M4Str,70,0);
    RecordField(Importer,M4Str,70,0);
    RecordField(OviesseVATnum,M4Str,15,0);
    RecordField(GoodsCollAddress,M4Str,95,0);
    //
    RecordField(PalletCode,M4Str,15,0); //for flat goods only
    RecordField(DistribNum,M4Str,10,0); //Oviesse/Coin incoming goods number. <>0 only for flat goods
    RecordField(PackGroupNum,M4Str,10,0); //for flat goods only; this value is present on the printable version of Packing List after the word PRG. This is the same number you find in the PK records
    RecordField(NumOfPackages,M4Str,10,0);
    RecordField(SKUNumber,M4Str,10,0); //(link to EANList.xls file)
    RecordField(ItemDescription,M4Str,55,0);
    RecordField(ItemComposition,M4Str,80,0);
    RecordField(GenderDescription,M4Str,10,0);
    RecordField(Fabric,M4Str,10,0);
    RecordField(CountryOfOrigin,M4Str,5,0);
    RecordField(CustomsCode,M4Str,10,0);
    RecordField(Quantity,M4Str,10,0);
    RecordField(GlobGrossWeight,M4Str,15,0); //Expressed in kilograms. This is the Unit Gross Weight multiplied by quantity
    RecordField(GlobNetWeight,M4Str,15,0); //Expressed in kilograms
    RecordField(UnitCostPrice,M4Str,15,0); //This is the same price used to create the invoice.
    RecordField(ExtraUE,M4Str,5,0); //S = U.E.; N= Extra U.E.
    RecordField(ItalCustCode,M4Str,10,0);
    RecordField(UnitGrossWeight,M4Str,15,0); //Expressed in kilograms. This is the gross weight calculated adding the gross weight of one item (composed by the weight of hook and nylon, for example) and the weight of the box divided by the number of items contained in it; consequently this value may change depending on how many items are in one box and on the type of box
    RecordField(CostCurCode,M4Str,5,0); //ISO currency code
    RecordField(InvoiceNum,M4Str,10,0);
    RecordField(InvoiceDate,M4Str,10,0);
    RecordField(EAN,M4Str,15,0); //(link to EANList.xls file)
    RecordField(OtherPalletCodes,M4Str,15,0);
    MainKeyBegin(SerNr,0);
    KeySegment(SerNr);
    KeyBegin(FileName);
    KeySegment(FileName);
    KeySegment(SerNr);
    KeyBegin(TransDate);
    KeySegment(TransDate);
    KeySegment(SerNr);
    KeyBegin(ImpDate);
    KeySegment(ImpDate);
    KeySegment(SerNr);
    KeyBegin(TransportBill);
    KeySegment(TransportBill);
    KeySegment(SerNr);
    KeyBegin(EAN);
    KeySegment(EAN);
    KeySegment(SerNr);
  EndRecord; //Edit***************************Sasha2,12:07 01.07.2016 }
  
  
  RecordBegin(MyRebVc,-,"");
	  RecordField(Code,M4Code,5,0);
	  RecordField(Comment,M4Str,60,0);
	  RecordField(StaffCode,M4Code,5,0);
	  RecordField(Math,M4Matrix,0,0);
	  RecordField(vra0,M41Val,0,0);
	  RecordField(vra1,M41Val,0,0);
	  RecordField(vra2,M41Val,0,0);
	  RecordField(vra3,M41Val,0,0);
	  RecordField(vra4,M41Val,0,0);
	  RecordField(vra5,M41Val,0,0);
	  RecordField(vra6,M41Val,0,0);
	  RecordField(vra7,M41Val,0,0);
	  RecordField(vra8,M41Val,0,0);
	  RecordField(vra9,M41Val,0,0);
	  RecordField(DiscAcc,M4Str,10,AccVc);
	  RecordField(DiscPerc,M4Qty,0,0);
	  RecordField(VATCode,M4Str,10,VATCodeBlock);
	  RecordField(FromDate,M4Date,0,0);
	  RecordField(ToDate,M4Date,0,0);
	  RecordField(Replaces,M4Code,5,RebVc);
	  RecordField(FromTime,M4Time,0,0);
	  RecordField(ToTime,M4Time,0,0);
		RecordField(Object,M4Str,255,0);  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 17:31 26.06.2019
		RecordField(Locations,M4UStr,255,0);
		
	  ArrayBegin(Math,-,1);
	  ArrayField(ITCode,M4Code,20,/*ITVc*/INVc);
	  ArrayField(StaffCode,M4Code,5,0);
	  ArrayField(vra0,M41Val,0,0);
	  ArrayField(vra1,M41Val,0,0);
	  ArrayField(vra2,M41Val,0,0);
	  ArrayField(vra3,M41Val,0,0);
	  ArrayField(vra4,M41Val,0,0);
	  ArrayField(vra5,M41Val,0,0);
	  ArrayField(vra6,M41Val,0,0);
	  ArrayField(vra7,M41Val,0,0);
	  ArrayField(vra8,M41Val,0,0);
	  ArrayField(vra9,M41Val,0,0);
	  ArrayField(CodeType,M4Set,14,0);
		ArrayField(MtObject,M4Str,255,0);
	  EndArray;
	  MainKeyBegin(Code,0);
	  KeySegment(Code);
	  KeySegment(FromDate);
	  KeyBegin(Replaces);
	  KeySegment(Replaces);
	  KeySegment(FromDate);
	  KeySegment(Code);
	  KeyBegin(ToDate);
	  KeySegment(Replaces);
	  KeySegment(ToDate);
	  KeySegment(Code);
	  KeySegment(FromDate);
  EndRecord;
	
	
	
	
	RecordBegin(OnePOneRebVc,-,"");
	  RecordField(SerNr,M4Long,0,0);
	  RecordField(Comment,M4Str,255,0);
	  RecordField(Math,M4Matrix,0,0);
	  RecordField(vra0,M41Val,0,0);
	  RecordField(vra1,M41Val,0,0);
	  RecordField(vra2,M41Val,0,0);
	  RecordField(vra3,M41Val,0,0);
	  RecordField(vra4,M41Val,0,0);
	  RecordField(vra5,M41Val,0,0);
	  RecordField(vra6,M41Val,0,0);
	  RecordField(vra7,M41Val,0,0);
	  RecordField(vra8,M41Val,0,0);
	  RecordField(vra9,M41Val,0,0);
		RecordField(vra10,M41Val,0,0);
	  RecordField(FromDate,M4Date,0,0);
	  RecordField(ToDate,M4Date,0,0);
		RecordField(Recalcf,M4Int,0,0);
	  ArrayBegin(Math,-,1);
	  ArrayField(FirstItmCode,M4Code,100,0);
	  ArrayField(SecondItmCode,M4Code,100,0);
		ArrayField(OPORebTableSerNr,M4Long,0,0);
		ArrayField(PairsumPrice,M41Val,0,0);
		ArrayField(AssembledItmCode,M4Code,100,0);
	  EndArray;
	  MainKeyBegin(SerNr,0);
	  KeySegment(SerNr);
	  KeySegment(FromDate);
		KeySegment(ToDate);
	  KeyBegin(FromDate);
	  KeySegment(FromDate);
	  KeySegment(ToDate);
		KeySegment(SerNr);
		KeyBegin(ToDate);
	  KeySegment(ToDate);
	  KeySegment(FromDate);
		KeySegment(SerNr);
  EndRecord;
	
	
	
  

  RecordBegin(CoinEANCodeVc,-,"CoinEAN_New");//Edit-------------------Vitalii 12:08 01.07.2016
    RecordField(SerNr,M4Long,0,0);
    RecordField(FileName,M4Str,100,0);
    RecordField(ImpDate,M4Date,0,0);
    RecordField(ImpTime,M4Time,0,0);
    RecordField(TransDate,M4Str,15,0);
    RecordField(ProcedureName,M4Str,15,0);
    RecordField(Action,M4Str,5,0);
    RecordField(ItemNumber,M4Str,15,0);
    RecordField(Size,M4Str,10,0);
    RecordField(SizeDescription,M4Str,10,0);
    RecordField(SKUNumber,M4Str,15,0);
    RecordField(EANNumber,M4Str,20,0);
    
    RecordField(ItCustCode,M4Str,10,0);
    RecordField(CustGend,M4Str,1,0);
    RecordField(CustGendDesc,M4Str,15,0);
    RecordField(EurSize,M4Str,10,0);
    RecordField(Filer1,M4Str,4,0);
    RecordField(Filer2,M4Str,7,0);
    RecordField(USSize,M4Str,10,0);
    RecordField(Filer3,M4Str,10,0);
    RecordField(MexSize,M4Str,10,0);
    RecordField(SizeKG,M4Str,15,0);
    RecordField(LocSize1,M4Str,10,0);
    RecordField(LocSize2,M4Str,10,0);
    RecordField(ChiSize,M4Str,25,0);
    RecordField(SizeCm,M4Str,25,0);
    RecordField(SizeInch,M4Str,25,0);

    MainKeyBegin(SerNr,0);
    KeySegment(SerNr);
    KeyBegin(FileName);
    KeySegment(FileName);
    KeySegment(SerNr);
    KeyBegin(ImpDate);
    KeySegment(ImpDate);
    KeySegment(ImpTime);
    KeySegment(SerNr);
    KeyBegin(TransDate);
    KeySegment(TransDate);
    KeySegment(SerNr);
    KeyBegin(ItemNumber);
    KeySegment(ItemNumber);
    KeySegment(SerNr);
    KeyBegin(SKUNumber);
    KeySegment(SKUNumber);
    KeySegment(SerNr);
    KeyBegin(EANNumber);
    KeySegment(EANNumber);
    KeySegment(SerNr);
  EndRecord;

  //Edit-------------------Vitalii 14:14 01.07.2016
  RecordBegin(CoinItemListVc,-,"CoinItemList_New");
    RecordField(SerNr,M4Long,0,0);
    RecordField(ImpDate,M4Date,0,0);												//Real ReciveDate
    RecordField(ImpTime,M4Time,0,0);												//Real ReciveDate
    RecordField(TransDate,M4Str,10,0);                      //Date from header
    RecordField(FileName,M4Str,50,0);                       //ImporFileName
    RecordField(ProcName,M4Str,10,0);												//Identification of file content ITEMLIST
    RecordField(Action,M4Str,5,0);												  //A/U "Add/Update - The first time we send you a new item we send an ""A"" in the ""action"" flag for the item and its barcodes.If we change something to the item (e.g.. description, department, etc.) we will send you again the item; in this case the the ""action"" flag will contain a ""U""."
    RecordField(ItemNumber,M4Str,10,0);										  //9 digit number (pls. see EANList.xls)
    RecordField(ItemDescription,M4Str,50,0);
    RecordField(GoodsType,M4Str,10,0);										  //Link to Oviesse/Coin
    RecordField(Colour,M4Str,30,0);
    RecordField(Composition,M4Str,80,0);
    RecordField(VATCode,M4Str,5,0);					                //VAT code; only for stores belonging to the Joint Venture
    RecordField(FunctionFamilyDescription,M4Str,30,0);
    RecordField(SubdepartmentCode,M4Str,5,0);					      //Oviesse/Coin Classification: sub-department number
    RecordField(SubdepartmentDescription,M4Str,30,0);
    RecordField(DepartmentCode,M4Str,5,0);					        //Oviesse/Coin classification:  department number
    RecordField(DepartmentDescription,M4Str,30,0);
    RecordField(SeasonCodeGarmentWeight,M4Str,5,0);					//06' = Spring; '12' = Summer; '13' = Spring/Summer; '15' = Authumn/Winter; '18' = Christmas; '19' = White Fair; '20' = Summer White Fair; '30'= All Year (Basic goods); 40 = No Weight; '42' = Light Weight; '45' = Heavy Weight; '46' = Medium Weight; '50' = No Weight; '52' = Light Weight; '55' =  Heavy Weight; '56' = Medium Weight
    RecordField(SeasonDescription,M4Str,30,0);
    RecordField(Gender,M4Str,5,0);					                //D' = Ladies' , 'U' = Men's, 'B' = Babies', blank=Other
    RecordField(GenderDescription,M4Str,20,0);
    RecordField(CountryOfOrigin,M4Str,5,0);					        //ISO country code
    RecordField(PriceValidityStartDate,M4Str,10,0);					//year(4)-month-day, effective date of price
    RecordField(CurrencyCode1,M4Str,5,0);					          //your retail price currency - ISO code
    RecordField(RetailPrice1,M4Str,15,0);					          //9,2 - Your retail price  (VAT included)
    RecordField(CurrencyCode2,M4Str,5,0);					          //Italian retail price currency - ISO code
    RecordField(RetailPrice2,M4Str,15,0);					          //9,2 - Italian retail price (VAT included)
    RecordField(VAT,M4Str,10,0);					                  //3.2
    RecordField(CustomsDescriptionOfGoods,M4Str,5,0);				//Link to Oviesse/Coin Classification
    RecordField(CompositionCodeOld,M4Str,5,0);					    //Link to Composition file
    RecordField(Year,M4Str,5,0);
    RecordField(CategoryCode,M4Str,5,0);					          //Oviesse/Coin classification
    RecordField(CategoryDescription,M4Str,30,0);
    RecordField(ColourstoryPromoCoordination1,M4Str,5,0);   //prefix
    RecordField(ColourstoryPromoCoordination2,M4Str,25,0);	//code
    RecordField(ColourstoryPromoCoordination3,M4Str,30,0);	//description
    RecordField(CommercialReference,M4Str,20,0);					  //Colourstory/Promo/Coordination code printed on the labels
    RecordField(FunctionFamilyCode,M4Str,10,0);					    //Oviesse/Coin Classification: product family number
    RecordField(SizeGroupCode1,M4Str,5,0);					        //future use
    RecordField(SizeGroupCode2,M4Str,5,0);					        //future use
    RecordField(ItalianCustomsCode,M4Str,10,0);
    RecordField(NetWeight,M4Str,15,0);					            //8.3
    RecordField(GrossWeight,M4Str,15,0);					          //8.3
    RecordField(KnittedWoven,M4Str,5,0);					          //M=Knitted, T=Woven, blank=Other
    RecordField(Kit,M4Str,10,0);					                  //future use (minimum size assorted pack)
    RecordField(LocalMonth,M4Str,10,0);					            //planned in store month
    RecordField(CompositionCode,M4Str,10,0);					      //Link to Composition file
    RecordField(ItemMaster,M4Str,10,0);					            //9 digit number; future use
    RecordField(DateReleaseForSale,M4Str,10,0);					    //year(4)-month-day; future use
    RecordField(Period,M4Str,5,0);					                //future use
    RecordField(BrandCode,M4Str,5,0);					              //4 digit number; future use
    RecordField(BrandDescription,M4Str,30,0);					      //future use
    RecordField(UnitCostPrice,M4Str,20,0);					        //9,6;  only for stores belonging to the Joint Venture; spaces for all the other stores
    RecordField(CostPrice1Cur,M4Str,3,0);										//Italian currency - ISO code EUR' (always)
    RecordField(ECostPrice1,M4Str,15,0);										//Estimated cost price 1 It is the estimated invoice cost (Italian currency) - 9,6
    RecordField(CostPrice2Cur,M4Str,3,0);										//local currency
    RecordField(ECostPrice2,M4Str,15,0);										//Estimated cost price 2	It is the estimated invoice cost in local currency (exchange rate of the day)
    RecordField(IMDescription,M4Str,25,0);									//Item master description
    RecordField(SegmCode,M4Str,4,0);												//Segment code
    RecordField(SegmDesc,M4Str,25,0);												//Segment description
    RecordField(SuppIDesc,M4Str,25,0);											//Supplier's item description

    MainKeyBegin(SerNr,0);
    KeySegment(SerNr);
    KeyBegin(FileName);
    KeySegment(FileName);
    KeySegment(SerNr);
    KeyBegin(ImpDate);
    KeySegment(ImpDate);
    KeySegment(ImpTime);
    KeySegment(SerNr);
    KeyBegin(TransDate);
    KeySegment(TransDate);
    KeySegment(SerNr);
    KeyBegin(ItemNumber);
    KeySegment(ItemNumber);
    KeySegment(SerNr);
    KeyBegin(GoodsType);
    KeySegment(GoodsType);
    KeySegment(SerNr);
    KeyBegin(CustomsDescriptionOfGoods);
    KeySegment(CustomsDescriptionOfGoods);
    KeySegment(SerNr);
    KeyBegin(CompositionCode);
    KeySegment(CompositionCode);
    KeySegment(SerNr);
    KeyBegin(BrandCode);
    KeySegment(BrandCode);
    KeySegment(SerNr);
  EndRecord;

  RecordBegin(CoinPackListHistVc,-,"coinpacklisthistry"); //Edit***************************Sasha2,12:07 01.07.2016 {
    RecordField(SerNr,M4Long,0,0);
    RecordField(FileName,M4Str,200,0);
    RecordField(ImpDate,M4Date,0,0);
    RecordField(TransDate,M4Date,0,0); //Date of document
    RecordField(Handled,M4Mark,0,0); //packlist is handled for "Management of goods" and closed
    RecordField(TransportBill,M4Str,10,0); //delivery number
    RecordField(TransportBillDate,M4Str,10,0); //delivery date
    RecordField(ReceiverStoreID,M4Str,5,0);
    MainKeyBegin(SerNr,0);
    KeySegment(SerNr);
    KeyBegin(FileName);
    KeySegment(FileName);
    KeySegment(SerNr);
    KeyBegin(TransDate);
    KeySegment(TransDate);
    KeySegment(SerNr);
    KeyBegin(ImpDate);
    KeySegment(ImpDate);
    KeySegment(SerNr);
    KeyBegin(TransportBill);
    KeySegment(TransportBill);
    KeySegment(SerNr);
  EndRecord; //Edit***************************Sasha2,12:07 01.07.2016 }

  RecordBegin(CoinMissingEANVc,-,"CoinMissEAN_New");//Edit-------------------Vitalii 16:27 13.07.2016
    RecordField(SerNr,M4Long,0,0);
    RecordField(FileName,M4Str,100,0);
    RecordField(ImpDate,M4Date,0,0);
    RecordField(ImpTime,M4Time,0,0);
    RecordField(TransDate,M4Str,15,0);
    RecordField(StoreID,M4Str,10,0);
    RecordField(Math,M4Matrix,0,0);
    ArrayBegin(Math,-,1);
    ArrayField(EANNumber,M4Str,20,0);
    EndArray;

    MainKeyBegin(SerNr,0);
    KeySegment(SerNr);
    KeyBegin(FileName);
    KeySegment(FileName);
    KeySegment(SerNr);
    KeyBegin(ImpDate);
    KeySegment(ImpDate);
    KeySegment(ImpTime);
    KeySegment(SerNr);
    KeyBegin(TransDate);
    KeySegment(TransDate);
    KeySegment(SerNr);
    KeyBegin(StoreID);
    KeySegment(StoreID);
    KeySegment(SerNr);
  EndRecord;

  RecordBegin(CoinItemGoodsDecriptVc,-,"coinitemgoodsdecr"); //Edit***************************Sasha2,14:35 27.07.2016
    RecordField(SerNr,M4Long,0,0);
    RecordField(ImpDate,M4Date,0,0);												//Real ReciveDate
    RecordField(ImpTime,M4Time,0,0);												//Real ReciveDate
    RecordField(TransDate,M4Str,10,0);                      //Date from header
    RecordField(FileName,M4Str,50,0);                       //ImporFileName
    RecordField(CustomsDescriptionOfGoods,M4Str,5,0);				//Link to CoinItemListVc
    RecordField(Description,M4Str,100,0);

    MainKeyBegin(SerNr,0);
    KeySegment(SerNr);
    KeyBegin(FileName);
    KeySegment(FileName);
    KeySegment(SerNr);
    KeyBegin(ImpDate);
    KeySegment(ImpDate);
    KeySegment(ImpTime);
    KeySegment(SerNr);
    KeyBegin(TransDate);
    KeySegment(TransDate);
    KeySegment(SerNr);
    KeyBegin(CustomsDescriptionOfGoods);
    KeySegment(CustomsDescriptionOfGoods);
    KeySegment(SerNr);
  EndRecord;

  RecordBegin(CoinComposDecriptVc,-,"coincomposdecr"); //Edit***************************Sasha2,14:35 27.07.2016
    RecordField(SerNr,M4Long,0,0);
    RecordField(ImpDate,M4Date,0,0);	       //Real ReciveDate
    RecordField(ImpTime,M4Time,0,0);			   //Real ReciveDate
    RecordField(TransDate,M4Str,10,0);       //Date from header
    RecordField(FileName,M4Str,50,0);        //ImporFileName
    RecordField(CompositionCode,M4Str,10,0); //Link to Item List
    RecordField(Description,M4Str,100,0);

    MainKeyBegin(SerNr,0);
    KeySegment(SerNr);
    KeyBegin(FileName);
    KeySegment(FileName);
    KeySegment(SerNr);
    KeyBegin(ImpDate);
    KeySegment(ImpDate);
    KeySegment(ImpTime);
    KeySegment(SerNr);
    KeyBegin(TransDate);
    KeySegment(TransDate);
    KeySegment(SerNr);
    KeyBegin(CompositionCode);
    KeySegment(CompositionCode);
    KeySegment(SerNr);
  EndRecord;

  RecordBegin(CoinGoodsTypesVc,-,"coingoodstypes"); //Edit***************************Sasha2,14:35 27.07.2016
    RecordField(SerNr,M4Long,0,0);
    RecordField(ImpDate,M4Date,0,0);	       //Real ReciveDate
    RecordField(ImpTime,M4Time,0,0);			   //Real ReciveDate
    RecordField(TransDate,M4Str,10,0);       //Date from header
    RecordField(FileName,M4Str,50,0);        //ImporFileName
    RecordField(GoodsType,M4Str,10,0);       //Link to Item List
    RecordField(Description,M4Str,100,0);

    MainKeyBegin(SerNr,0);
    KeySegment(SerNr);
    KeyBegin(FileName);
    KeySegment(FileName);
    KeySegment(SerNr);
    KeyBegin(ImpDate);
    KeySegment(ImpDate);
    KeySegment(ImpTime);
    KeySegment(SerNr);
    KeyBegin(TransDate);
    KeySegment(TransDate);
    KeySegment(SerNr);
    KeyBegin(GoodsType);
    KeySegment(GoodsType);
    KeySegment(SerNr);
  EndRecord;

  RecordBegin(CoinPriceChangesVc,-,"coinpricechanges"); //Edit***************************Sasha2,14:35 27.07.2016
    RecordField(SerNr,M4Long,0,0);
    RecordField(ImpDate,M4Date,0,0);	       //Real ReciveDate
    RecordField(ImpTime,M4Time,0,0);			   //Real ReciveDate
    RecordField(TransDate,M4Str,10,0);       //Date from header
    RecordField(FileName,M4Str,50,0);        //ImporFileName
    RecordField(ItemNumber,M4Str,10,0);      //Link to Item List
    RecordField(PriceStartDate,M4Str,10,0);  //year(4)-month-day, effective date of price
    RecordField(CurCode1,M4Str,5,0);         //your retail price currency - ISO code
    RecordField(NewRetailPrice1,M4Str,15,0); //
    RecordField(CurCode2,M4Str,5,0);         //our retail price currency - ISO code
    RecordField(NewRetailPrice2,M4Str,15,0); //
    RecordField(CurCode3,M4Str,5,0);         //your retail price currency - ISO code
    RecordField(OldRetailPrice,M4Str,15,0);  //
    RecordField(Causal,M4Str,5,0);           //only for e-commerce
    RecordField(CausalDescript,M4Str,100,0); //only for e-commerce
    RecordField(AddField,M4Str,15,0);        //no description

    MainKeyBegin(SerNr,0);
    KeySegment(SerNr);
    KeyBegin(FileName);
    KeySegment(FileName);
    KeySegment(SerNr);
    KeyBegin(ImpDate);
    KeySegment(ImpDate);
    KeySegment(ImpTime);
    KeySegment(SerNr);
    KeyBegin(TransDate);
    KeySegment(TransDate);
    KeySegment(SerNr);
    KeyBegin(ItemNumber);
    KeySegment(ItemNumber);
    KeySegment(SerNr);
  EndRecord;

 	RecordBegin(PhoneVc,-,"PhoneVc_New");//Edit-------------------Vitalii 17:10 03.11.2016
    RecordField(PhoneNum,M4Str,50,0);
    RecordField(CUCode,M4Str,100,0);

    MainKeyBegin(PhoneNum,0);
    KeySegment(PhoneNum);
    KeySegment(CUCode);
    KeyBegin(CUCode);
    KeySegment(CUCode);
    KeySegment(PhoneNum);
  EndRecord;

  RecordBegin(LCCashbackLevelVc,-,"LCCBLevel_New"); //Edit***************************Sasha2,11:42 07.07.2017
    RecordField(LCMLevel,M4Code,10,0);
    RecordField(Comment,M4Str,255,0);
    RecordField(PromStrDate,M4Date,0,0);
    RecordField(PromEndDate,M4Date,0,0);
    RecordField(RndTo,M4Set,70,0);
    RecordField(Math,M4Matrix,0,0);
    ArrayBegin(Math,-,1);
    ArrayField(FromPoints,M4UVal,0,0);
    ArrayField(ToPoints,M4UVal,0,0);
    //ArrayField(LCMLevel,M4Code,10,0);
    ArrayField(CashbackPercent,M4UVal,0,0);
    EndArray;

    MainKeyBegin(LCMLevel,0);
    KeySegment(LCMLevel);
  EndRecord;

  RecordBegin(LCCashbackCorrectionVc,-,"LCCBCorr_New"); //Edit***************************Sasha2,14:25 13.07.2017
    RecordField(SerNr,M4Long,0,0);
    RecordField(LCMLevel,M4Code,10,0);
    RecordField(Comment,M4Str,60,0);
    RecordField(FromDate,M4Date,0,0);
    RecordField(ToDate,M4Date,0,0);
    RecordField(FromTime,M4Time,0,0);
    RecordField(ToTime,M4Time,0,0);
    RecordField(RndTo,M4Set,70,0);
    RecordField(CustomerPercentLevel,M4UVal,0,0);
    RecordField(Math,M4Matrix,0,0);
    RecordField(CashbackPercent,M4UVal,0,0);
    ArrayBegin(Math,-,1);
    ArrayField(CodeType,M4Set,14,0);
    ArrayField(ITCode,M4Code,20,ITVc);
    ArrayField(CashbackPercent,M4UVal,0,0);
    EndArray;

    MainKeyBegin(SerNr,0);
    KeySegment(SerNr);
    KeyBegin(LCMLevel);
    KeySegment(LCMLevel);
    KeySegment(CustomerPercentLevel);
    KeySegment(FromDate);
    KeySegment(SerNr);
    KeyBegin(ToDate);
    KeySegment(LCMLevel);
    KeySegment(CustomerPercentLevel);
    KeySegment(ToDate);
    KeySegment(SerNr);
  EndRecord;

  BlockBegin(BirthdayRebateBlock,-,"");// Edit ************************** Tuesday, 11 July 2017 13:55:43
		RecordField(PrcRebate,M4Val,0,0);
		RecordField(AbsRebate,M4Val,0,0);
		RecordField(RebCode,M4Val,0,0);
		RecordField(DayBefore,M4Int,0,0);
		RecordField(DayAfter,M4Int,0,0);
  EndBlock;

  BlockBegin(RebTableBlock,-,"");
    RecordField(Math,M4Matrix,0,0);
    ArrayBegin(Math,-,1);
    ArrayField(Days,M4Int,0,0);
    ArrayField(RebCode,M4Code,5,0);
    EndArray;
  EndBlock;
  
  BlockBegin(NewRebTableBlock,-,"");
    RecordField(Math,M4Matrix,0,0);
    ArrayBegin(Math,-,1);
    ArrayField(Days,M4Int,0,0);
    ArrayField(RebCode,M4Code,5,0);
    EndArray;
  EndBlock;

  BlockBegin(PLHistSetBlock,-,"");
		RecordField(DoHist,M4Int,0,0);
  EndBlock;

  BlockBegin(NPTSNewCUFieldsBlock,-,"");
    RecordField(Math,M4Matrix,0,0);
    ArrayBegin(Math,-,1);
    ArrayField(FieldName,M4Str,100,0);
    ArrayField(EditState,M4Set,510,0);
    ArrayField(FieldComment,M4Str,100,0)
    EndArray;
  EndBlock;

  BlockBegin(WebSyncBlock,-,""); //Edit***************************Sasha2,10:34 09.01.2015 {
    RecordField(Items1,M4Long,0,0);
    RecordField(ItemsTemp1,M4Long,0,0);
    RecordField(Brands1,M4Long,0,0);
    RecordField(BrandsTemp1,M4Long,0,0);
    RecordField(Types1,M4Long,0,0);
    RecordField(TypesTemp1,M4Long,0,0);
    RecordField(Items2,M4Long,0,0);
    RecordField(ItemsTemp2,M4Long,0,0);
    RecordField(Brands2,M4Long,0,0);
    RecordField(BrandsTemp2,M4Long,0,0);
    RecordField(Types2,M4Long,0,0);
    RecordField(TypesTemp2,M4Long,0,0);
    RecordField(Collections1,M4Long,0,0);
    RecordField(CollectionsTemp1,M4Long,0,0);
    RecordField(Collections2,M4Long,0,0);
    RecordField(CollectionsTemp2,M4Long,0,0);
  EndBlock; //Edit***************************Sasha2,10:35 09.01.2015 }

  BlockBegin(ZebraPrinterBlock,-,""); //Edit***************************Sasha2,11:36 15.07.2015 {
    BlockForAllCompanies;
    RecordField(PrinterNameMac,M4Str,200,0);
    RecordField(ParamIn1,M4Int,0,0);
    RecordField(ParamIn2,M4Int,0,0);
    RecordField(CompNameWin,M4Str,200,0);
    RecordField(PrinterNameWin,M4Str,200,0);
    RecordField(ParamStr3,M4Str,200,0);
    RecordField(ParamStr4,M4Str,200,0);
    RecordField(ParamVal1,M4Val,0,0);
    RecordField(ParamVal2,M4Val,0,0);
  EndBlock; //Edit***************************Sasha2,11:36 15.07.2015 }

  BlockBegin(DiCheckBlock,-,""); //Edit***************************Sasha2,12:13 02.11.2015 {
    RecordField(Math,M4Matrix,0,0);
    ArrayBegin(Math,OTCheckRowType,1);
    ArrayField(DiCode,M4Code,10,0);
    ArrayField(DiType,M4Str,255,0);
    EndArray;
  EndBlock; //Edit***************************Sasha2,12:13 02.11.2015 }
	
	
	BlockBegin(OSDSerialBock,-,""); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 17:18 01.10.2018
    RecordField(Math,M4Matrix,0,0);
    ArrayBegin(Math,-,1);
    ArrayField(FrNr,M4Code,30,0);
    ArrayField(ToNr,M4Code,30,0);
		ArrayField(CurNr,M4Code,30,0);
		ArrayField(Description,M4Str,255,0);
    EndArray;
  EndBlock; //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 17:18 01.10.2018

  BlockBegin(CoinSettingsBlock,-,"");
    RecordField(ClientCode,M4Int,0,0);
    RecordField(Locations,M4Str,255,0);
    RecordField(inDir,M4Str,255,0);
    RecordField(outDir,M4Str,255,0);
    RecordField(inDirBackUp,M4Str,255,0);
    RecordField(outDirBackUp,M4Str,255,0);
    RecordField(LastPackageEANNum,M4Str,15,0); //Edit***************************Sasha2,15:41 02.08.2016
    RecordField(outDirBackUp2,M4Str,255,0); //Edit***************************Sasha2,17:08 13.09.2016
    RecordField(LastMNDate,m4Date,0,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Wednesday, 29 November 2017 10:36:37
	RecordField(ClientCodeStr,M4Str,255,0);
  EndBlock;

  RecordBegin(ShopCoefVc,-,"");//Edit-------------------Vitalii 16:27 11.08.2017
		RecordField(Shop,M4Code,10,0);
		RecordField(Date,M4Date,0,0);
		RecordField(Coef,M4Val,0,0);
		MainKeyBegin(ShopDate,0);
		KeySegment(Shop);
		KeySegment(Date);
		KeyBegin(DateShop);
		KeySegment(Date);
		KeySegment(Shop);
  EndRecord;

  RecordBegin(ShopCoef2Vc,-,"");//Edit-------------------Vitalii 15:16 09.10.2017
  RecordField(Shop,M4Code,20,0);
  RecordField(Date,M4Date,0,0);
  RecordField(Coef,M4Val,0,0);
  MainKeyBegin(ShopDate,0);
  KeySegment(Shop);
  KeySegment(Date);
  KeyBegin(DateShop);
  KeySegment(Date);
  KeySegment(Shop);
  EndRecord;

  BlockBegin(MegaBalanceBlock,-,"");
    RecordField(Math,M4Matrix,0,0);
    ArrayBegin(Math,-,1);
    ArrayField(Brand,M4Code,50,0);
    EndArray;
  EndBlock;
	
	BlockBegin(MaxNumGiftBlock,-,"");//Edit_________________ABR 22.10.18 09.47
    RecordField(Count,M4Int,0,0);
  EndBlock;

	
	RecordBegin(CompObjVc,-,"");//Edit_________________ABR 13.11.18 09.47
		RecordField(Code,M4Code,20,0);
		RecordField(Comment,M4Str,255,0);
    RecordField(Math,M4Matrix,0,0);
		ArrayBegin(Math,-,1);
    ArrayField(Company,M4Int,0,0);
		ArrayField(Object,M4Code,50,0);
    EndArray;
		
  MainKeyBegin(Code,0);
  KeySegment(Code);
  EndRecord;
	
  RecordBegin(GlobalGiftVaucherVc,-,"");// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 29 January 2018 11:22:06
  RecordField(SerNr,M4Long,0,0);
  RecordField(BarCode,M4Code,50,0);
  RecordField(Program,M4Code,50,0);
  RecordField(Bal,M4Val,0,0);
  RecordField(TotBalance,M4Val,0,0);
  RecordField(StartDate,M4Date,0,0);
  RecordField(EndDate,M4Date,0,0);
 	RecordField(Closed,M4Mark,0,0);
  RecordField(Math,M4Matrix,0,0);
  RecordField(PinCode,M4Code,50,0);
  RecordField(CreateDate,M4Date,0,0);
  RecordField(Locations,M4Ustr,255,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 01, 16 09 2019 y. at 3:13:55 PM
  RecordField(OnceUsed,M4Mark,0,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 01, 16 09 2019 y. at 3:15:15 PM
  RecordField(Object,M4Code,50,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 04, 19 09 2019 y. at 10:14:09 AM
  RecordField(PayMode,M4Code,10,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 03, 04 12 2019 y. at 5:28:15 PM
  ArrayBegin(Math,-,1);
		ArrayField(CompNr,M4Int,0,0);
		ArrayField(InvoiceNr,M4Long,0,0);
		ArrayField(Sum,M4Val,0,0);
		ArrayField(Location,M4Str,100,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 01, 16 09 2019 y. at 3:14:25 PM
	EndArray;

  MainKeyBegin(SerNr,0);
  KeySegment(SerNr);
  KeyBegin(BarCode);
  KeySegment(BarCode);
  KeySegment(Program);
  KeySegment(SerNr);
  KeyBegin(CreateDate);
  KeySegment(CreateDate);
  KeySegment(SerNr);
  KeyBegin(StartDate);
  KeySegment(StartDate);
  KeySegment(SerNr);
  KeyBegin(EndDate);
  KeySegment(EndDate);
  KeySegment(SerNr);

  EndRecord;

  RecordBegin(TransCompVc,-,""); //Edit-------------------Vitalii 15:38 31.01.2018
  RecordField(Code,M4Code,10,0);
  RecordField(Name,M4Str,100,0);
  RecordField(Addr0,M4Str,255,0);
  RecordField(Addr1,M4Str,255,0);
  RecordField(Addr2,M4Str,255,0);
  RecordField(Addr3,M4Str,255,0);
  RecordField(Addr4,M4Str,255,0);
  RecordField(Addr5,M4Str,255,0);
  RecordField(CUCode,M4Code,20,CUVc);
  RecordField(CUName,M4Str,255,0);
  RecordField(CUPhone,M4PhoneNo,20,0);
  RecordField(CUeMail,M4Str,100,0);
  RecordField(ShipmScenarioCode,M4Code,20,ShipmScenarioVc);
  
  MainKeyBegin(Code,0);
  KeySegment(Code);
  KeyBegin(Name);
  KeySegment(Name);
  KeySegment(Code);
  KeyBegin(CUCode);
  KeySegment(CUCode);
  KeySegment(Code);
  KeyBegin(CUPhone);
  KeySegment(CUPhone);
  KeySegment(Code);
  KeyBegin(ShipmScenarioCode);
  KeySegment(ShipmScenarioCode);
  KeySegment(Code);
  EndRecord;
  
  
  RecordBegin(ShipmScenarioVc,-,"");
  RecordField(Code,M4Code,10,0);
  RecordField(Name,M4Str,100,0);
  
  MainKeyBegin(Code,0);
  KeySegment(Code);
  EndRecord;
  
  RecordBegin(ShipmTableVc,-,"");
  RecordField(Code,M4Code,10,0);
  RecordField(ShipmDate,M4Date,0,0);
  RecordField(ShipmScenarioCode,M4Code,10,ShipmScenarioVc);
  RecordField(ShipmNum,M4Str,255,0);
  RecordField(BrandCode,M4Code,20,ObjVc); // or DIVc
  RecordField(PONr,M4Str,255,0);
  RecordField(Packages,M4Val,0,0); // or M4Int
  RecordField(Weight,M4Val,0,0);
  RecordField(Sum,M4Val,0,0);
  RecordField(CurncyCode,M4Code,5,CurncyCodeVc);
  RecordField(InvSum,M4Val,0,0);
  RecordField(InvCur,M4Code,5,CurncyCodeVc);
  RecordField(Forwarder,M4Code,10,TransCompVc);
  RecordField(RespDivision,M4Str,100,0);
  RecordField(CountryOfLoad,M4Str,100,0); // ---------- ???????? type/register
  RecordField(Customs,M4Val,0,0);
  RecordField(ArrivalDate,M4Date,0,0);
  RecordField(Seal,M4Str,255,0);
  RecordField(Note,M4Str,255,0);
  RecordField(Shop,M4Code,20,ObjVc); // or DIVc
  RecordField(Invoice,M4Val,0,0);
  RecordField(ATA,M4Date,0,0);
  RecordField(Proforma,M4Str,100,0);
  RecordField(MFR,M4Str,100,0); // ---------- ???????? type
  RecordField(Box,M4Str,100,0); // ---------- ???????? type
  RecordField(Volume,M4Val,0,0);
  RecordField(Cost,M4Val,0,0);
  RecordField(CostCur,M4Code,5,CurncyCodeVc);
  RecordField(Request,M4Str,100,0);
  RecordField(TruckNum,M4Str,100,0);
  RecordField(Agent,M4Str,100,0);
  RecordField(ShipDate,M4Date,0,0);
  RecordField(ETA,M4Date,0,0);
  RecordField(PlateNum,M4Str,100,0);
  RecordField(Responsible,M4Str,100,0);
  RecordField(CargoDesc,M4Str,100,0);
  RecordField(WH,M4Str,100,0);
  RecordField(Comment,M4Str,255,0);
  
  MainKeyBegin(Code,0);
  KeySegment(Code);
  KeyBegin(ShipmDate);
  KeySegment(ShipmDate);
  KeySegment(Code);
  KeyBegin(ShipmScenarioCode);
  KeySegment(ShipmScenarioCode);
  KeySegment(Code);
  KeyBegin(BrandCode);
  KeySegment(BrandCode);
  KeySegment(Code);
  KeyBegin(PONr);
  KeySegment(PONr);
  KeySegment(Code);
  EndRecord;
  
  RecordBegin(ISRVc,-,"");
  RecordField(SerNr,M4Long,0,0);
  RecordField(TransDate,M4Date,0,0);
  RecordField(BrandCode,M4Code,20,ObjVc); // or DIVc
  RecordField(Status,M4Int,0,0);
  RecordField(StatusComment,M4Str,255,0);
  RecordField(Sum,M4Val,0,0);
  RecordField(CurncyCode,M4Code,5,CurncyCodeVc);
  RecordField(User,M4Code,10,UserVc);
  RecordField(ShipmScenarioCode,M4Code,10,ShipmScenarioVc);
  // ‘сылка на товары
  
  MainKeyBegin(SerNr,0);
  KeySegment(SerNr);
  KeyBegin(TransDate);
  KeySegment(TransDate);
  KeySegment(SerNr);
  KeyBegin(BrandCode);
  KeySegment(BrandCode);
  KeySegment(SerNr);
  KeyBegin(ShipmScenarioCode);
  KeySegment(ShipmScenarioCode);
  KeySegment(SerNr);
  EndRecord;
  
  RecordBegin(VirtTransportVc,-,"");
  RecordField(SerNr,M4Long,0,0);
  RecordField(PlanDate,M4Date,0,0);
  RecordField(ShipDate,M4Date,0,0);
  RecordField(InvSum,M4Val,0,0);
  RecordField(InvCur,M4Code,5,CurncyCodeVc);
  RecordField(Volume,M4Val,0,0);
  RecordField(Weight,M4Val,0,0);
  RecordField(ISRNr,M4Str,255,0);
  
  MainKeyBegin(SerNr,0);
  KeySegment(SerNr);
  KeyBegin(PlanDate);
  KeySegment(PlanDate);
  KeySegment(SerNr);
  KeyBegin(ShipDate);
  KeySegment(ShipDate);
  KeySegment(SerNr);
  KeyBegin(ISRNr);
  KeySegment(ISRNr);
  KeySegment(SerNr);
  EndRecord;
  
  RecordBegin(DWTRVc,-,"DWTRVc1");
  RecordField(Number,M4Long,0,0);
  SerialNoBlock(TRSerBlock);                
  RecordField(RegDate,M4Date,0,0);
  RecordField(Comment,M4Str,60,0);
  RecordField(TransDate,M4Date,0,0);
  FieldIsTransDate(TransDate);
  RecordField(Sign,M4Code,10,UserVc);
  RecordField(Math,M4Matrix,0,0);
  RecordField(DSum,M4Val,0,0);     // Not Exported, its a calculated field
  RecordField(CSum,M4NegVal,0,0);  // Not Exported, its a calculated field
  RecordField(DiffVal,M4Val,0,0);  // Not Exported, its a calculated field
  RecordField(RefStr,M4Str,60,0);
  RecordField(xMainf,M4Int,0,0);   // Not used
  RecordField(IntYc,M4Int,0,0);
  RecordField(xBalf,M4Int,0,0);    // Not used
  RecordField(Expf,M4Int,0,0);     // Not used
  RecordField(ExportedFlag,M4Int,0,0); // Not used
  RecordField(DSum2,M4Val,0,0);    // Not Exported, its a calculated field
  RecordField(CSum2,M4NegVal,0,0); // Not Exported, its a calculated field
  RecordField(Diff2Val,M4Val,0,0); // Not Exported, its a calculated field
  RecordField(LastChangeDate,M4Date,0,0);
  RecordField(FileName,M4Str,20,0);
  RecordField(TransNr,M4Long,0,0);  
  RecordField(SeqNr,M4Long,0,0);  
  RecordField(RegTime,M4Time,0,0);
  ArrayBegin(Math,TRRowType,1);
  ArrayField(stp,M4Int,0,0);
  ArrayField(ovst,M4Int,0,0);
  ArrayField(AccNumber,M4Code,10,AccVc);
  ArrayField(Objects,M4UStr,60,ObjVc);
  ArrayField(DebVal,M4Val,0,0);
  ArrayField(CredVal,M4Val,0,0);
  ArrayField(VATCode,M4List,100,VATCodeBlock);
  ArrayField(Qty,M4Val,0,0);
  ArrayField(CurDebVal,M4Val,0,0);
  ArrayField(CurCredVal,M4Val,0,0);
  ArrayField(ToRateB1,M4Rate,0,0);
  ArrayField(Comment,M4Str,60,0);
  ArrayField(Curncy,M4UStr,5,CurncyCodeVc);
  ArrayField(BRSerNr,M4Long,0,0);
  ArrayField(BRRowNr,M4Int,0,0);
  ArrayField(NomVal,M4Val,0,0);
  ArrayField(CompCode,M4Code,20,CUVc);
  ArrayField(Typ,M4Set,24,0);
  ArrayField(SerNr,M4Long,0,0);
  ArrayField(DueDate,M4Date,0,0);
  ArrayField(CorspSer,M4Long,0,0);
  ArrayField(UpdDate,M4Date,0,0);
  ArrayField(Sign,M4Code,10,UserVc);
  ArrayField(OldTransDate,M4Date,0,0);
  ArrayField(CorrNr,M4Long,0,0);
  ArrayField(CorrDate,M4Date,0,0);
  ArrayField(CorrYc,M4Int,0,0);
  ArrayField(Reconsf,M4Int,0,0);
  ArrayField(FrRate,M4Rate,0,0);
  ArrayField(ToRateB2,M4Rate,0,0);
  ArrayField(DebVal2,M4Val,0,0);
  ArrayField(CredVal2,M4Val,0,0);
  ArrayField(BaseRate1,M4Rate,0,0);
  ArrayField(BaseRate2,M4Rate,0,0);
  ArrayField(ACShort,M4Code,5,0);
  ArrayField(ReconCode,M4Code,5,0);
  ArrayField(TAccNumber,M4Code,10,TAccVc);
  ArrayField(TFromFileName,M4Str,20,0);
  ArrayField(TFromCode,M4Str,60,0);
  ArrayField(SAFTType,M4Set,492,0);
  ArrayField(ReconDate,M4Date,0,0);
  ArrayField(ExtraComment,M4Str,60,0);
  ArrayField(RvrsVATCode,M4Code,10,VATCodeBlock);
  // --------------custom--------------
  ArrayField(CustCode,M4Code,20,CUVc);
  ArrayField(MyVal1,M4Val,0,0);
  ArrayField(MyVal2,M4Val,0,0);
  ArrayField(MyVal3,M4Val,0,0);
  ArrayField(MyVal4,M4Val,0,0);
  ArrayField(MyVal5,M4Val,0,0);
  ArrayField(MyVal6,M4Val,0,0);
  ArrayField(MyVal7,M4Val,0,0);
  ArrayField(MyVal8,M4Val,0,0);
  ArrayField(MyVal9,M4Val,0,0);
  ArrayField(MyVal10,M4Val,0,0);
  ArrayField(MyVal11,M4Val,0,0);
  ArrayField(MyVal12,M4Val,0,0);
  ArrayField(MyVal13,M4Val,0,0);
  ArrayField(MyVal14,M4Val,0,0);
  ArrayField(MyVal15,M4Val,0,0);
  ArrayField(MyVal16,M4Val,0,0);
  ArrayField(MyVal17,M4Val,0,0);
  ArrayField(MyVal18,M4Val,0,0);
  ArrayField(MyVal19,M4Val,0,0);
  ArrayField(MyVal20,M4Val,0,0);
  ArrayField(MyVal21,M4Val,0,0);
  ArrayField(MyVal22,M4Val,0,0);
  ArrayField(MyVal23,M4Val,0,0);
  ArrayField(MyVal24,M4Val,0,0);
  ArrayField(MyVal25,M4Val,0,0);
  ArrayField(MyVal26,M4Val,0,0);
  ArrayField(MyVal27,M4Val,0,0);
  ArrayField(MyVal28,M4Val,0,0);
  ArrayField(MyVal29,M4Val,0,0);
  ArrayField(MyVal30,M4Val,0,0);
  ArrayField(MyVal31,M4Val,0,0);
  ArrayField(MyVal32,M4Val,0,0);
  ArrayField(MyVal33,M4Val,0,0);
  ArrayField(MyVal34,M4Val,0,0);
  ArrayField(MyVal35,M4Val,0,0);
  ArrayField(MyVal36,M4Val,0,0);
  ArrayField(MyVal37,M4Val,0,0);
  ArrayField(MyVal38,M4Val,0,0);
  ArrayField(MyVal39,M4Val,0,0);
  ArrayField(MyVal40,M4Val,0,0);
  ArrayField(MyVal41,M4Val,0,0);
  ArrayField(MyVal42,M4Val,0,0);// 59/2 in
  ArrayField(MyVal43,M4Val,0,0);// 59/2 conv 
  ArrayField(MyVal44,M4Val,0,0);// 59/2 out
  EndArray;
  MainKeyBegin(Number,0);
  KeySegment(IntYc);
  KeySegment(Number);
  KeyBegin(ExportedFlag);
  KeySegment(ExportedFlag);
  KeySegment(IntYc);
  KeySegment(Number);
  KeyBegin(TransDate);
  KeySegment(TransDate);
  KeySegment(Number);
  KeySegment(IntYc);
  KeyBegin(Comment);
  KeySegment(Comment);
  KeySegment(IntYc);
  KeySegment(Number);
  KeyBegin(RefStr);
  KeySegment(RefStr);
  KeySegment(IntYc);
  KeySegment(Number);
  KeyBegin(IntYc);
  KeySegment(IntYc);
  KeySegment(TransDate);
  KeySegment(Number);
  KeyBegin(LastChangeDate);
  KeySegment(LastChangeDate);
  KeySegment(IntYc);
  KeySegment(Number);
  KeyBegin(FileName);
  KeySegment(FileName);
  KeySegment(TransNr);
  KeySegment(IntYc);
  KeySegment(Number);
  KeyBegin(SeqNr);
  KeySegment(SeqNr);
  KeySegment(IntYc);
  KeySegment(Number);
  KeyBegin(SeqNrTransDate);
  KeySegment(SeqNr);
  KeySegment(TransDate);
  KeySegment(IntYc);
  KeySegment(Number);
  SubsetKeyBegin2(AccNumberReconsf);
  AppendMatrixFieldToKeyName(AccNumber,Reconsf);
  KeySegment(TransDate);
  KeySegment(IntYc);
  KeySegment(Number);
  KeyBegin(RegDate);
  KeySegment(RegDate);
  KeySegment(RegTime);
  KeySegment(Number);
  KeySegment(IntYc);
  EndRecord;
  
  RecordAddBegin(IPVc,"IPVc_Custom");
    RecordField(GiftVoucher,M4Code,60,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:07 30.05.2018
    RecordField(Comment2,M4Str,255,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 06, 10 11 2018 y. о 12:17:28
		RecordField(TaxTransactionCode,M4Str,100,0);// Edit_____________________________________________Irkan Ahmadov 14.19.20
		RecordField(TaxTransactionDate,M4Date,0,0);// Edit_____________________________________________Irkan Ahmadov 14.19.20
		RecordField(TaxParentDocument,M4Str,200,0);// Edit_____________________________________________Irkan Ahmadov 17.19.20
  EndRecordAdd;
  
  RecordAddBegin(GCRVc,"GCRVc_Custom");
    RecordField(IPSerNr,M4Long,0,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Thursday, 31 May 2018 10:07:57
		RecordField(RealSum,M4Val,0,0);//Edit_________________ABR 28.01.19
  EndRecordAdd;
	
	RecordAddBegin(GCVc,"GCVc_Custom");
		RecordField(RealSum,M4Val,0,0);//Edit_________________ABR 28.01.19
  EndRecordAdd;
	
	RecordAddBegin(GCSVc,"GCSVc_Custom");
		RecordField(RealSum,M4Val,0,0);//Edit_________________ABR 28.01.19
  EndRecordAdd;
	
	BlockBegin(ComissPrcBlock,-,"");
    RecordField(Enable,M4Int,0,0);
    RecordField(Percent,M4Val,0,0);
    RecordField(CorrAcc,M4UStr,20,0);
  EndBlock;
  
  
  BlockBegin(ComissArrBlock,-,"");
    RecordField(Math,M4Matrix,0,0);
    ArrayBegin(Math,-,1);
		ArrayField(Obj,M4UStr,100,0);
		ArrayField(PercentRow,M4Val,0,0);
		EndArray;
  EndBlock;
  
  
  BlockBegin(NewComissPrcBlock,-,"");//Ќовые правила будут действовать с 1/10/2019
    RecordField(Enable,M4Int,0,0);
    RecordField(Percent,M4Val,0,0);
    RecordField(CorrAcc,M4UStr,20,0);
  EndBlock;
	
	BlockBegin(NewComissPrc2Block,-,"");//Ќовые правила будут действовать с 1/02/2020
    RecordField(Enable,M4Int,0,0);
    RecordField(Percent,M4Val,0,0);
    RecordField(CorrAcc,M4UStr,20,0);
		RecordField(Objects,M4UStr,255,0);
  EndBlock;
  
  
  BlockBegin(NewComissArrBlock,-,"");//Ќовые правила будут действовать с 1/10/2019
    RecordField(Math,M4Matrix,0,0);
    ArrayBegin(Math,-,1);
		ArrayField(Obj,M4UStr,100,0);
		ArrayField(PercentRow,M4Val,0,0);
		EndArray;
  EndBlock;
	
	BlockBegin(NewComissArr2Block,-,"");//Ќовые правила будут действовать с 1/02/2020
    RecordField(Math,M4Matrix,0,0);
    ArrayBegin(Math,-,1);
		ArrayField(Obj,M4UStr,100,0);
		ArrayField(PercentRow,M4Val,0,0);
		EndArray;
  EndBlock;
	
	
	BlockBegin(BackOrderBlock,-,"");
    RecordField(BackOrderMark,M4Int,0,0);
  EndBlock;
	
	
	BlockBegin(NewFinTransBlock,-,"");
    RecordField(NewFinTransMark,M4Int,0,0);
  EndBlock;
	
	
	    
  RecordBegin(POShipmDataVc,-,"POShipmDataVc_New");
    RecordField(POSerNr,M4Long,0,0);
    RecordField(Total,M4Val,0,0);
    RecordField(Math,M4Matrix,0,0);
    ArrayBegin(Math,-,1);
		ArrayField(TruckNo,M4UStr,100,0);
    ArrayField(Volume,M4Val,0,0);
    ArrayField(Weight,M4Val,0,0);
    ArrayField(QtyPkg,M4Val,0,0);
    ArrayField(ShipDate,M4Date,0,0);
    ArrayField(ArrDate,M4Date,0,0);
    ArrayField(BalPay,M4Val,0,0);
    ArrayField(PayDate,M4Date,0,0);
    ArrayField(Paid,M4Str,50,0);
    EndArray;
    
    MainKeyBegin(POSerNr,0);
    KeySegment(POSerNr);
  EndRecord;
	
	BlockBegin(DBLockBlock,-,"dblock");
  RecordField(TRLock,M4Date,0,0);
  RecordField(TRWarn,M4Date,0,0);
  RecordField(TRNoPrel,M4Date,0,0);
  RecordField(OtherLock,M4Date,0,0);
  RecordField(OtherWarn,M4Date,0,0);
  RecordField(DeleteBeforeDate,M4Date,0,0);
  RecordField(PLLock,M4Date,0,0);
  RecordField(PLWarn,M4Date,0,0);
  RecordField(SLLock,M4Date,0,0);
  RecordField(SLWarn,M4Date,0,0);
  RecordField(WarnOldRecords,M4Int,0,0);
  RecordField(ActLock,M4Date,0,0);
  RecordField(ActWarn,M4Date,0,0);
  RecordField(WarnFutureDate,M4Int,0,0);
  RecordField(DisallowFutureDate,M4Int,0,0);
  RecordField(ExUsers,M4UStr,255,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 03, 25 07 2018 y. о 12:56:35
  RecordField(ExUsersMoreDays,M4UStr,255,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 12 October 2018 12:04:09
  EndBlock;
	
	RecordBegin(TruckDataVc,-,"TruckDateVc");
		RecordField(TruckNr,M4Code,20,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:52 27.07.2018
		RecordField(GoodsShipedDate,M4Date,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:56 27.07.2018
		RecordField(GoodsArrivalDate,M4Date,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:56 27.07.2018
		MainKeyBegin(TruckNr,0);
    KeySegment(TruckNr);
	EndRecord;
	
  BlockBegin(IdINSNOneBlock,-,"IdeaINSNBlock");
		RecordField(Math,M4Matrix,0,0);
    ArrayBegin(Math,-,1);
		ArrayField(Category,M4Str,60,0);
		ArrayField(SNMiddle,M4Long,0,0);
		EndArray;
  EndBlock;
	
	
	BlockBegin(ECVendFobSetBlaock,-,"ECVendFobSetBlaock");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:47 05.02.2019
		RecordField(Math,M4Matrix,0,0);
    ArrayBegin(Math,-,1);
		ArrayField(CompanyNr,M4Int,0,0);
		ArrayField(LocCode,M4Str,255,0);
		ArrayField(VendName,M4Str,255,0);
		EndArray;
  EndBlock;
  
  BlockBegin(OSGlobalSettBlock,-,"");// Edit ************************** BPI Ukraine - KramarAlexandr - 03, 20 01 2021 y. at 3:06:22 PM
		RecordField(Math,M4Matrix,0,0);
    ArrayBegin(Math,-,1);
		ArrayField(Location,M4Str,20,0);
		EndArray;
  EndBlock;

	
	BlockBegin(ECCasierDocSetBlock,-,"ECCasierDocSetBlock");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 17:23 06.02.2019
		RecordField(Math,M4Matrix,0,0);
    ArrayBegin(Math,-,1);
		ArrayField(LocCode,M4Str,255,0);
		ArrayField(CashierName,M4Str,255,0);
		ArrayField(CompNr,M4Int,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:47 29.05.2019
		EndArray;
  EndBlock;

	
	
	
  
  RecordBegin(GlobalPropertiesVc,-,"");// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 20 August 2018 09:39:33
		RecordField(Code,M4Code,100,0);
		RecordField(Name,M4Str,255,0);
		RecordField(Path,M4Str,255,0);
		RecordField(Math,M4Matrix,0,0);
		ArrayBegin(Math,-,1);
			ArrayField(Text,M4Str,255,0);
		EndArray;
		MainKeyBegin(Code,0);
    KeySegment(Code);
    SynchronizationIndex;
	EndRecord;
	
	RecordBegin(GlobalStoresVc,-,"");// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 20 August 2018 09:39:33
		RecordField(Code,M4Code,100,0);
		RecordField(Name,M4Str,255,0);
		RecordField(Addr01,M4Str,255,0);
		RecordField(Addr02,M4Str,255,0);
		RecordField(Addr03,M4Str,255,0);
		RecordField(Addr04,M4Str,255,0);
		RecordField(Addr05,M4Str,255,0);
		RecordField(IsRealStore,M4Int,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 14:40 20.08.2018
		RecordField(CRMid,M4Str,255,0);
		RecordField(Phone,M4Str,255,0);
		RecordField(Email,M4Str,255,0);
		RecordField(WTime,M4Str,255,0);
		MainKeyBegin(Code,0);
    KeySegment(Code);
    SynchronizationIndex;
	EndRecord;
	
	RecordBegin(GlobalBrandsVc,-,"");// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 20 August 2018 09:39:33
		RecordField(Code,M4Code,100,0);
		RecordField(Name,M4Str,255,0);
		RecordField(Path,M4Str,255,0);
		RecordField(Math,M4Matrix,0,0);
		RecordField(CRMid,M4Str,255,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 18:16 13.09.2018
		ArrayBegin(Math,-,1);
		ArrayField(Text,M4Str,255,0);
		EndArray;
		MainKeyBegin(Code,0);
    KeySegment(Code);
    SynchronizationIndex;
	EndRecord;
	
	RecordBegin(GlobalClassificationsVc,-,"");// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 20 August 2018 09:39:33
		RecordField(Code,M4Code,100,0);
		RecordField(Type,M4Code,100,0);
		RecordField(Name,M4Str,255,0);
		MainKeyBegin(Code,0);
    KeySegment(Code);
    SynchronizationIndex;
	EndRecord;
	
	RecordBegin(GlobalImagesVc,-,"");// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 20 August 2018 09:39:33
		RecordField(Code,M4Code,100,0);
		RecordField(Math,M4Matrix,0,0);
		ArrayBegin(Math,-,1);
		ArrayField(Path,M4Str,255,0);
		EndArray;
		MainKeyBegin(Code,0);
    KeySegment(Code);
    SynchronizationIndex;
	EndRecord;
	
	RecordBegin(GlobalDescriptionVc,-,"");// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 20 August 2018 09:39:33
		RecordField(Code,M4Code,100,0);
		RecordField(LangCode,M4Code,100,0);
		RecordField(Math,M4Matrix,0,0);
		RecordField(Description,M4TextField,0,0);
		ArrayBegin(Math,-,1);
		ArrayField(Text,M4Str,255,0);
		EndArray;
		MainKeyBegin(Code,0);
    KeySegment(Code);
    KeySegment(LangCode);
    SynchronizationIndex;
	EndRecord;
	
	RecordBegin(GlobalItemVc,-,"");// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 20 August 2018 09:39:33
		RecordField(Code,M4Code,100,0);
		RecordField(IsVariant,M4Int,0,0);
		RecordField(HansaCode,M4Code,100,INVc);
		RecordField(MainCode,M4Code,100,0);
		RecordField(HansaName,M4Str,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(Brand,M4Code,100,0);
		RecordField(Classification,M4UStr,255,0);
		RecordField(Price,M4Val,0,0);
		RecordField(Rebate,M4Val,0,0);
		RecordField(Math,M4Matrix,0,0);
		RecordField(ConsgType,M4Int,0,0);
		
		RecordField(BPIBrand,M4Code,20,0);
		RecordField(BPICollection,M4Code,20,0);
		RecordField(BPIGroup,M4Code,20,0);
		RecordField(BPISubGroup,M4Code,20,0);
		RecordField(BPICategory,M4Code,20,0);
		RecordField(BPIMaterial,M4Code,20,0);
		RecordField(BPIColor,M4Code,20,0);
		RecordField(BPIShape,M4Code,20,0);
		RecordField(BPISize,M4Code,20,0);
		RecordField(BPIUse,M4Code,20,0);
		RecordField(BPISex,M4Code,20,0);
		RecordField(BPIPlating,M4Code,20,0);
		RecordField(BPIClarity,M4Code,20,0);
		RecordField(BPIWeight,M4Code,20,0);
		RecordField(BPICut,M4Code,20,0);
		RecordField(BPIStone,M4Code,20,0);
		RecordField(BPIStrap,M4Code,20,0);
		RecordField(BPIOdour,M4Code,20,0);
		RecordField(MainItemFlag,M4Int,0,0);
		RecordField(BTRxGiftClass,M4UStr,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		RecordField(BTRxInterCatClass,M4Code,100,0);
		RecordField(BTRxFirstLevCat,M4USTR,100,0);
		RecordField(BTRxSecondLevCat,M4USTR,100,0);
		RecordField(BTRxThirdLevCat,M4USTR,100,0);
		RecordField(AlternativeCode,M4Code,100,0);
		RecordField(Cert,M4Code,100,0);
		RecordField(BTRxWatchMechanism,M4Code,100,0);
		RecordField(BTRxPowerReserve,M4Code,100,0);
		RecordField(BTRxStrapColour,M4Code,100,0);
		RecordField(BTRxPlacerScatt,M4Val,0,0);
		RecordField(BTRxPhoneModel,M4Code,100,0);
		RecordField(BTRxFilling,M4Code,100,0);
		RecordField(Depth,M4Val,0,0);
		RecordField(Width,M4Val,0,0);
		RecordField(Height,M4Val,0,0);
		RecordField(BTRxDiam,M4Val,0,0);
		RecordField(Volume,M4Val,0,0);
		RecordField(Weight,M4Val,0,0);
		RecordField(BTRxProdColour,M4Code,100,0);
		RecordField(BTRxChainMaterial,M4Code,100,0);
		RecordField(BTRxWatchGradeA,M4Code,100,0);
		RecordField(BTRxWatchGradeB,M4Code,100,0);
		RecordField(BTRxWatchGradeC,M4Code,100,0);
		RecordField(BTRxStoneA,M4Code,100,0);
		RecordField(BTRxStoneScattA,M4Val,0,0);
		RecordField(BTRxStoneB,M4Code,100,0);
		RecordField(BTRxStoneScattB,M4Val,0,0);
		RecordField(BTRxStoneC,M4Code,100,0);
		RecordField(BTRxStoneScattC,M4Val,0,0);
		RecordField(BTRxWatterResf,M4Int,0,0);
		RecordField(BTRxLimitedGood,M4Int,0,0);
		RecordField(BTRxType,M4Code,255,0);
		RecordField(BTRxSetQty,M4Int,0,0);
		RecordField(BTRxWatterRes,M4Code,255,0);
		RecordField(StrDepth,M4Str,255,0);
		RecordField(StrWidth,M4Str,255,0);
		RecordField(StrHeight,M4Str,255,0);
		RecordField(StrBTRxDiam,M4Str,255,0);
		RecordField(StrVolume,M4Str,255,0);
		RecordField(StrWeight,M4Str,255,0);
		RecordField(StrBTRxSetQty,M4Str,255,0);
		RecordField(BTRxStrapMat,M4Code,100,0);
		RecordField(BTRxBracelMat,M4Code,100,0);
		RecordField(BTRxFingerGirth,M4Str,255,0);
		RecordField(BtrxCollection,M4UStr,255,0);
		RecordField(RelatedTo,M4UStr,255,0);
		RecordField(PriceFromComp,M4Str,255,0);
		RecordField(BtrxClockFaceColour,M4Str,255,0);
		RecordField(BtrxComplications,M4Str,255,0);
		RecordField(BtrxClockFaceMaterial,M4Str,255,0);
		RecordField(BtrxMicrowaveProtect,M4Str,255,0);
		RecordField(BtrxStoveCompat,M4UStr,255,0);
		RecordField(TPCode,M4Code,100,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:58 31.03.2020
		RecordField(TPCPCode,M4Code,100,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:59 31.03.2020
		RecordField(BtrxWarranty,M4Str,255,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:37 08.04.2020
		RecordField(BtrxAllMaterials,M4Str,255,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:38 08.04.2020
		RecordField(BtrxPrecMetalCont,M4Str,255,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:42 08.04.2020
		RecordField(BtrxCaseDiam,M4Str,255,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:47 08.04.2020
		RecordField(BtrxScratchRes,M4Str,255,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:47 08.04.2020
		RecordField(Math2,M4TextField,0,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 02, 16 06 2020 y. at 9:29:21 PM
		RecordField(ExtProwItRegulations,M4Long,0,0);  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 14:05 23.06.2020
		RecordField(BTRxFourthLevCat,M4USTR,100,0);  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:25 02.07.2020
		RecordField(DealPrice,M4Val,0,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 14:44 07.09.2020
		RecordField(BtrxAddProdDescription,M4Str,255,0);//Edit***************************AB,17:14 18.09.2020 Дополнительная инф-я
		RecordField(BtrxCare,M4Str,255,0);//Edit***************************AB,17:14 18.09.2020 уход
		RecordField(BtrxProductFeaches,M4Str,255,0);//Edit***************************AB,17:14 18.09.2020 Фичи продукта
		RecordField(BtrxLength,M4Code,200,0); //Edit***************************AB,17:14 18.09.2020 
		RecordField(BtrxWidth,M4Code,200,0);//Edit***************************AB,17:14 18.09.2020
		RecordField(BtrxHeight,M4Code,200,0);	//Edit***************************AB,17:14 18.09.2020	
		RecordField(BtrxDiameter,M4Code,200,0);//Edit***************************AB,17:14 18.09.2020	
		RecordField(BtrxVol,M4Code,200,0);//Edit***************************AB,17:14 18.09.2020	
		RecordField(BtrxWeight,M4Code,200,0);//Edit***************************AB,17:14 18.09.2020	
		RecordField(BtrxItemSize,M4Code,200,0);//Edit***************************AB,17:14 18.09.2020	
		RecordField(BtrxUnitOfMeas,M4Code,200,0);//Edit***************************AB,17:14 18.09.2020
		RecordField(BtrxMatchesKitchenStove,M4Code,200,0);//Edit***************************AB,17:14 18.09.2020
		RecordField(BtrxClarity,M4Str,20,0);//Edit***************************AB,17:14 18.09.2020
		RecordField(BtrxProductName,M4Str,20,0);//Edit***************************AB,17:14 18.09.2020
		RecordField(BtrxCountInSet,M4Code,200,0);
		RecordField(BtrxCentralGim,M4Str,255,0); //Edit***************************AB,17:14 18.09.2020 
		RecordField(Life2,M4Str,200,0); //Edit***************************AB,17:14 18.09.2020 
		RecordField(High,M4Str,200,0); //Edit***************************AB,17:14 18.09.2020
		RecordField(BTRxCentralCarat,M4Str,200,0);	// _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:04 20.11.2020	
		ArrayBegin(Math,-,1); 
			ArrayField(Location,M4Code,60,0);
			ArrayField(Instock,M4Val,0,0);
		EndArray;
		MainKeyBegin(Code,0);
    KeySegment(Code);
    SynchronizationIndex;
    KeyBegin(Name);
    KeySegment(Name);
    KeySegment(Code);
    KeyBegin(HansaCode);
    KeySegment(HansaCode);
    KeySegment(Code);
    KeyBegin(HansaName);
    KeySegment(HansaName);
    KeySegment(Code);
	EndRecord;
  
  
  RecordBegin(MarcCampVc,-,"");// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 20 August 2018 09:39:33
		RecordField(Code,M4Code,100,0);
		RecordField(Page,M4Int,0,0);
		RecordField(Name,M4Str,255,0);
		RecordField(sDate,M4Date,0,0);
		RecordField(eDate,M4Date,0,0);
		RecordField(RealsDate,M4Date,0,0);
		RecordField(RealeDate,M4Date,0,0);
		RecordField(SendToCRM,M4Int,0,0);
		RecordField(Sended,M4Int,0,0);
		RecordField(CRMID,M4Str,100,0);
		RecordField(CompNr,M4Int,0,0);
		RecordField(Math,M4Matrix,0,0);
		RecordField(SyncToCRM,M4Int,0,0);
		RecordField(Comment,M4Str,255,0);
		RecordField(vra0,M41Val,0,0);
		
		ArrayBegin(Math,-,1);
			ArrayField(ItemCode,M4Code,100,INVc);
			ArrayField(Name,M4Code,100,0);
			ArrayField(vRebate,M4Val,0,0);
			ArrayField(Type,M4Str,200,0);
		EndArray;
		MainKeyBegin(Code,0);
		KeySegment(Code);
		KeySegment(sDate);
    KeySegment(CompNr);
    SynchronizationIndex;
    KeyBegin(sDate);
    KeySegment(sDate);
    KeySegment(Code);
    KeySegment(CompNr);
	EndRecord;
  
  
  BlockBegin(BPISRBlock,-,"");// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 28 August 2018 11:01:14
		RecordField(LastModelCode,M4Str,100,0);
		RecordField(LastColourCode,M4Str,100,0);
  EndBlock;
  
  RecordBegin(NewClassSetVc,-,"");// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 20 August 2018 09:39:33
		RecordField(Group,M4Code,50,0);
		RecordField(Type,M4Code,50,0);
		RecordField(GroupName,M4Str,255,0);
		RecordField(TypeName,M4Str,255,0);
		
		RecordField(Math,M4Matrix,0,0);
		ArrayBegin(Math,-,1);
			ArrayField(CType,M4Code,50,0);
			ArrayField(CCode,M4Code,50,0);
			ArrayField(CTypeName,M4Str,100,0);
			ArrayField(CCodeName,M4Str,100,0);
		EndArray;
		MainKeyBegin(Group,0);
    KeySegment(Group);
    KeySegment(Type);
    KeyBegin(GroupName);
    KeySegment(GroupName);
    KeySegment(TypeName);
    KeySegment(Group);
    KeySegment(Type);
	EndRecord;
	
	
	
	
	RecordBegin(BTRxClassSetVc,-,""); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:59 27.10.2020
		RecordField(Type,M4Code,50,0);
		RecordField(TypeName,M4Str,255,0);
		
		RecordField(Math,M4Matrix,0,0);
		ArrayBegin(Math,-,1);
			ArrayField(CType,M4Code,50,0);
			ArrayField(CCode,M4Code,50,0);
			ArrayField(CTypeName,M4Str,100,0);
			ArrayField(CCodeName,M4Str,100,0);
		EndArray;
		MainKeyBegin(Type,0);
    KeySegment(Type);
    KeyBegin(TypeName);
    KeySegment(TypeName);
    KeySegment(Type);
	EndRecord;
	
	
	
	
	RecordBegin(BTRxGroupClassSetVc,-,"");  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 17:53 27.10.2020
		RecordField(Type,M4Code,50,0);
		RecordField(TypeName,M4Str,255,0);
		
		RecordField(Math,M4Matrix,0,0);
		ArrayBegin(Math,-,1);
			ArrayField(CType,M4Code,50,0);
			ArrayField(CCode,M4Code,50,0);
			ArrayField(CTypeName,M4Str,100,0);
			ArrayField(CCodeName,M4Str,100,0);
		EndArray;
		MainKeyBegin(Type,0);
    KeySegment(Type);
    KeyBegin(TypeName);
    KeySegment(TypeName);
    KeySegment(Type);
	EndRecord;
	
	
	
	
	
	
	RecordBegin(OldDIVc,-,"OldDIVc2");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:21 10.09.2018
		NewAutosyncRegister(kSyncDirectionToClient,true);
		RecordField(Code,M4Code,10,0);
		RecordField(Name,M4Str,60,0);
		RecordField(DispGroups,M4UStr,200,DIVc);
		RecordField(CType,M4Code,10,0);
		RecordField(colnr,M4Set,46,0);
		RecordField(CCat,M4Code,50,0);
		RecordField(Name_RU,M4Str,60,0);
		RecordField(Name_AZ,M4Str,60,0); 
		RecordField(SyncFlag,M4Long,0,0); 
		RecordField(TempFlag,M4Long,0,0);
		RecordField(SavedCount,M4Long,0,0);
		
		MainKeyBegin(Code,0);
		KeySegment(Code);
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
		SubsetKeyBegin2(DICode);
		StoreInBaseKey;
		AppendListFieldToKeyName(DispGroups);
		KeySegment(Code);
		SubsetKeyBegin2(DIName);
		StoreInBaseKey;
		AppendListFieldToKeyName(DispGroups);
		KeySegment(Name);
		KeySegment(Code);
		KeyBegin(CType);
		KeySegment(CType);
		KeySegment(Code);
		KeyBegin(SyncFlag); 
		KeySegment(SyncFlag);
		KeySegment(Code); 
		SubsetKeyBegin2(CTCode);
		StoreInBaseKey;
		AppendListFieldToKeyName(CType);
		KeySegment(Code);
		SubsetKeyBegin2(CTName);
		StoreInBaseKey;
		AppendListFieldToKeyName(CType);
		KeySegment(Name);
		KeySegment(Code);
  EndRecord;

	RecordAddBegin(RebVc,"RebVc_Custom");
    RecordField(CRMid,M4Str,255,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:10 12.09.2018
		RecordField(Object,M4Str,255,0);  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 17:31 26.06.2019
		
		ArrayField(MtObject,M4Code,50,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:39 04.07.2019
  EndRecordAdd;

	RecordAddBegin(LCMemberLevelVc,"LCM_Custom");
    RecordField(CRMid,M4Str,255,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:10 12.09.2018
  EndRecordAdd;
	
	BlockBegin(WebReportChBlock,-,"");//11:25 14.09.2018
    RecordField(WEBCheck,M4Int,0,0);
		RecordField(WabUPDstockf,M4Int,0,0);
		RecordField(PathSinc,M4Str,255,0);
		RecordField(PageSinc,M4Str,255,0);
  EndBlock;
	
	
	BlockBegin(BtrxReportChBlock,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:30 22.01.2019
    RecordField(WEBCheck,M4Int,0,0);
		RecordField(WabUPDstockf,M4Int,0,0);
		RecordField(PathSinc,M4Str,255,0);
		RecordField(PageSinc,M4Str,255,0);
  EndBlock;
	
	BlockBegin(ECAutoRetSMBlock,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:18 10.05.2019
    RecordField(AutoSM,M4Int,0,0);
		RecordField(AutoSMf,M4Int,0,0);
  EndBlock;
	
	
	BlockBegin(NewClassifChBlock,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:28 28.09.2018
    RecordField(ClassifCheck,M4Int,0,0);
	RecordField(Update,M4Int,0,0);
  EndBlock;
	
	
	
	BlockBegin(WEBReservStock,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:33 12.10.2018
    RecordField(ResStockSet,M4Str,255,0);
  EndBlock;
	
	
	
	BlockBegin(ECommManUserBlock,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:33 12.10.2018
    RecordField(UserSalMSet,M4Str,255,0);
		RecordField(UserStockSet,M4Str,255,0);
  EndBlock;
	
	
	BlockBegin(AZHatSHBlock,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:33 12.10.2018
    RecordField(Hat1,M4Str,255,0);
		RecordField(Hat2,M4Str,255,0);
		RecordField(Hat3,M4Str,255,0);
		RecordField(Hat4,M4Str,255,0);
		RecordField(Hat5,M4Str,255,0);
		RecordField(Hat6,M4Str,255,0);
		RecordField(Hat7,M4Str,255,0);
		RecordField(Hat8,M4Str,255,0);
		RecordField(Hat9,M4Str,255,0);
		RecordField(Hat10,M4Str,255,0);
		RecordField(Text1,M4Str,255,0);
		RecordField(Text2,M4Str,255,0);
		RecordField(Text3,M4Str,255,0);
		RecordField(Text4,M4Str,255,0);
		RecordField(Text5,M4Str,255,0);
		RecordField(Text6,M4Str,255,0);
		RecordField(Text7,M4Str,255,0);
		RecordField(Text8,M4Str,255,0);
		RecordField(Text9,M4Str,255,0);
		RecordField(Text10,M4Str,255,0);
		RecordField(Text11,M4Str,255,0);
		RecordField(Text12,M4Str,255,0);
		RecordField(Text13,M4Str,255,0);
		RecordField(Text14,M4Str,255,0);
		RecordField(Text15,M4Str,255,0);
		RecordField(Text16,M4Str,255,0);
		RecordField(Text17,M4Str,255,0);
		RecordField(Text18,M4Str,255,0);
		RecordField(Text19,M4Str,255,0);
		RecordField(Text20,M4Str,255,0);
		RecordField(Text21,M4Str,255,0);
  EndBlock;
	
	
	RecordBegin(OSDVc,-,"OSDVc");	//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:47 14.09.2018
		RecordField(Code,M4Code,50,0);
		RecordField(TransDate,M4Date,0,0);
		RecordField(PONr,M4Code,50,0);
		RecordField(PODate,M4Date,0,0);
		RecordField(RefPRNr,M4Code,50,0);
		RecordField(PrjCode,M4Code,50,0);
		RecordField(VendorCode,M4Code,50,0);
		RecordField(VendorName,M4Str,255,0);
		RecordField(Address,M4Str,255,0);
		RecordField(Contact,M4Str,255,0);
		RecordField(Phone,M4Str,50,0);
		RecordField(Fax,M4Str,50,0);
		RecordField(Comment,M4Str,255,0);
		RecordField(GBRNr,M4Code,50,0);
		RecordField(OSDType,M4Int,0,0);
		RecordField(OSDAction,M4Int,0,0);
		RecordField(OSDRespFor,M4Int,0,0);
		RecordField(ReceivedBy,M4Str,255,0);
		RecordField(ApprovedBy,M4Str,255,0);
		RecordField(DateRecvd,M4Date,0,0);
		RecordField(CompletedBy,M4Str,255,0);
		RecordField(Math,M4Matrix,0,0);
		RecordField(OKFlag,M4Mark,0,0);
		RecordField(Total,M4Val,0,0);
		RecordField(CurCode,M4Code,50,0);
		
		ArrayBegin(Math,-,1);
			ArrayField(ArtCode,M4Code,50,INVc);
			ArrayField(UnitCode,M4Code,50,0);
			ArrayField(Quant,M4Int,0,0);
			ArrayField(Spec,M4Str,255,0);
			ArrayField(Classification,M4Str,255,0);
			ArrayField(Price,M4Val,0,0);
			ArrayField(vRebate,M4Val,0,0);
			ArrayField(Sum,M4Val,0,0);
			ArrayField(Article,M4Code,50,0);
			ArrayField(Description,M4Str,255,0);
			ArrayField(CostPrice,M4Val,0,0);
		EndArray;
		
		MainKeyBegin(Code,0);
		KeySegment(Code);
		KeyBegin(TransDate);
		KeySegment(TransDate);
		KeySegment(Code);
		KeyBegin(PONr);
		KeySegment(PONr);
		KeySegment(PODate);
		KeySegment(Code);
		KeyBegin(PODate);
		KeySegment(PODate);
		KeySegment(PONr);
		KeySegment(Code);
		KeyBegin(OKFlag);
		KeySegment(OKFlag);
		KeySegment(Code);
		
	EndRecord;

	RecordBegin(BPIBrandVc,-,"");
		RecordField(Code,M4Code,20,0);
		RecordField(Name,M4Str,100,0);
		RecordField(CRMid,M4Str,100,0);
		
		RecordField(DeliveryBasedOn,M4Int,0,0);
		RecordField(DeliveryWay,M4Int,0,0);
		RecordField(DeliveryFrom,M4Int,0,0);
		RecordField(PlanShipDaysMin,M4Val,0,0);
		RecordField(CalculatedLeadTime,M4Val,0,0);
		RecordField(ELevel,M4Val,0,0);
		RecordField(PlanShipDays,M4Val,0,0);
		RecordField(ELevelCurrency,M4Str,255,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 14:56 25.01.2019
		RecordField(BrndMngr,M4Str,255,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 9:31 28.01.2019
		RecordField(CWHCode,M4Str,20,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 9:31 28.01.2019
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		RecordField(LastItemCode,M4Str,255,0);
		RecordField(Vendor,M4UStr,255,0);
		RecordField(Closed,M4Int,0,0);
		RecordField(StockGroup,M4Str,255,0);
		RecordField(CompanyPrice,M4Str,255,0);
		RecordField(Puchaser,M4Str,255,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 14:24 02.10.2020
		RecordField(IDEABrandRef,M4Code,255,0);  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 17:16 01.02.2021
		
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
  EndRecord;
  RecordBegin(BPICollectionVc,-,"");
		RecordField(Code,M4Code,20,0);
		RecordField(Name,M4Str,100,0);
		RecordField(CRMid,M4Str,100,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
  EndRecord;
	RecordBegin(BPIGroupVc,-,"");
		RecordField(Code,M4Code,20,0);
		RecordField(Name,M4Str,100,0);
		RecordField(CRMid,M4Str,100,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		RecordField(RelatedTo,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
  EndRecord;
  RecordBegin(BPISubGroupVc,-,"");
		RecordField(Code,M4Code,20,0);
		RecordField(Name,M4Str,100,0);
		RecordField(CRMid,M4Str,100,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
  EndRecord;
  RecordBegin(BPICategoryVc,-,"");
		RecordField(Code,M4Code,20,0);
		RecordField(Name,M4Str,100,0);
		RecordField(CRMid,M4Str,100,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
  EndRecord;
  RecordBegin(BPIMaterialVc,-,"");
		RecordField(Code,M4Code,20,0);
		RecordField(Name,M4Str,100,0);
		RecordField(CRMid,M4Str,100,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
  EndRecord;
  RecordBegin(BPIColorVc,-,"");
		RecordField(Code,M4Code,20,0);
		RecordField(Name,M4Str,100,0);
		RecordField(CRMid,M4Str,100,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
  EndRecord;
  RecordBegin(BPIShapeVc,-,"");
		RecordField(Code,M4Code,20,0);
		RecordField(Name,M4Str,100,0);
		RecordField(CRMid,M4Str,100,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
  EndRecord;
  RecordBegin(BPISizeVc,-,"");
		RecordField(Code,M4Code,20,0);
		RecordField(Name,M4Str,100,0);
		RecordField(CRMid,M4Str,100,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
  EndRecord;
  RecordBegin(BPIUseVc,-,"");
		RecordField(Code,M4Code,20,0);
		RecordField(Name,M4Str,100,0);
		RecordField(CRMid,M4Str,100,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
  EndRecord;
  RecordBegin(BPISexVc,-,"");
		RecordField(Code,M4Code,20,0);
		RecordField(Name,M4Str,100,0);
		RecordField(CRMid,M4Str,100,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
  EndRecord;
  RecordBegin(BPIPlatingVc,-,"");
		RecordField(Code,M4Code,20,0);
		RecordField(Name,M4Str,100,0);
		RecordField(CRMid,M4Str,100,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
  EndRecord;
  RecordBegin(BPIClarityVc,-,"");
		RecordField(Code,M4Code,20,0);
		RecordField(Name,M4Str,100,0);
		RecordField(CRMid,M4Str,100,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
  EndRecord;
  RecordBegin(BPIWeightVc,-,"");
		RecordField(Code,M4Code,20,0);
		RecordField(Name,M4Str,100,0);
		RecordField(CRMid,M4Str,100,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
  EndRecord;
  RecordBegin(BPICutVc,-,"");
		RecordField(Code,M4Code,20,0);
		RecordField(Name,M4Str,100,0);
		RecordField(CRMid,M4Str,100,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
  EndRecord;
  RecordBegin(BPIStoneVc,-,"");
		RecordField(Code,M4Code,20,0);
		RecordField(Name,M4Str,100,0);
		RecordField(CRMid,M4Str,100,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
  EndRecord;
  RecordBegin(BPIStrapVc,-,"");
		RecordField(Code,M4Code,20,0);
		RecordField(Name,M4Str,100,0);
		RecordField(CRMid,M4Str,100,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
  EndRecord;
  RecordBegin(BPIOdourVc,-,"");
		RecordField(Code,M4Code,20,0);
		RecordField(Name,M4Str,100,0);
		RecordField(CRMid,M4Str,100,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
  EndRecord;
  
  RecordAddBegin(ITVc,"ITVc_Custom");
    RecordField(BPIBtand,M4Code,60,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Thursday, 18 October 2018 12:15:57
  EndRecordAdd;
  	
	RecordBegin(GlobResVc,-,"");
		RecordField(SerNr,M4Code,50,0);
		RecordField(Math,M4Matrix,0,0);
		ArrayBegin(Math,-,1);
			ArrayField(Strnegf,M4Int,0,0);
			ArrayField(RowNr,M4Int,0,0);
			ArrayField(Name,M4Str,255,0);
			ArrayField(PrvPer,M4Val,0,0);
			ArrayField(CurnPer,M4Val,0,0);
		EndArray;
		MainKeyBegin(SerNr,0);
		KeySegment(SerNr);
		SynchronizationIndex;
	EndRecord;
	
	RecordBegin(BtrxRebVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:12 15.04.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		RecordField(RelatedTo,M4USTR,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	RecordBegin(BtrxInternalCatVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:12 15.04.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	RecordBegin(BtrxFirstLevelCatVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:12 15.04.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	RecordBegin(BtrxSecondLevelCatVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:12 15.04.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		RecordField(PathFrstCode,M4Code,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	RecordBegin(BtrxThirdLevelCatVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:12 15.04.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		RecordField(PathScndCode,M4Code,255,0);
		RecordField(RelatedTo,M4USTR,255,0);
		RecordField(CatSecLvlName,M4Str,255,0);

		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	
	RecordBegin(BtrxFourthLevelCatVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:12 15.04.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		RecordField(PathThirdCode,M4Code,255,0);
		RecordField(RelatedTo,M4USTR,255,0);
		RecordField(CatThirdLvlName,M4Str,255,0);

		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	
	RecordBegin(BtrxCertificateVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:12 15.04.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	RecordBegin(BtrxWatchMechanVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:12 15.04.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	
	RecordBegin(BtrxProjectsVc,-,""); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 17:04 17.12.2020
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(BMCode,M4Code,255,0);
		RecordField(PMCode,M4Code,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
		KeyBegin(BMCode);
		KeySegment(BMCode);
		KeySegment(Code);
		KeyBegin(PMCode);
		KeySegment(PMCode);
		KeySegment(Code);
	EndRecord;
	
	
	
	RecordBegin(BtrxPowerReserveVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:12 15.04.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	
	RecordBegin(BtrxWatchGradeVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:12 15.04.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	RecordBegin(BtrxPhoneModelVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:12 15.04.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	RecordBegin(BtrxFillingVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:12 15.04.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	RecordBegin(BtrxTypeVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 11:12 15.04.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	
	RecordBegin(BtrxWaterResistantVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:13 30.04.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	
	RecordBegin(BtrxBrandVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:06 06.05.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		RecordField(Closed,M4Int,0,0);
		
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	RecordBegin(BtrxMaterialVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:06 06.05.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	RecordBegin(BtrxColourVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:06 06.05.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	RecordBegin(BtrxOdourVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:06 06.05.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	RecordBegin(BtrxSexVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:06 06.05.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	RecordBegin(BtrxSizeVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:06 06.05.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	RecordBegin(BtrxStoneVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:06 06.05.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	RecordBegin(BtrxPlatingVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:06 06.05.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	
	RecordBegin(BtrxStrapVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:06 06.05.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	
	RecordBegin(BtrxStrapMatVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 14:30 17.05.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	
	RecordBegin(BtrxBracelMatVc,-,"");//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 14:30 17.05.2019
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	RecordBegin(BtrxComplicationsVc,-,""); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:03 25.02.2020
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	RecordBegin(BtrxMicrowaveProtectVc,-,""); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:03 25.02.2020
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	RecordBegin(BtrxStoveCompatVc,-,""); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:02 25.02.2020
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	RecordBegin(BtrxProductCategoryVc,-,"");
		RecordField(Code,M4Code,20,0);
		RecordField(Name,M4Str,100,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
  EndRecord;
  
  RecordBegin(BtrxProductNameVc,-,"");
		RecordField(Code,M4Code,20,0);
		RecordField(Name,M4Str,100,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		RecordField(ProductCategory,M4Code,50, BtrxProductCategoryVc);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
  EndRecord;
  
  RecordBegin(BtrxCountInSetVc,-,"");
		RecordField(Code,M4Code,20,0);
		RecordField(Name,M4Str,100,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
  EndRecord;

	RecordBegin(BtrxCentralCaratVc,-,"");
		RecordField(Code,M4Code,20,0);
		RecordField(Name,M4Str,100,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
    EndRecord;
	
	RecordBegin(BtrxCollectionVc,-,"");// Edit ************************** BPI Ukraine - KramarAlexandr - 04, 20 06 2019 y. at 11:10:27 PM
		RecordField(Code,M4Code,50,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		RecordField(isActive,M4Int,0,0);
		RecordField(Group,M4Code,50,0);
		RecordField(Brand,M4Code,50,0);
		RecordField(Color,M4Code,50,0);
		RecordField(activeStart,M4Long,0,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
		KeyBegin(isActive);
		KeySegment(isActive);
		KeySegment(Code);
	EndRecord;
	
	RecordBegin(BtrxCollectionGroupVc,-,"");// Edit ************************** BPI Ukraine - KramarAlexandr - 04, 20 06 2019 y. at 11:10:27 PM
		RecordField(Code,M4Code,50,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		RecordField(Path,M4Str,255,0);
		RecordField(isActive,M4Int,0,0);
		RecordField(activeStart,M4Long,0,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
		KeyBegin(isActive);
		KeySegment(isActive);
		KeySegment(Code);
	EndRecord;
	
	RecordBegin(BtrxAllMaterialsVc,-,"");  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:54 08.04.2020
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	
	
	RecordBegin(BtrxGroupsVc,-,"");  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:54 08.04.2020
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	
	
	RecordBegin(BtrxPrecMetalContVc,-,"");  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:54 08.04.2020
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	
	RecordBegin(BtrxCaseDiamVc,-,"");  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:54 08.04.2020
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	RecordBegin(JSONClassNamesVc,-,"");  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 15:54 08.04.2020
		RecordField(Code,M4Code,255,0);
		RecordField(Name,M4Str,255,0);
		RecordField(NameRUS,M4Str,255,0);
		RecordField(NameAZ,M4Str,255,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		SynchronizationIndex;
		KeyBegin(Name);
		KeySegment(Name);
		KeySegment(Code);
	EndRecord;
	
	
	RecordBegin(ItemDuplicatesVc,-,"");   // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:23 21.07.2020
		RecordField(OrigCode,M4Code,255,0);
		RecordField(DupCode,M4Code,255,0);
		RecordField(OrigBrandCode,M4Code,255,0);
		RecordField(DupBrandCode,M4Code,255,0);
		MainKeyBegin(OrigCode,0);
		KeySegment(OrigCode);
		KeySegment(DupCode);
		KeySegment(OrigBrandCode);
		KeySegment(DupBrandCode);
		SynchronizationIndex;
		KeyBegin(DupCode);
		KeySegment(DupCode);
		KeySegment(OrigCode);
		KeySegment(DupBrandCode);
		KeySegment(OrigBrandCode);
	EndRecord;
	
	
	
	RecordBegin(UsedRebateCardsVc,-,"");// Edit ************************** BPI Ukraine - KramarAlexandr - Wednesday, 8 May 2019 10:40:15
		RecordField(Code,M4Code,100,0);
		RecordField(Compnr,M4Int,0,0);
		RecordField(InvoiceNr,M4Long,0,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
	EndRecord;
	
	
	BlockBegin(DateRnBlock,-,"");
		RecordField(DateRn,M4Date,0,0);
		RecordField(CPCCAndOthers,M4Date,0,0);
	EndBlock;
	
	BlockBegin(ConsCompBlock,-,"");
		RecordField(OKFlag,M4Int,0,0);
		RecordField(OKFlagPOr,M4Int,0,0);
		RecordField(ConsAddShipCost,M4Int,0,0);
	EndBlock;
	
	RecordBegin(TemporaryPricesVc,-,""); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:20 19.06.2019
		RecordField(SerNr,M4Long,0,0);
		RecordField(FromDate,M4Date,0,0);
		RecordField(ToDate,M4Date,0,0);
    RecordField(Math,M4Matrix,0,0);
		RecordField(OKFlag,M4Int,0,0);
		RecordField(Object,M4UStr,255,0);
		RecordField(Comment,M4Str,255,0);
		
		ArrayBegin(Math,-,1);
			ArrayField(ArtCode,M4Code,200,INVc);
			ArrayField(Price,M4Val,0,0);
			ArrayField(Currency,M4UStr,200,0);
    EndArray;
		
		MainKeyBegin(SerNr,0);
		KeySegment(SerNr);
		SynchronizationIndex;
		KeyBegin(FromToDate);
		KeySegment(FromDate);
		KeySegment(ToDate);
		KeySegment(SerNr);
		KeyBegin(ToFromDate);
		KeySegment(ToDate);
		KeySegment(FromDate);
		KeySegment(SerNr);
	EndRecord;
	
	
	RecordBegin(UserBrandsVc,-,""); // Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 24 June 2019 11:21:39
		RecordField(Code,M4Code,50,0);
		RecordField(Name,M4Str,100,0);
    RecordField(Math,M4Matrix,0,0);
		ArrayBegin(Math,-,1);
			ArrayField(Brand,M4Code,50,0);
			ArrayField(Name,M4Str,100,0);
    EndArray;
		MainKeyBegin(Code,0);
		KeySegment(Code);
	EndRecord;
	
	RecordBegin(ConsItemVc,-,"");  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:15 26.06.2019
		RecordField(Code,M4Code,100,INVc);
		RecordField(LocCode,M4Code,100,0);
    RecordField(BrandCode,M4Code,100,0);
		MainKeyBegin(Code,0);
		KeySegment(Code);
		KeyBegin(LocCodeBrand);
		KeySegment(LocCode);
		KeySegment(BrandCode);
		KeySegment(Code);
	EndRecord;
	
	
	RecordBegin(BigPUVc,-,"Bigpurchase2");
  RecordField(SerNr,M4Long,0,0);
  SerialNoBlock(PUSerBlock);
  RecordField(RegDate,M4Date,0,0);
  RecordField(TransDate,M4Date,0,0);
  FieldIsTransDate(TransDate);
  RecordField(Comment,M4Str,60,0);
  RecordField(Math,M4Matrix,0,0);
  RecordField(VECode,M4Code,20,VEVc);
  RecordField(VEName,M4Str,60,0);
  RecordField(PONr,M4Long,0,POVc);
  RecordField(Location,M4Code,10,LocationVc);
  FieldIsLocation(Location);
  RecordField(OKFlag,M4Mark,0,0);
  RecordField(CurncyCode,M4Code,5,CurncyCodeVc);
  RecordField(ToRateB1,M4Rate,0,0);
  RecordField(InclVAT,M4Int,0,0);
  RecordField(SumCostPrice,M45Val,0,0);
  RecordField(SumQuant,M4Qty,0,0);
  RecordField(ShipCost,M4UVal,0,0);
  RecordField(CustomsCost,M4UVal,0,0);
  RecordField(ExtraCost,M4UVal,0,0);
  RecordField(ExportedFlag,M4Int,0,0);
  RecordField(FrRate,M4Rate,0,0); 
  RecordField(ToRateB2,M4Rate,0,0); 
  RecordField(BaseRate1,M4Rate,0,0); 
  RecordField(BaseRate2,M4Rate,0,0); 
  RecordField(LocOKNr,M4Qty,0,0);
  RecordField(Objects,M4UStr,60,ObjVc);
  RecordField(PUClass,M4Code,10,0);
  RecordField(POCOSerNr,M4Long,0,0);
  RecordField(Cost1,M4UVal,0,0);
  RecordField(Cost2,M4UVal,0,0);
  RecordField(Cost3,M4UVal,0,0);
  RecordField(Cost4,M4UVal,0,0);
  RecordField(Cost5,M4UVal,0,0);
  RecordField(VATVal,M4Val,0,0);
  RecordField(SubTotal,M4Val,0,0);
  RecordField(PayVal,M4Val,0,0);
  RecordField(VEVATCode,M4Code,10,VATCodeBlock);
  RecordField(Invalid,M4Int,0,0);
  FieldIsInvalid(Invalid);
  RecordField(ExportFlag,M4Int,0,0);
  RecordField(PrelPUNr,M4Long,0,0);
  RecordField(FreightCode,M4Code,5,0);
  RecordField(FreightCompanyRegNr,M4Str,60,0);
  RecordField(FreightCompany,M4Str,60,0);
  RecordField(TruckInfo,M4Str,60,0);
  RecordField(Driver,M4Str,60,0);
  RecordField(CMRText,M4Str,60,0);
  RecordField(xBookVariance,M4Mark,0,0);//not used
  RecordField(xVarTransDate,M4Date,0,0);//not used
  RecordField(LangCode,M4Code,5,0);   
  RecordField(TAX1Sum,M4Val,0,0);
  RecordField(TAX2Sum,M4Val,0,0);
  
  RecordField(ShipCostRound,M4UVal,0,0);
  RecordField(CustomsCostRound,M4UVal,0,0);
  RecordField(Cost1Round,M4UVal,0,0);
  RecordField(Cost2Round,M4UVal,0,0);
  RecordField(Cost3Round,M4UVal,0,0);
  RecordField(Cost4Round,M4UVal,0,0);
  RecordField(Cost5Round,M4UVal,0,0);
  RecordField(Sorting,M4Str,20,0);
  RecordField(InvalidDate,M4Date,0,0);
  RecordField(NoTAXonVAT,M4Long,0,0);
  RecordField(AcceptanceStatus,M4Set,443,0);
  RecordField(PUFromPORate,M4Set,460,0);
  RecordField(TotUPrice,M4Val,0,0);
  RecordField(VETaxTemplateCode,M4Code,10,TaxTemplateVc);
  RecordField(TaxMatrix,M4PackedMatrix,0,TaxMatrixVc);
  RecordField(BranchID,M4Code,20,VEVc);
  RecordField(AcceptanceBy,M4List,200,UserVc);
  RecordField(ExtraCostsCalculation,M4Int,0,0);
  RecordField(AcceptanceFYI,M4List,200,UserVc);
  RecordField(DispatchNumber,M4Str,60,0);
  RecordField(CustomsNr,M4Str,30,0);
  RecordField(Sign,M4Code,10,UserVc);
  FieldIsUser(Sign);
  RecordField(SalesGroup,M4Code,5,SalesGroupVc);
  FieldIsGroup(SalesGroup);
	RecordField(OfficialSerNr,M4Str,40,0);//Edit----------------------Dima  31.03.2015
  RecordField(NotForReport,M4Mark,0,0);	//Edit----------------------Dima  01.04.2015
	RecordField(ItemClassifCheck,M4Mark,0,0);	//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:18 10.07.2018	
  RecordField(User01,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:16
  RecordField(User02,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:17
  RecordField(User03,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:17
  RecordField(User04,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:18
  RecordField(User05,M4Code,40,UserVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 17 August 2018 09:56:19
	RecordField(InvPackListNr,M4Code,60,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:55 23.08.2018
	RecordField(AWBCMRRBNr,M4Code,60,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:55 23.08.2018
	RecordField(RefPrNr,M4Code,60,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:55 23.08.2018
	RecordField(PRJCode,M4Code,60,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:55 23.08.2018
	RecordField(ClientCode,M4Code,60,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:55 23.08.2018
	RecordField(QtyOfPkgs,M4Int,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:57 23.08.2018
	RecordField(OSDNr,M4Code,60,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 14:38 05.09.2018
	RecordField(ReceivedBy,M4Str,100,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:29 05.09.2018
	RecordField(CheckedBy,M4Str,100,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:29 05.09.2018
	RecordField(ConfirmedBy,M4Str,100,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:29 05.09.2018
	RecordField(ApprovedBy,M4Str,100,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:29 05.09.2018
	RecordField(IDPONr,M4Code,60,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:04 13.09.2018
	RecordField(FromOrds,M4Str,255,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:04 13.09.2018	
	RecordField(CurrencyF,M4Str,255,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:04 13.09.2018	
	RecordField(CurrencyT,M4Str,255,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:04 13.09.2018	
	RecordField(FrRateT,M4Rate,0,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:04 13.09.2018	
	RecordField(FrRateF,M4Rate,0,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:04 13.09.2018	
	RecordField(ToRateT,M4Rate,0,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:04 13.09.2018	
	RecordField(ToRateF,M4Rate,0,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:04 13.09.2018	
	RecordField(ConsManualCost,M4Int,0,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:04 13.09.2018	
	RecordField(ApprovedShipCost,M4Int,0,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:04 10.09.2019	
  RecordField(ApprovedCustomsCost,M4Int,0,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:04 10.09.2019	
	RecordField(ApprovedCost1,M4Int,0,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:04 10.09.2019	
	RecordField(ApprovedCost2,M4Int,0,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:04 10.09.2019	
	RecordField(ApprovedCost3,M4Int,0,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:04 10.09.2019	
	RecordField(ApprovedCost4,M4Int,0,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:04 10.09.2019	
	RecordField(ApprovedCost5,M4Int,0,0); //_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:04 10.09.2019	
  
  ArrayBegin(Math,-,1);
		ArrayField(ArtCode,M4Code,20,INVc);
		ArrayField(Quant,M4UVal,0,0);
		ArrayField(Spec,M4Str,100,0);
		ArrayField(UPrice,M45Val,0,0);
		ArrayField(SerialNr,M4Str,60,0);
		ArrayField(OrdRow,M4Long,0,0);
		ArrayField(Extra,M4PrcStr,20,0);
		ArrayField(CostPrice,M45Val,0,0);
		ArrayField(VEItemCode,M4Str,20,0);
		ArrayField(VARList,M4UStr,30,0);
		ArrayField(ShipCost,M45Val,0,0);
		ArrayField(CustomsCost,M45Val,0,0); //!!
		ArrayField(BestBefore,M4Date,0,0);
		ArrayField(Coefficient,M45Val,0,0);
		ArrayField(BasePrice,M423Val,0,0);
		ArrayField(Sum,M45Val,0,0);
		ArrayField(Comment,M4Str,30,0);
		ArrayField(Objects,M4UStr,60,ObjVc);
		ArrayField(CostAcc,M4UStr,10,AccVc);
		ArrayField(CredAcc,M4UStr,10,AccVc);
		ArrayField(CustomsNr,M4Str,30,0);
		ArrayField(CountryOfOrg,M4Code,5,0);
		ArrayField(PosCode,M4Code,20,0);
		ArrayField(BatchStatus,M4Code,20,BatchStatusVc);
		ArrayField(UnitXval,M4UVal,0,0);
		ArrayField(UnitYval,M4UVal,0,0);
		ArrayField(UnitZval,M4UVal,0,0);
		ArrayField(RowCost1,M45Val,0,0);
		ArrayField(RowCost2,M45Val,0,0);
		ArrayField(RowCost3,M45Val,0,0);
		ArrayField(RowCost4,M45Val,0,0);
		ArrayField(RowCost5,M45Val,0,0);
		ArrayField(VATCode,M4Code,10,VATCodeBlock);
		ArrayField(stp,M4Int,0,0);
		ArrayField(ovst,M4Int,0,0);
		ArrayField(Sign,M4Code,10,UserVc);
		ArrayField(UpdDate,M4Date,0,0);
		ArrayField(PORecon,M4UVal,0,0);
		ArrayField(POReconComment,M4Str,100,0);
		ArrayField(VIRecon,M4UVal,0,0);
		ArrayField(VIReconComment,M4Str,100,0);
		ArrayField(PONr,M4Long,0,POVc);
		ArrayField(BarCode,M4Str,20,0);//StockMovNr at The Moment
		ArrayField(PrelPUNr,M4Long,0,0);
		ArrayField(PrelPURow,M4Long,0,0);
		ArrayField(ToPosCode,M4Code,20,0);
		ArrayField(UnitCode,M4Code,5,0);
		ArrayField(VarianceAmount,M4Val,0,0);
		ArrayField(TAX2Code,M4Code,5,0);
		ArrayField(TAX2Prc,M423Val,0,0);
		ArrayField(TAX2Reb,M4Val,0,0);
		ArrayField(TAX1Reb,M4Val,0,0);
		ArrayField(TAX2Acc,M4Code,10,AccVc);
		ArrayField(Location,M4Code,10,LocationVc);
		ArrayField(ChargeNumber,M4Long,0,0);
		ArrayField(VEQuant,M4UVal,0,0);
		ArrayField(PIFactor,M4UVal,0,0);
		ArrayField(VEUnit,M4Code,5,0);
		ArrayField(StockType,M4Set,359,0); 
		ArrayField(InPrice,M45Val,0,0);
		ArrayField(SuppSerialNr,M4Str,20,0);
		ArrayField(MajStoneDet,M4Str,20,0);
		ArrayField(Colour,M4Str,20,0);
		ArrayField(Clarity,M4Str,20,0);
		ArrayField(Cert,M4Str,20,0);
		ArrayField(MinStoneDet,M4Str,20,0);
		ArrayField(Metal,M4Str,20,0);
		ArrayField(RowWeight,M4Str,20,0);
		ArrayField(Size,M4Str,20,0);
		ArrayField(Length,M4Str,20,0);
		ArrayField(WatchBrand,M4Str,20,0);
		ArrayField(StyleName,M4Str,20,0);
		ArrayField(WatchMetal,M4Str,20,0);
		ArrayField(Movement,M4Str,20,0);
		ArrayField(BrcStr,M4Str,20,0);
		ArrayField(Gender,M4Str,20,0);
		ArrayField(Other,M4Str,20,0);
		ArrayField(Other2,M4Str,20,0)
		ArrayField(MotherPURow,M4Long,0,0);
		ArrayField(TaxTemplateCode,M4UStr,60,TaxTemplateVc);
		ArrayField(TaxMatrix,M4PackedMatrix,0,TaxMatrixVc);
		ArrayField(TREO,M4Set,509,0);
		ArrayField(DispatchNumber,M4Str,60,0);
		ArrayField(CustomsDate,M4Date,0,0);
		ArrayField(PrintQuant,M4UVal,0,0); //Edit***************************Sasha2,11:34 19.05.2016
		ArrayField(ECCSTItCode,M4Str,255,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:32 03.12.2018
		ArrayField(ECCSTItBarCode,M4Str,255,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:32 03.12.2018
		ArrayField(FromOrdNr,M4Str,255,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:32 19.06.2019
		ArrayField(FromOrdrowNr,M4Int,0,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:32 19.06.2019
		ArrayField(Position,M4Str,255,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:32 19.06.2019
		ArrayField(CurrencyItem,M4Str,255,0);//_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 16:32 19.06.2019
		ArrayField(ItemConsgType,M4Set,901,0); //Edit_______________________________ABR,11:00 25.06.19
		ArrayField(WeightRow,M45Val,0,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:24 22.07.2019
		ArrayField(CaratRow,M45Val,0,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:24 22.07.2019
		ArrayField(CaratplacerRow,M45Val,0,0); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:24 22.07.2019
  
  
  
  EndArray;
  MainKeyBegin(SerNr,1);
  StoreInBaseKey;
  AppendListFieldToKeyName(Sign);
  AppendListFieldToKeyName(SalesGroup);
  KeySegment(SerNr);
  EndRecord;
	
	RecordBegin(ClientItemStatusVc,-,"");// Edit ************************** Tuesday, 27 May 2014 15:35:31
    RecordField(ItemCode,M4Code,20,INVc);
    RecordField(OrderNr,M4Long,0,0);
    RecordField(Quant,M4UVal,0,0);
    MainKeyBegin(ItemCode,0);
    KeySegment(ItemCode);
		KeySegment(OrderNr);
  EndRecord;
  
  RecordBegin(Akcia50ForSecondBrandVc,-,""); // Edit ************************** BPI Ukraine - KramarAlexandr - 02, 20 08 2019 y. at 11:18:29 AM
		RecordField(SerNr,M4Long,0,0);
		RecordField(Comment,M4Str,200,0);
		RecordField(FromDate,M4Date,0,0);
		RecordField(ToDate,M4Date,0,0);
		RecordField(Object,M4Code,10,0);
    RecordField(Math,M4Matrix,0,0);
    RecordField(AllItems,M4Int,0,0);
		ArrayBegin(Math,-,1);
			ArrayField(Brand,M4Code,50,0);
			ArrayField(Rebate,M4Val,0,0);
    EndArray;
		MainKeyBegin(SerNr,0);
		KeySegment(SerNr);
	EndRecord;
  
  
  BlockBegin(SellerDataBlock,-,"");
		RecordField(String01,M4Str,250,0);
		RecordField(String02,M4Str,250,0);
		RecordField(String03,M4Str,250,0);
		RecordField(String04,M4Str,250,0);
		RecordField(String05,M4Str,250,0);
		RecordField(String06,M4Str,250,0);
		RecordField(String07,M4Str,250,0);
		RecordField(String08,M4Str,250,0);
		RecordField(String09,M4Str,250,0);
	EndBlock;
  
	RecordBegin(VaucherVc,-,"");// Edit_______________________________ABR 02.10.19
  RecordField(BarCode,M4Code,50,0);
  RecordField(StartDate,M4Date,0,0);
  RecordField(EndDate,M4Date,0,0);
 	RecordField(Closed,M4Mark,0,0);
	RecordField(OnceUsed,M4Mark,0,0);
	RecordField(RebCode,M4Code,255,0);
	RecordField(VaucherProgCode,M4Code,255,0);
  RecordField(CreateDate,M4Date,0,0);
  RecordField(Locations,M4Ustr,255,0);
	RecordField(Objects,M4Ustr,255,ObjVc);
	MainKeyBegin(BarCode,0);
		KeySegment(BarCode);
	KeyBegin(RebCode);
		KeySegment(RebCode);
		KeySegment(BarCode);
	KeyBegin(CreateDate);
		KeySegment(CreateDate);
		KeySegment(BarCode);
	KeyBegin(StartDate);
		KeySegment(StartDate);
		KeySegment(BarCode);
	KeyBegin(EndDate);
		KeySegment(EndDate);
		KeySegment(BarCode);
	EndRecord;
	
	RecordBegin(VaucherHistVc,-,"");// Edit_______________________________ABR 02.10.19
  RecordField(VaucherCode,M4Code,50,0);
  RecordField(IVNr,M4Long,0,0);
  RecordField(CompNr,M4Int,0,0);
	MainKeyBegin(VaucherCode,0);
		KeySegment(VaucherCode);
		KeySegment(IVNr);
		KeySegment(CompNr);
	EndRecord;
	
	RecordBegin(VaucherProgVc,-,"");// Edit_______________________________ABR 02.10.19
  RecordField(Code,M4Code,50,0);
  RecordField(StartDate,M4Date,0,0);
  RecordField(EndDate,M4Date,0,0);
 	RecordField(Closed,M4Mark,0,0);
	RecordField(RebCode,M4Code,255,0);
  RecordField(CreateDate,M4Date,0,0);
  RecordField(Locations,M4Ustr,255,0);
	RecordField(Objects,M4Ustr,255,ObjVc);
	RecordField(ExLocations,M4Ustr,255,0);
	MainKeyBegin(Code,0);
		KeySegment(Code);
	KeyBegin(RebCode);
		KeySegment(RebCode);
		KeySegment(Code);
	KeyBegin(CreateDate);
		KeySegment(CreateDate);
		KeySegment(Code);
	KeyBegin(StartDate);
		KeySegment(StartDate);
		KeySegment(Code);
	KeyBegin(EndDate);
		KeySegment(EndDate);
		KeySegment(Code);
	EndRecord;

BlockBegin(BrandsBanDateBlock,-,"");
		RecordField(Math,M4Matrix,0,0);
		ArrayBegin(Math,-,1);
			ArrayField(Brand,M4Code,255,0);
			ArrayField(Object,M4UStr,255,0);
			ArrayField(StartBanDate,M4Date,0,0);
    EndArray;
	EndBlock;
	
	BlockBegin(BrandsECommerceBlock,-,"");
		RecordField(Math,M4Matrix,0,0);
		ArrayBegin(Math,-,1);
			ArrayField(Brand,M4Code,255,0);
			ArrayField(Comment,M4UStr,255,0);
    EndArray;
	EndBlock;
	
	BlockBegin(BrandsReportCCBlock,-,"");
		RecordField(Math,M4Matrix,0,0);
		ArrayBegin(Math,-,1);
			ArrayField(Brand,M4Code,255,0);
			ArrayField(Comment,M4UStr,255,0);
    EndArray;
	EndBlock;
	
	BlockBegin(SWexItemsBlock,-,"");
		RecordField(Math,M4Matrix,0,0);
		ArrayBegin(Math,-,1);
			ArrayField(ArtCode,M4Code,30,0);
    EndArray;
	EndBlock;
	
	
	BlockBegin(OTypeAddControlBlock,-,"");
		RecordField(Math,M4Matrix,0,0);
		ArrayBegin(Math,-,1);
			ArrayField(STORE,M4Code,20,0);
			ArrayField(SUBDI,M4UStr,100,0);
    EndArray;
	EndBlock;
	
	
	RecordAddBegin(PFormVc,"PFormVc_Custom");// Edit ************************** BPI Ukraine - KramarAlexandr - 01, 18 05 2020 y. at 10:48:53 AM
		RecordField(AddPerc,M4Qty,0,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 01, 18 05 2020 y. at 10:49:25 AM
		RecordField(AddBeforeVal,M4Val,0,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 01, 18 05 2020 y. at 10:49:25 AM
	EndRecordAdd;
	
	BlockBegin(CheckTaskUsersBlock,-,"");
		RecordField(Math,M4Matrix,0,0);
		ArrayBegin(Math,-,1);
			ArrayField(Users,M4UStr,255,0);
    EndArray;
	EndBlock;
	
	BlockBegin(AddClosPerSetBlock,-,"");// Edit ************************** BPI Ukraine - KramarAlexandr - 02, 20 10 2020 y. at 2:41:48 PM
		RecordField(Math,M4Matrix,0,0);
		ArrayBegin(Math,-,1);
			ArrayField(User,M4Code,255,0);
			ArrayField(AccessGroup,M4Code,255,0);
			ArrayField(ToDate,M4Date,0,0);
			ArrayField(Days,M4Int,0,0);
			ArrayField(DaysType,M4Set,903,0);
    EndArray;
	EndBlock;
	
	RecordBegin(ExpProvItemRegVc,-,""); // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 12:03 22.06.2020
  RecordField(SerNr,M4Long,0,0);
  RecordField(PrefCode,M4Code,250,0);
  RecordField(Comment,M4Str,250,0);
	MainKeyBegin(SerNr,0);
		KeySegment(SerNr);
	KeyBegin(PrefCode);
		KeySegment(PrefCode);
		KeySegment(SerNr);
	EndRecord;
end;

