
global
updating function LongInt PUVcRecordUpdate(var record PUVc PUr,record PUVc PU2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  if(currentuser!="SA1")then begin
		res = inner.PUVcRecordUpdate(PUr,PU2r,stat,long4);
	end;
	
  PUVcRecordUpdate = res;
  RETURN;
END;


global
updating function LongInt PUVcRecordUpdateAfter(var record PUVc PUr,record PUVc PU2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  
  if(currentuser!="SA1")then begin
		res = inner.PUVcRecordUpdateAfter(PUr,PU2r,stat,long4);
	end;

  PUVcRecordUpdateAfter = res;
  RETURN;
END;



global
updating function LongInt PUVcRecordCheck(var record PUVc PUr,record PUVc PU2r,LongInt stat,LongInt check)
BEGIN
  LongInt res;
	
  res = 0;
  if(currentuser!="SA1")then begin

  if (blank(PUr.VECode)) then begin		//Edit-----------------------------------Dima  12.12.2014
    if (UserCanAction("PUWithoutVE",true)==false) then begin
	//RecordCheckError(31246,StringFromStringSet(3,"PUWithoutVE"),-1,"VECode");   
	 RecordCheckError(31246,"",-1,"VECode");      
      res = -1;
	 goto LBreak;
    end;
  end; 	//End edit-----------------------------------------------

	res = inner.PUVcRecordCheck(PUr,PU2r,stat,check);
  end;
  
  LBreak:; 
  PUVcRecordCheck = res;
  RETURN;
END;
  

global
function Boolean PUDClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
BEGIN
  Boolean res;
  Integer nwn;
  
  res = true;
  if(currentuser!="SA1")then begin
  	res = inner.PUDClassActiveEditField(wn,fieldname,fn,wnst,rownr,changed);
  end;
  
  PUDClassActiveEditField = res;
  RETURN;
END;

/*
global
updating function LongInt IVVcRecordUpdate(var record IVVc IVr,record IVVc IV2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  if(currentuser!="SA1")then begin
		res = inner.IVVcRecordUpdate(IVr,IV2r,stat,long4);
	end;
	
  IVVcRecordUpdate = res;
  RETURN;
END;
*/

global
updating function LongInt IVVcRecordUpdateAfter(var record IVVc IVr,record IVVc IV2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  
  if(currentuser!="SA1")then begin
		res = inner.IVVcRecordUpdateAfter(IVr,IV2r,stat,long4);
	end;

  IVVcRecordUpdateAfter = res;
  RETURN;
END;



global
updating function LongInt IVVcRecordCheck(record IVVc IVr,record IVVc IV2r,LongInt stat,LongInt check)
BEGIN
  LongInt res;
  
  res = 0;
  if(currentuser!="SA1")then begin		
		res = inner.IVVcRecordCheck(IVr,IV2r,stat,check);
	end;
  
  IVVcRecordCheck = res;
  RETURN;
END;
  

global
function Boolean IVDClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
BEGIN
  Boolean res;
  Integer nwn;
  
  res = true;
  if(currentuser!="SA1")then begin
  	res = inner.IVDClassActiveEditField(wn,fieldname,fn,wnst,rownr,changed);
  end;
  
  IVDClassActiveEditField = res;
  RETURN;
END;

global
updating function LongInt StockMovVcRecordUpdate(var record StockMovVc StockMovr,record StockMovVc StockMov2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  if(currentuser!="SA1")then begin
		res = inner.StockMovVcRecordUpdate(StockMovr,StockMov2r,stat,long4);
	end;
	
  StockMovVcRecordUpdate = res;
  RETURN;
END;


global
updating function LongInt StockMovVcRecordUpdateAfter(var record StockMovVc StockMovr,record StockMovVc StockMov2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  
  if(currentuser!="SA1")then begin
		res = inner.StockMovVcRecordUpdateAfter(StockMovr,StockMov2r,stat,long4);
	end;

  StockMovVcRecordUpdateAfter = res;
  RETURN;
END;



global
updating function LongInt StockMovVcRecordCheck(var record StockMovVc StockMovr,record StockMovVc StockMov2r,LongInt stat,LongInt check)
BEGIN
  LongInt res;
  
  res = 0;
  if(currentuser!="SA1")then begin
		res = inner.StockMovVcRecordCheck(StockMovr,StockMov2r,stat,check);
	end;
  
  StockMovVcRecordCheck = res;
  RETURN;
END;
  

global
function Boolean StockMovDClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
BEGIN
  Boolean res;
  Integer nwn;
  
  res = true;
  if(currentuser!="SA1")then begin
  	res = inner.StockMovDClassActiveEditField(wn,fieldname,fn,wnst,rownr,changed);
  end;
  
  StockMovDClassActiveEditField = res;
  RETURN;
END;

global
updating function LongInt SHVcRecordUpdate(var record SHVc SHr,record SHVc SH2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  if(currentuser!="SA1")then begin
		res = inner.SHVcRecordUpdate(SHr,SH2r,stat,long4);
	end;
	
  SHVcRecordUpdate = res;
  RETURN;
END;


global
updating function LongInt SHVcRecordUpdateAfter(var record SHVc SHr,record SHVc SH2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  
  if(currentuser!="SA1")then begin
		res = inner.SHVcRecordUpdateAfter(SHr,SH2r,stat,long4);
	end;

  SHVcRecordUpdateAfter = res;
  RETURN;
END;



global
updating function LongInt SHVcRecordCheck(var record SHVc SHr,record SHVc SH2r,LongInt stat,LongInt check)
BEGIN
  LongInt res;
  
  res = 0;
  if(currentuser!="SA1")then begin
		res = inner.SHVcRecordCheck(SHr,SH2r,stat,check);
	end;
  
  SHVcRecordCheck = res;
  RETURN;
END;
  

global
function Boolean SHDClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
BEGIN
  Boolean res;
  Integer nwn;
  
  res = true;
  if(currentuser!="SA1")then begin
  	res = inner.SHDClassActiveEditField(wn,fieldname,fn,wnst,rownr,changed);
  end;
  
  SHDClassActiveEditField = res;
  RETURN;
END;

global
function Boolean PODClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
BEGIN
  Boolean res;
  Integer nwn;
  
  res = true;
  if(currentuser!="SA1")then begin
  	res = inner.PODClassActiveEditField(wn,fieldname,fn,wnst,rownr,changed);
  end;
  
  PODClassActiveEditField = res;
  RETURN;
END;