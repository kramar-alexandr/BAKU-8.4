//server-only
/*global
updating procedure ReadImportTagShareVcSetBlock(string thetag)
begin
	record ShareVcSetBlock SHB;
	row ShareVcSetBlock SHBrw;
	
	
  logtext(0,"======================ReadImportTagartikel4");
  
  while (NextImportLine(false))begin
  	ClearRow(SHB,SHBrw,1); 
    SHBrw.VcName = ImportField;
    SHBrw.Typ = StringToInt(ImportField);
    SHBrw.ForCompanies = ImportField;
		SHBrw.InCompany = ImportField;
		if(SHBrw.VcName=="LoyaltyPointsVc")then begin
			SHBrw.ForCompanies = "1,2,3,4,5,6,7,8,9";
		end;
		if(SHBrw.VcName=="LCMemberLevelVc")then begin
			SHBrw.ForCompanies = "1,2,3,4,5,6,7,8,9";
		end;
		if(SHBrw.VcName=="GlobalLocationVc")then begin
			SHBrw.ForCompanies = "1,2,3,4,5,6,7,8,9";
		end;
		if(SHBrw.VcName=="CLCorspVc")then begin
			SHBrw.ForCompanies = "1,2,3,4,5,6,7,8,9";
		end;
		SHBrw.ForCompanies = "1,2,3,4,5,6,7,8,9";
		logtext(0,SHBrw.VcName & "   " & SHBrw.Typ & "   " & SHBrw.ForCompanies & "   " & SHBrw.InCompany);
		matrowinsert(SHB,matrowcnt(SHB),SHBrw);
    BlockStore(SHB);
  end;  
  
	
	
	logtext(0,"ReadImportTagShareVcSetBlock");
return;
end;*/
procedure ReadImportTagPOSButtonsVc2Record(record POSButtonsVc POSButtonsr)
begin
  string 255 tstr;
  row POSButtonsVc POSButtonsrw;
  integer rwcnt;
  
  RecordNew(POSButtonsr);
  
  POSButtonsr.UUID = StringToUUID(ImportField); // NewAutosyncRegister
  ImportField; // NewAutosyncRegister
  ImportField; // NewAutosyncRegister
  POSButtonsr.WindowClass = ImportField;
  POSButtonsr.POSButtonGroupCode = ImportField;
  POSButtonsr.Page = StringToInt(ImportField);
  POSButtonsr.Comment = ImportField;
  POSButtonsr.KeyCode = StringToInt(ImportField);
  POSButtonsr.Modifiers = StringToInt(ImportField);
  
  rwcnt = 0;
  
  while (NextImportLine(false)) begin
    ClearRow(POSButtonsr,POSButtonsrw,1);
    POSButtonsrw.ButtonType = StringToInt(ImportField);
    POSButtonsrw.Code = ImportField;
    POSButtonsrw.Label = ImportField;
    POSButtonsrw.colnr = StringToInt(ImportField);
    POSButtonsrw.KeyCode = StringToInt(ImportField);
    if(POSButtonsrw.ButtonType>=100)then begin
    	POSButtonsrw.ButtonType = POSButtonsrw.ButtonType + 100;
    end;
    POSButtonsrw.Modifiers = StringToInt(ImportField);
    POSButtonsrw.PrintGroupCode = ImportField;
    MatRowPut(POSButtonsr,rwcnt,POSButtonsrw);
    rwcnt = rwcnt + 1;
  end;
  
  return;
end;

global
updating procedure ReadImportTagPOSButtonsVc2(string thetag)
begin
  record POSButtonsVc POSButtonsr;
  
  while (NextImportLine(false)) begin
    ReadImportTagPOSButtonsVc2Record(POSButtonsr);
    RecordImportStore(POSButtonsr,false);
  end;
  
  return;
end;

global
function string 120 ReadRecordIdStrPOSButtonsVc2(Integer compnr,string thetag)
begin
  record POSButtonsVc POSButtonsr;
  
  POSButtonsr.WindowClass = ImportField;
  POSButtonsr.POSButtonGroupCode = ImportField;
  POSButtonsr.Page = StringToInt(ImportField);
  ReadRecordIdStrPOSButtonsVc2 = BuildRecordIdStr(POSButtonsr,compnr);
  return;
end;


procedure ReadImportTagartikel4Record(record INVc INr)
begin
  row INVc INrw;
  integer rwcnt;
  string 255 tstr;
  
  RecordNew(INr);
  ImportField; // NewAutosyncRegister
  ImportField; // NewAutosyncRegister
  ImportField; // NewAutosyncRegister
  INr.Code = ImportField;
  if(nonblank(INr.Code))then begin
		INr.Name = ImportField;
		INr.Unittext = ImportField;
		INr.MinLevel = StringToVal(ImportField,M4Qty);
		INr.Objects = ImportField;
		INr.SalesAcc = ImportField;
		INr.UPrice1 = StringToVal(ImportField,M423Val);
		INr.ItemType = StringToInt(ImportField);
		INr.Group = ImportField;
		 ImportField;
		 ImportField;
		INr.InPrice = StringToVal(ImportField,M45Val);
		INr.InvCode = ImportField;
		INr.ExtraCost = StringToVal(ImportField,M4Val);
		INr.SerNrf = StringToInt(ImportField);
		INr.Department = ImportField;
		INr.Weight = StringToVal(ImportField,M45Val);
		INr.Volume = StringToVal(ImportField,M45Val);
		INr.EUCodex = ImportField;
		INr.InCurncyCode = ImportField;
		INr.Bonus = StringToVal(ImportField,M4Qty);
		INr.Recepy = ImportField;
		INr.Markup = StringToVal(ImportField,M4Qty);
		 ImportField;
		INr.BarCode = ImportField;
		INr.UpdateCost = StringToInt(ImportField);
		INr.LastPriceChange = StringToDate(ImportField);
		INr.CalcPrice = ImportField;
		INr.VATCode = ImportField;
		INr.PriceFactor = StringToVal(ImportField,M45Val);
		INr.Terminated = StringToInt(ImportField);
		INr.AvgMarkup = StringToVal(ImportField,M4Val);
		INr.LastPurchPrice = StringToVal(ImportField,M45Val);
		INr.LastPurchCurncyCode = ImportField;
		INr.WeighedAvPrice = StringToVal(ImportField,M45Val);
		INr.Conversion1 = StringToVal(ImportField,M45Val);
		INr.Conversion2 = StringToVal(ImportField,M45Val);
		INr.WarrantyLength = StringToVal(ImportField,M4Qty);
		INr.InvRecepy = ImportField;
		INr.EUSalesAcc = ImportField;
		INr.ExpSalesAcc = ImportField;
		INr.VATCodeEU = ImportField;
		INr.VATCodeExp = ImportField;
		INr.ChangePrice = StringToInt(ImportField);
		INr.RebCode = ImportField;
		INr.ExplodeRec = StringToInt(ImportField);
		INr.Unittext2 = ImportField;
		INr.UnitCoefficient = StringToVal(ImportField,M45Val);
		INr.WarnText1 = ImportField;
		INr.VARList = ImportField;
		INr.ItemMaterial = StringToInt(ImportField);
		INr.AlcPrc = StringToVal(ImportField,M4UVal);
		INr.DefaultSource = ImportField;
		INr.AlternativeCode = ImportField;
		INr.CostAcc = ImportField;
		INr.DefLocation = ImportField;
		INr.LastBasePriceChange = StringToDate(ImportField);
		INr.MaxLevel = StringToVal(ImportField,M4Qty);
		INr.LastPurchPrice2 = StringToVal(ImportField,M45Val);
		INr.Width = StringToVal(ImportField,M4UVal);
		INr.Height = StringToVal(ImportField,M4UVal);
		INr.Depth = StringToVal(ImportField,M4UVal);
		INr.ContractItem = ImportField;
		INr.Internal = StringToInt(ImportField);
		INr.InclItemFreight = StringToInt(ImportField);
		INr.FixedFreight = StringToVal(ImportField,M4Val);
		INr.DispGroups = ImportField;
		INr.HazLevCode = ImportField;
		INr.Density = StringToVal(ImportField,M45Val);
		//INr.xClassification = 
		ImportField;
		INr.CredSalesAcc = ImportField;
		INr.CredEUSalesAcc = ImportField;
		INr.CredExpSalesAcc = ImportField;
		INr.CredVATCode = ImportField;
		INr.CredVATCodeEU = ImportField;
		INr.CredVATCodeExp = ImportField;
		INr.RentalItem = ImportField;
		INr.CompUsage = ImportField;
		INr.colnr = StringToInt(ImportField);
		INr.VARMask = ImportField;
		INr.VARRepOrder = ImportField;
		INr.VARSubsets = ImportField;
		INr.LocArea = ImportField;
		INr.EKNCode = ImportField;
		INr.DefPalletItem = ImportField;
		INr.QtyonPallet = StringToVal(ImportField,M4UVal);
		INr.PalletWidth = StringToVal(ImportField,M4UVal);
		INr.PalletHeight = StringToVal(ImportField,M4UVal);
		INr.PalletDepth = StringToVal(ImportField,M4UVal);
		INr.Brand = ImportField;
		INr.BrandType = ImportField;
		INr.PickArea = ImportField;
		INr.SWWCode = ImportField;
		INr.RepaPricePerWeight = StringToVal(ImportField,M4Val);
		INr.PalletsInPickArea = StringToVal(ImportField,M4UVal);
		INr.DefPosWidth = StringToVal(ImportField,M4UVal);
		INr.DefPosHeight = StringToVal(ImportField,M4UVal);
		INr.DefPosDepth = StringToVal(ImportField,M4UVal);
		INr.InPriceB2 = StringToVal(ImportField,M45Val);
		INr.WeighedAvPriceB2 = StringToVal(ImportField,M45Val);
		INr.EUCostAcc = ImportField;
		INr.ExpCostAcc = ImportField;
		INr.PalletLayers = StringToVal(ImportField,M4UVal);
		INr.QtyonPalletLayer = StringToVal(ImportField,M4UVal);
		INr.UserStr1 = ImportField;
		INr.UserStr2 = ImportField;
		INr.UserStr3 = ImportField;
		INr.UserStr4 = ImportField;
		INr.UserStr5 = ImportField;
		INr.UserVal1 = StringToVal(ImportField,M4UVal);
		INr.UserVal2 = StringToVal(ImportField,M4UVal);
		INr.UserVal3 = StringToVal(ImportField,M4UVal);
		INr.UserDate1 = StringToDate(ImportField);
		INr.UserDate2 = StringToDate(ImportField);
		INr.UserDate3 = StringToDate(ImportField);
		INr.RentGroup = ImportField;
		INr.FAGroup = ImportField;
		INr.NetWeight = StringToVal(ImportField,M45Val);
		INr.PrimaryCostModel = StringToInt(ImportField);
		INr.QueuedCostModel = StringToInt(ImportField);
		INr.CostPerc = StringToVal(ImportField,M4Val);
		INr.FIFOPerSerialNr = StringToInt(ImportField);
		INr.FIFOPerLocation = StringToInt(ImportField);
		INr.WAPerLocation = StringToInt(ImportField);
		INr.CostPricePerLocation = StringToInt(ImportField);
		INr.NotForSales = StringToInt(ImportField);
		INr.SRUpdateCost = StringToInt(ImportField);
		INr.SuppSerialNr = ImportField;
		INr.MajStoneDet = ImportField;
		INr.Colour = ImportField;
		INr.Clarity = ImportField;
		INr.Cert = ImportField;
		INr.MinStoneDet = ImportField;
		INr.Metal = ImportField;
		INr.RowWeight = ImportField;
		INr.Size = ImportField;
		INr.Length = ImportField;
		INr.WatchBrand = ImportField;
		INr.StyleName = ImportField;
		INr.WatchMetal = ImportField;
		INr.Movement = ImportField;
		INr.BrcStr = ImportField;
		INr.Gender = ImportField;
		INr.Other = ImportField;
		INr.Other2 = ImportField;
		INr.Reference = ImportField;
		INr.Perceptions = StringToInt(ImportField);
		INr.Withholdings = StringToInt(ImportField);
		INr.TaxTemplateCode = ImportField;
		INr.TaxTemplateCodeEU = ImportField;
		INr.TaxTemplateCodeExp = ImportField;
		INr.DonotRequireBatchNrOnIVCash = StringToInt(ImportField);
		INr.HotelWIPAcc = ImportField;
		INr.CPSCode = ImportField;
		INr.SVOInvbleSalesAcc = ImportField;
		INr.SVOWarrantySalesAcc = ImportField;
		INr.SVOContractSalesAcc = ImportField;
		INr.SVOGoodwillSalesAcc = ImportField;
		INr.SVOInvbleCostAcc = ImportField;
		INr.SVOWarrantyCostAcc = ImportField;
		INr.SVOContractCostAcc = ImportField;
		INr.SVOGoodwillCostAcc = ImportField;
		//INr.HasExcise = StringToInt(ImportField);
		//INr.ProjMaterialsUsageAcc = ImportField;
		//INr.DefOrderType = StringToInt(ImportField);
	
		INr.PurchAcc = ImportField;
		INr.SyncFlag = StringToInt(ImportField);
		INr.TempFlag = StringToInt(ImportField);
		INr.SavedCount = StringToInt(ImportField);
		INr.ConsgType = StringToInt(ImportField);
		INr.MainDisp = ImportField;
		INr.RebGroup = ImportField;
	
	
	
		rwcnt = 0;
	
		while (NextImportLine(false)) begin
			ClearRow(INr,INrw,1);
			INrw.LangCode = ImportField;
			INrw.Text = ImportField;
		
			INrw.Description = ImportField;
			INrw.Technical = ImportField;
			MatRowPut(INr,rwcnt,INrw);
			rwcnt = rwcnt + 1;
		end;
  
  end;
  
  return;
end;

global
updating procedure ReadImportTagartikel4(string thetag)
begin
  record INVc INr;
  
  logtext(0,"ReadImportTagartikel4");
  
  while (NextImportLine(false)) begin
    ReadImportTagartikel4Record(INr);
    RecordImportStore(INr,false);
  end;
  
  return;
end;

global
function string 120 ReadRecordIdStrartikel4(Integer compnr,string thetag)
begin
  record INVc INr;
  
  INr.Code = ImportField;
  ReadRecordIdStrartikel4 = BuildRecordIdStr(INr,compnr);
  return;
end;

// Edit ************************** Monday, 11 September 2017 12:52:04// Edit ************************** Monday, 11 September 2017 12:52:06


procedure ReadImportTagPOVcRecord(record POVc POr)
begin
  record TaxMatrixVc TMr;
  row POVc POrw;
  integer rwcnt;
  
  RecordNew(POr);
  POr.SerNr = StringToLongint(ImportField);
  POr.VECode = ImportField;
  POr.TransDate = StringToDate(ImportField);
  POr.PayDeal = ImportField;
  POr.ExportFlag = StringToInt(ImportField);
  POr.OKFlag = StringToInt(ImportField);
  POr.Addr0 = ImportField;
  POr.Addr1 = ImportField;
  POr.Addr2 = ImportField;
  POr.Addr3 = ImportField;
  POr.ShipAddr0 = ImportField;
  POr.ShipAddr1 = ImportField;
  POr.ShipAddr2 = ImportField;
  POr.ShipAddr3 = ImportField;
  POr.VEContact = ImportField;
  POr.OurContact = ImportField;
  POr.ShipMode = ImportField;
  POr.CurncyCode = ImportField;
  POr.PlanShip = ImportField;
  POr.Sign = ImportField;
  POr.ShipDeal = ImportField;
  POr.LangCode = ImportField;
  POr.OrdNr = StringToLongint(ImportField);
  POr.ToRateB1 = StringToVal(ImportField,M4Rate);
  POr.Closed = StringToInt(ImportField);
  POr.CostPerUnit = ImportField;
  POr.Sum0 = StringToVal(ImportField,M4Val);
  POr.Sum1 = StringToVal(ImportField,M4Val);
  POr.Sum2 = StringToVal(ImportField,M4Val);
  POr.Sum3 = StringToVal(ImportField,M4Val);
  POr.Sum4 = StringToVal(ImportField,M4Val);
  POr.PRCode = ImportField;
  POr.Printdf = StringToInt(ImportField);
  POr.Comment = ImportField;
  POr.InclVAT = StringToInt(ImportField);
  POr.Location = ImportField;
  POr.VEFactoring = ImportField;
  POr.PUFlag = StringToInt(ImportField);
  POr.OSFlag = StringToInt(ImportField);
  POr.ExportedFlag = StringToInt(ImportField);
  POr.FrRate = StringToVal(ImportField,M4Rate);
  POr.ToRateB2 = StringToVal(ImportField,M4Rate);
  POr.BaseRate1 = StringToVal(ImportField,M4Rate);
  POr.BaseRate2 = StringToVal(ImportField,M4Rate);
  POr.WONr = StringToLongint(ImportField);
  POr.Objects = ImportField;
  POr.PIFlag = StringToInt(ImportField);
  POr.InvFlag = StringToInt(ImportField);
  POr.Reference = ImportField;
  POr.SalesMan = ImportField;
  POr.OKPersons = ImportField;
  POr.POClass = ImportField;
  POr.POCQStatNr = StringToLongint(ImportField);
  POr.SalesGroup = ImportField;
  POr.InvAddr3 = ImportField;
  POr.InvAddr4 = ImportField;
  POr.DelAddr3 = ImportField;
  POr.DelAddr4 = ImportField;
  POr.POCOSerNr = StringToLongint(ImportField);
  POr.VEVATCode = ImportField;
  POr.TotPalletNr = StringToVal(ImportField,M4UVal);
  POr.Cost1 = StringToVal(ImportField,M4UVal);
  POr.Cost2 = StringToVal(ImportField,M4UVal);
  POr.Cost3 = StringToVal(ImportField,M4UVal);
  POr.Cost4 = StringToVal(ImportField,M4UVal);
  POr.Cost5 = StringToVal(ImportField,M4UVal);
  POr.CustomsCost = StringToVal(ImportField,M4UVal);
  POr.ShipCost = StringToVal(ImportField,M4UVal);
  POr.IntORNo = StringToLongint(ImportField);
  //POr.xAcceptanceState = StringToInt(ImportField);
  ImportField;
  //POr.xAcceptanceGroup = ImportField;
  ImportField;
  POr.PlanShipDate = StringToDate(ImportField);
  POr.PrepaidAmount = StringToVal(ImportField,M4Val);
  POr.InvBeforePU = StringToInt(ImportField);
  POr.TAX1Sum = StringToVal(ImportField,M4Val);
  POr.TAX2Sum = StringToVal(ImportField,M4Val);
  POr.BranchID = ImportField;
  POr.NoTAXonVAT = StringToLongint(ImportField);
  POr.Region = ImportField;
  POr.OrderType = StringToInt(ImportField);
  POr.AcceptanceStatus = StringToInt(ImportField);
  POr.SVONr = StringToLongint(ImportField);
  POr.OrderStockFlag = StringToInt(ImportField);
  POr.ValidUntil = StringToDate(ImportField);
  POr.VETaxTemplateCode = ImportField;
  ImportPackedMatrix(TMr);
  PackFieldMatrix(POr,"TaxMatrix",TMr);
  POr.RebCode = ImportField;
  POr.InvoiceToCode = ImportField;
  POr.AcceptanceBy = ImportField;
  POr.ExtraCostsCalculation = StringToInt(ImportField);
  POr.AcceptanceFYI = ImportField;
  
  POr.OKDate = StringToDate(ImportField);
  POr.OrderDoneFlag = StringToInt(ImportField);
  POr.OrderDoneDate = StringToDate(ImportField);
  POr.CheckCurncyCode = ImportField;
  POr.OfficialSerNr = ImportField;
  
  rwcnt = 0;
  
  while (NextImportLine(false)) begin
    ClearRow(POr,POrw,1);
    POrw.stp = StringToInt(ImportField);
    POrw.ovst = StringToInt(ImportField);
    POrw.VEArtCode = ImportField;
    POrw.ArtCode = ImportField;
    POrw.Quant = StringToVal(ImportField,M4UVal);
    POrw.Spec = ImportField;
    POrw.Price = StringToVal(ImportField,M45Val);
    POrw.Sum = StringToVal(ImportField,M45Val);
    POrw.vRebate = StringToVal(ImportField,M41Val);
    POrw.VATCode = ImportField;
    POrw.Objects = ImportField;
    POrw.Shipd2 = StringToVal(ImportField,M4UVal);
    POrw.Shipd1 = StringToVal(ImportField,M4UVal);
    POrw.VEQuant = StringToVal(ImportField,M4UVal);
    POrw.PIFactor = StringToVal(ImportField,M4UVal);
    POrw.PriceFactor = StringToVal(ImportField,M45Val);
    POrw.VARList = ImportField;
    POrw.PRCode = ImportField;
    POrw.WSNr = StringToLongint(ImportField);
    POrw.Invd = StringToVal(ImportField,M4UVal);
    POrw.CostAcc = ImportField;
    POrw.PlanShipRow = ImportField;
    POrw.Comment = ImportField;
    POrw.Coefficient = StringToVal(ImportField,M45Val);
    POrw.RentSerialNr = ImportField;
    POrw.PalletNr = StringToVal(ImportField,M4UVal);
    POrw.UnitCode = ImportField;
    POrw.VEUnit = ImportField;
    POrw.RowCost1 = StringToVal(ImportField,M4UVal);
    POrw.RowCost2 = StringToVal(ImportField,M4UVal);
    POrw.RowCost3 = StringToVal(ImportField,M4UVal);
    POrw.RowCost4 = StringToVal(ImportField,M4UVal);
    POrw.RowCost5 = StringToVal(ImportField,M4UVal);
    POrw.ShipCost = StringToVal(ImportField,M45Val);
    POrw.CustomsCost = ImportField;
    POrw.IntORRow = StringToLongint(ImportField);
    POrw.POCORow = StringToLongint(ImportField);
    POrw.TAX2Code = ImportField;
    POrw.TAX2Prc = StringToVal(ImportField,M423Val);
    POrw.TAX2Reb = StringToVal(ImportField,M4Val);
    POrw.TAX1Reb = StringToVal(ImportField,M4Val);
    POrw.TAX2Acc = ImportField;
    POrw.ChargeNumber = StringToLongint(ImportField);
    POrw.StockType = StringToInt(ImportField);
    POrw.OrdRow = StringToLongint(ImportField);
    POrw.TaxTemplateCode = ImportField;
    ImportPackedMatrix(TMr);
    PackRowFieldMatrix(POrw,"TaxMatrix",TMr);
    POrw.TREO = StringToInt(ImportField);
    POrw.OrderType = kOrderTypeDefault;
    
    POrw.PPNum = StringToInt(ImportField);
		//POrw.xClassification = ImportField;
		ImportField;
		POrw.EAN13Code = ImportField;
		POrw.RowWeight = ImportField;
		POrw.Size = ImportField;
		POrw.Metal = ImportField;
		POrw.Colour = ImportField;
		POrw.MajStoneDet = ImportField;
		POrw.BrcStr = ImportField;
		POrw.Gender = ImportField;
		POrw.Reference = ImportField;
		POrw.ConsgType = StringToInt(ImportField);
    
//    POrw.OrdNr = POr.OrdNr;
    MatRowPut(POr,rwcnt,POrw);
    rwcnt = rwcnt + 1;
  end;
  
  return;
end;

global
updating procedure ReadImportTagPOVc(string thetag)
begin
  record POVc POr;
  
  //logtext(0,"======================ReadImportTagPOVc");
  while (NextImportLine(false)) begin
    ReadImportTagPOVcRecord(POr);
    RecordImportStore(POr,false);
  end;
  
  return;
end;

global
function string 120 ReadRecordIdStrPOVc(Integer compnr,string thetag)
begin
  record POVc POr;
  
  //logtext(0,"======================ReadImportTagPOVc");
  POr.SerNr = StringToLongint(ImportField);
  ReadRecordIdStrPOVc = BuildRecordIdStr(POr,compnr);
  return;
end;

// Edit ************************** Monday, 11 September 2017 14:06:36// Edit ************************** Monday, 11 September 2017 14:06:37

procedure ReadImportTagIVVc3Record(record IVVc IVr)
begin
  record TaxMatrixVc TMr;
  string 255 tstr;
  row IVVc IVrw;
  integer rwcnt;
  
  RecordNew(IVr);
  IVr.SerNr = StringToLongint(ImportField);
  IVr.InvDate = StringToDate(ImportField);
  IVr.CustCode = ImportField;
  IVr.PayDate = StringToDate(ImportField);
  IVr.Addr0 = ImportField;
  IVr.Addr1 = ImportField;
  IVr.Addr2 = ImportField;
  IVr.Addr3 = ImportField;
  IVr.OurContact = ImportField;
  IVr.ClientContact = ImportField;
  IVr.ExportFlag = StringToInt(ImportField);
  IVr.PayDeal = ImportField;
  IVr.OrderNr = StringToLongint(ImportField);
  IVr.Prntdf = StringToInt(ImportField);
  IVr.OKFlag = StringToInt(ImportField);
  IVr.pdays = StringToLongint(ImportField);
  IVr.pdvrebt = StringToVal(ImportField,M4Qty);
  IVr.pdrdays = StringToLongint(ImportField);
  IVr.CustCat = ImportField;
  IVr.pdComment = ImportField;
  //IVr.x1 = 
  ImportField;
  IVr.InvType = StringToInt(ImportField);
  //IVr.xStatFlag = 
  ImportField;
  IVr.PriceList = ImportField;
  IVr.Objects = ImportField;
  IVr.InclVAT = StringToInt(ImportField);
  IVr.ARAcc = ImportField;
  IVr.InvComment = ImportField;
  IVr.CredInv = StringToLongint(ImportField);
  IVr.CredMark = ImportField;
  IVr.SalesMan = ImportField;
  IVr.ToRateB1 = StringToVal(ImportField,M4Rate);
  IVr.TransDate = StringToDate(ImportField);
  IVr.CurncyCode = ImportField;
  IVr.LangCode = ImportField;
  IVr.UpdStockFlag = StringToInt(ImportField);
  IVr.LastRemndr = StringToLongint(ImportField);
  IVr.LastRemDate = StringToDate(ImportField);
  IVr.Sign = ImportField;
  IVr.FrPrice = StringToVal(ImportField,M4Val);
  IVr.FrBase = StringToVal(ImportField,M4Val);
  IVr.FrItem = ImportField;
  IVr.FrVATCode = ImportField;
  IVr.FrObjects = ImportField;
  IVr.OrgCust = ImportField;
  IVr.FrGP = StringToVal(ImportField,M4Val);
  IVr.FrGPPercent = StringToVal(ImportField,M4Val);
  IVr.Sum0 = StringToVal(ImportField,M4Val);
  IVr.Sum1 = StringToVal(ImportField,M4Val);
  IVr.Sum2 = StringToVal(ImportField,M4Val);
  IVr.Sum3 = StringToVal(ImportField,M4Val);
  IVr.Sum4 = StringToVal(ImportField,M4Val);
  IVr.VATNr = ImportField;
  IVr.ShipDeal = ImportField;
  IVr.ShipAddr0 = ImportField;
  IVr.ShipAddr1 = ImportField;
  IVr.ShipAddr2 = ImportField;
  IVr.ShipAddr3 = ImportField;
  IVr.ShipMode = ImportField;
  IVr.Location = ImportField;
  IVr.PRCode = ImportField;
  IVr.FrSalesAcc = ImportField;
  IVr.TAX1Sum = StringToVal(ImportField,M4Val);
  IVr.CustVATCode = ImportField;
  IVr.RebCode = ImportField;
  IVr.CalcFinRef = ImportField;
  IVr.Phone = left(ImportField,20);
  IVr.Fax = ImportField;
  IVr.IntCode = ImportField;
  IVr.ARonTR = StringToInt(ImportField);
  IVr.CustOrdNr = ImportField;
  IVr.ExportedFlag = StringToInt(ImportField);
  IVr.BaseSum4 = StringToVal(ImportField,M4Val);
  IVr.FrRate = StringToVal(ImportField,M4Rate);
  IVr.ToRateB2 = StringToVal(ImportField,M4Rate);
  IVr.BaseRate1 = StringToVal(ImportField,M4Rate);
  IVr.BaseRate2 = StringToVal(ImportField,M4Rate);
  IVr.InvoiceNr = ImportField;
  IVr.DiscPerc = StringToVal(ImportField,M4Qty);
  IVr.DiscSum = StringToVal(ImportField,M4Val);
  IVr.TotGP = StringToVal(ImportField,M4Val);
  IVr.LocOKNr = StringToVal(ImportField,M4Qty);
  IVr.Invalid = StringToInt(ImportField);
  IVr.CreditCard = ImportField;
  IVr.AuthorizationCode = ImportField;
  IVr.RecValue = StringToVal(ImportField,M4Val);
  IVr.RetValue = StringToVal(ImportField,M4Val);
  IVr.FromBUQT = StringToInt(ImportField);
  IVr.Sorting = ImportField;
  IVr.NoInterestFlag = StringToInt(ImportField);
  IVr.NoRemndrFlag = StringToInt(ImportField);
  IVr.SVONr = StringToLongint(ImportField);
  IVr.InstallmentInv = StringToInt(ImportField);
  IVr.OfficialSerNr = ImportField;
  IVr.OfficialSerNr2 = ImportField;
  IVr.TotQty = StringToVal(ImportField,M4Qty);
  IVr.TotWeight = StringToVal(ImportField,M4Qty);
  IVr.TotVolume = StringToVal(ImportField,M4Qty);
  IVr.Commision = StringToVal(ImportField,M4Val);
  IVr.SumIncCom = StringToVal(ImportField,M4Val);
  IVr.InvAddr3 = ImportField;
  IVr.InvAddr4 = ImportField;
  IVr.DelAddr3 = ImportField;
  IVr.DelAddr4 = ImportField;
  IVr.DelAddrCode = ImportField;
  IVr.AutoGiro = StringToInt(ImportField);
  IVr.SalesGroup = ImportField;
  IVr.DisputedFlag = StringToInt(ImportField);
  IVr.NoColectionFlag = StringToInt(ImportField);
  IVr.QTNr = StringToLongint(ImportField);
  IVr.FiscalFlag = StringToInt(ImportField);
  IVr.JobNr = StringToLongint(ImportField);
  IVr.RetnValue = StringToVal(ImportField,M4Val);
  IVr.MachineName = ImportField;
  IVr.TransTime = StringToTime(ImportField);
  IVr.DrawerCode = ImportField;
  IVr.SiteX = ImportField;
  IVr.colnr = StringToInt(ImportField);
  IVr.StatVal = StringToVal(ImportField,M4Val);
  IVr.EInvFunc = StringToInt(ImportField);
  IVr.EInvExpFlag = StringToInt(ImportField);
  IVr.EInvExpDate = StringToDate(ImportField);
  IVr.EInvExpQty = StringToLongint(ImportField);
  IVr.ServiceDelDate = StringToDate(ImportField);
  IVr.Region = ImportField;
  IVr.RefStr = ImportField;
  IVr.TAX2Sum = StringToVal(ImportField,M4Val);
  IVr.pdvrebt2 = StringToVal(ImportField,M4Qty);
  IVr.pdrdays2 = StringToLongint(ImportField);
  IVr.NoTax1 = StringToInt(ImportField);
  IVr.NoTax2 = StringToInt(ImportField);
  IVr.FreightCode = ImportField;
  IVr.BankCode = ImportField;
  IVr.InvalidDate = StringToDate(ImportField);
  IVr.InvalidLocOKNr = StringToVal(ImportField,M4Qty);
  IVr.NoEInvoice = StringToInt(ImportField);
  IVr.TaxAuthID = ImportField;
  IVr.TaxAuthIDCC = ImportField;
  IVr.BranchID = ImportField;
  IVr.Status = StringToInt(ImportField);
  IVr.NoTAXonVAT = StringToLongint(ImportField);
  IVr.TotalwoTAX = StringToInt(ImportField);
  IVr.CredManNr = StringToLongint(ImportField);
  IVr.RegDate = StringToDate(ImportField);
  IVr.RegTime = StringToTime(ImportField);
  IVr.COCUSerNr = StringToLongint(ImportField);
  IVr.CAE = ImportField;
  IVr.CAEExpiry = StringToDate(ImportField);
  IVr.VINr = StringToLongint(ImportField);
  IVr.TerminalID = ImportField;
  IVr.OrderType = StringToInt(ImportField);
  IVr.FiscalDeviceSeqNr = StringToLongint(ImportField);
  IVr.CCTransID = ImportField;
  IVr.AcceptanceStatus = StringToInt(ImportField);
  ImportPackedMatrix(TMr);
  PackFieldMatrix(IVr,"TaxMatrix",TMr);
  IVr.CustTaxTemplateCode = ImportField;
  IVr.RoyaltyIVFlag = StringToInt(ImportField);
  IVr.LoyaltyCardNr = ImportField;
  IVr.LCMLevel = ImportField;
  IVr.Points = StringToVal(ImportField,M4Val);
  IVr.DepCode = ImportField;
  IVr.SelfBilling = StringToInt(ImportField);
  IVr.Hash = ImportField;
  IVr.HashKeyVersion = StringToInt(ImportField);
  IVr.InvCountry = ImportField;
  IVr.DelCountry = ImportField;
  IVr.TREONr = StringToLongint(ImportField);
  IVr.ORCONr = StringToLongint(ImportField);
  IVr.CAEAStartDate = StringToDate(ImportField);
  IVr.CAEAExpiryDate = StringToDate(ImportField);
  IVr.CAEAFlag = StringToInt(ImportField);
  IVr.FInvExpFlag = StringToInt(ImportField);
  IVr.GroupInv = StringToInt(ImportField);
  IVr.Suspended = StringToInt(ImportField);
  IVr.AcceptanceBy = ImportField;
  IVr.RetNr = StringToLongint(ImportField);
  IVr.TaxAdminServSignatureTimeStamp = ImportField;
  IVr.TaxAdminServCertificateNr = ImportField;
  IVr.TaxAdminServSeal = ImportField;
  IVr.CredOfficialSerNr = ImportField;
  IVr.AcceptanceFYI = ImportField;
  
  IVr.NotForReport = StringToInt(ImportField);
  IVr.ReceiptNrForReturn = ImportField;
  IVr.UsedBirthRebateH = StringToInt(ImportField);
  IVr.LinkLoyaltyCardNr = ImportField;
  
  rwcnt = 0;
  
  while (NextImportLine(false)) begin
    ClearRow(IVr,IVrw,1);
    IVrw.stp = StringToInt(ImportField);
    IVrw.ArtCode = ImportField;
    IVrw.Quant = StringToVal(ImportField,M4UVal);
    IVrw.Price = StringToVal(ImportField,M423Val);
    IVrw.Sum = StringToVal(ImportField,M4Val);
    IVrw.vRebate = StringToVal(ImportField,M41Val);
    IVrw.SalesAcc = ImportField;
    IVrw.Objects = ImportField;
    IVrw.OrdRow = StringToLongint(ImportField);
    IVrw.BasePrice = StringToVal(ImportField,M4Val);
    IVrw.rowGP = StringToVal(ImportField,M4Val);
    IVrw.FIFO = StringToVal(ImportField,M45Val);
    IVrw.Spec = ImportField;
    IVrw.VATCode = ImportField;
    IVrw.Recepy = ImportField;
    IVrw.SerialNr = ImportField;
    IVrw.PriceFactor = StringToVal(ImportField,M45Val);
    IVrw.VARList = ImportField;
    IVrw.CUPNr = StringToLongint(ImportField);
    IVrw.FIFORowVal = StringToVal(ImportField,M45Val);
    IVrw.Coefficient = StringToVal(ImportField,M45Val);
    IVrw.CuAccCode = ImportField;
    IVrw.ExciseNr = ImportField;
    IVrw.PeriodCode = ImportField;
    IVrw.UnitCode = ImportField;
    IVrw.UnitFactQuant = StringToVal(ImportField,M4UVal);
    IVrw.UnitFactPrice = StringToVal(ImportField,M423Val);
    IVrw.UnitXval = StringToVal(ImportField,M4UVal);
    IVrw.UnitYval = StringToVal(ImportField,M4UVal);
    IVrw.UnitZval = StringToVal(ImportField,M4UVal);
    IVrw.VECode = ImportField;
    IVrw.CreditCard = ImportField;
    IVrw.AuthorizationCode = ImportField;
    IVrw.PosCode = ImportField;
    IVrw.CurncyCode = ImportField;
    IVrw.FrRate = StringToVal(ImportField,M4Rate);
    IVrw.ToRateB1 = StringToVal(ImportField,M4Rate);
    IVrw.ToRateB2 = StringToVal(ImportField,M4Rate);
    IVrw.BaseRate1 = StringToVal(ImportField,M4Rate);
    IVrw.BaseRate2 = StringToVal(ImportField,M4Rate);
    IVrw.PayMode = ImportField;
    IVrw.GCNr = StringToLongint(ImportField);
    IVrw.CustOrdNr = ImportField;
    IVrw.RepaExVAT = StringToVal(ImportField,M4Val);
    IVrw.BasePriceB2 = StringToVal(ImportField,M4Val);
    IVrw.TAX2Code = ImportField;
    IVrw.TAX2Prc = StringToVal(ImportField,M423Val);
    IVrw.TAX2Reb = StringToVal(ImportField,M4Val);
    IVrw.TAX1Reb = StringToVal(ImportField,M4Val);
    IVrw.TAX2Acc = ImportField;
    IVrw.CreditedRow = StringToLongint(ImportField);
    IVrw.NotUpdStockFlag = StringToInt(ImportField);
    IVrw.CUServiceHistNr = StringToLongint(ImportField);
    IVrw.CUServiceUntilDate = StringToDate(ImportField);
    IVrw.ServiceDelDate = StringToDate(ImportField);
    IVrw.Location = ImportField;
    IVrw.Comment = ImportField;
    IVrw.DiscApprovedBy = ImportField;
    IVrw.Perceptions = StringToInt(ImportField);
    IVrw.VoidedRowNr = StringToLongint(ImportField);
    IVrw.VoidedSign = ImportField;
    IVrw.ovst = StringToInt(ImportField);
    IVrw.Withholdings = StringToInt(ImportField);
    IVrw.WHTax = ImportField;
    IVrw.CCTransID = ImportField;
    ImportPackedMatrix(TMr);
    PackRowFieldMatrix(IVrw,"TaxMatrix",TMr);
    IVrw.TaxTemplateCode = ImportField;
    IVrw.ResUsage = ImportField;
    IVrw.MBRCode = ImportField;
    IVrw.ChequeNr = StringToLongint(ImportField);
    IVrw.CheckNr = ImportField;
    IVrw.Points = StringToVal(ImportField,M4Val);
    IVrw.SalesAssistant = ImportField;
    IVrw.CCTimestamp = ImportField;
    IVrw.MotherArtCode = ImportField;
    IVrw.RecipeQuant = StringToVal(ImportField,M4Qty);
    IVrw.OrdNr = StringToLongint(ImportField);
    IVrw.IVNr = StringToLongint(ImportField);
    IVrw.RetRow = StringToLongint(ImportField);
    IVrw.QTRow = StringToLongint(ImportField);
    IVrw.SHNr = StringToLongint(ImportField);
    IVrw.SHRow = StringToLongint(ImportField);
    IVrw.CustArtCode = ImportField;
    IVrw.Salesmen = ImportField;
    IVrw.CredOfficialSerNr = ImportField;
    IVrw.MotherNr = ImportField;
    IVrw.AEStatus = StringToInt(ImportField);
    
    IVrw.FIFOCur = StringToVal(ImportField,M45Val);
    IVrw.FIFORowValCur = StringToVal(ImportField,M45Val);
    IVrw.CurncyCodeCur = ImportField;
    IVrw.IVForRetNr = StringToLongint(ImportField);
    IVrw.RetFromComp = ImportField;
    IVrw.UsedBirthRebate = StringToInt(ImportField);
		MatRowPut(IVr,rwcnt,IVrw);
    rwcnt = rwcnt + 1;
  end;
  return;
end;

global
updating procedure ReadImportTagIVVc3(string thetag)
begin
  record IVVc IVr;
  
  while (NextImportLine(false)) begin
    ReadImportTagIVVc3Record(IVr);
    RecordImportStore(IVr,false);
  end;
  
  return;
end;

global
function string 120 ReadRecordIdStrIVVc3(Integer compnr,string thetag)
begin
  record IVVc IVr;
  
  IVr.SerNr = StringToLongint(ImportField);
  ReadRecordIdStrIVVc3 = BuildRecordIdStr(IVr,compnr);
  return;
end;
// Edit ************************** Monday, 11 September 2017 13:25:25// Edit ************************** Monday, 11 September 2017 13:25:26

procedure ReadImportTaguser2Record(record UserVc Userr)
begin
  string 255 tstr;
  row UserVc Userrw;
  integer rwcnt;
  
  RecordNew(Userr);
  
  ImportField;
  ImportField; // NewAutosyncRegister
  ImportField; // NewAutosyncRegister
  Userr.Code = ImportField;
  Userr.Name = ImportField;
  Userr.OldPassWord = ImportField;
  Userr.AccessGroup = ImportField;
  Userr.CurOurContact = ImportField;
  Userr.LastOrdNr = StringToLongint(ImportField);
  Userr.LastShipNr = StringToLongint(ImportField);
  Userr.LastInvNr = StringToLongint(ImportField);
  Userr.LastPurNr = StringToLongint(ImportField);
  Userr.LastPayNr = StringToLongint(ImportField);
  Userr.LastTRNr = StringToLongint(ImportField);
  Userr.LastVINr = StringToLongint(ImportField);
  Userr.LastOPNr = StringToLongint(ImportField);
  Userr.TerminatedFlag = StringToInt(ImportField);
  Userr.Job = ImportField;
  Userr.JobGroup = ImportField;
  Userr.DisAllowOther = StringToInt(ImportField);
  Userr.Location = ImportField;
  Userr.Machines = ImportField;
  Userr.Tiller = ImportField;
  Userr.Bonus = StringToVal(ImportField,M4Val);
  Userr.CUCode = ImportField;
  Userr.CUName = ImportField;
  Userr.Phone1 = ImportField;
  Userr.Phone2 = ImportField;
  Userr.Fax1 = ImportField;
  Userr.Fax2 = ImportField;
  Userr.Comment = ImportField;
  Userr.PersAcc = ImportField;
  Userr.PersObjx = ImportField;
  Userr.BankAcc = ImportField;
  Userr.BankName = ImportField;
  Userr.CostPrHour = StringToVal(ImportField,M4Val);
  Userr.PricePrHour = StringToVal(ImportField,M4Val);
  Userr.emailAddr = ImportField;
  Userr.IDCode = ImportField;
  Userr.Spec = ImportField;
  Userr.limitedAccess = StringToInt(ImportField);
  Userr.NewPassWord = ImportField;
  Userr.LangCode = ImportField;
  Userr.SalesGroup = ImportField;
  Userr.Department = ImportField;
  Userr.LastCLInNr = StringToLongint(ImportField);
  Userr.LastCLOutNr = StringToLongint(ImportField);
  Userr.FTPLogin = StringToInt(ImportField);
  Userr.WebConf = ImportField;
  Userr.WebStartPage = ImportField;
  Userr.CostAcc = ImportField;
  Userr.LastIVCashNr = StringToLongint(ImportField);
  Userr.Closed = StringToInt(ImportField);
  Userr.OnlyVoiceLogin = StringToInt(ImportField);
  Userr.UserEditCtlf = StringToInt(ImportField);
  Userr.DateOrder = StringToInt(ImportField);
  Userr.LeadingZDay = StringToInt(ImportField);
  Userr.LeadingZMonth = StringToInt(ImportField);
  Userr.LeadingCentury = StringToInt(ImportField);
  Userr.DateSep = ImportField;
  Userr.DecimalPt = ImportField;
  Userr.ThousandSep = ImportField;
  Userr.ForceTimeEntry = StringToInt(ImportField);
  Userr.DateCreated = StringToDate(ImportField);
  Userr.Supervisor = ImportField;
  Userr.OneFunction = ImportField;
  Userr.TypeOfUser = StringToInt(ImportField);
  Userr.thousSepf = StringToInt(ImportField);
  Userr.CanUseOS = StringToInt(ImportField);
  Userr.Magic = StringToLongint(ImportField);
  Userr.Newf = StringToInt(ImportField);
  Userr.LastTTRNr = StringToLongint(ImportField);
  Userr.CustCode = ImportField;
  Userr.WindowType = StringToInt(ImportField);
  Userr.RegistrationNumber = StringToLongint(ImportField);
  Userr.StartLevel = StringToInt(ImportField);
  Userr.ServLocation = ImportField;
  Userr.ReservLocAccess = ImportField;
  Userr.ReservLocation = ImportField;
  Userr.MinPLCode = ImportField;
  Userr.Magic2 = StringToLongint(ImportField);
  Userr.DiscPassword = ImportField;
  Userr.LastOfficialSerNr = ImportField;
  Userr.LastDropSHNr = StringToLongint(ImportField);
  Userr.PasswordNeverExpires = StringToInt(ImportField);
  Userr.LastRestAccNr = StringToLongint(ImportField);
  Userr.LastPONr = StringToLongint(ImportField);
  
  Userr.UserLocations = ImportField;
  Userr.Brand = ImportField;
  Userr.IsSalesMan = StringToInt(ImportField);
  
  rwcnt = 0;
  
  while (NextImportLine(false)) begin
    ClearRow(Userr,Userrw,1);
    Userrw.Code = ImportField;
    Userrw.PRCode = ImportField;
    Userrw.Comment = ImportField;
    MatRowPut(Userr,rwcnt,Userrw);
    rwcnt = rwcnt + 1;
  end;
  
  return;
end;

global
updating procedure ReadImportTaguser2(string thetag)
begin
  record UserVc Userr;
  
  //logtext(0,"======================ReadImportTaguser2");
  while (NextImportLine(false)) begin
    ReadImportTaguser2Record(Userr);
    RecordImportStore(Userr,false);
  end;
  
  return;
end;

global
function string 120 ReadRecordIdStruser2(Integer compnr,string thetag)
begin
  record UserVc Userr;
  
  //logtext(0,"======================ReadImportTaguser2");
  Userr.Code = ImportField;
  ReadRecordIdStruser2 = BuildRecordIdStr(Userr,compnr);
  return;
end;

// Edit ************************** Monday, 11 September 2017 13:39:08// Edit ************************** Monday, 11 September 2017 13:39:09

procedure ReadImportTagcu4Record(var record CUVc CUr)
begin
	string 255 tstr;
	
  RecordNew(CUr);
  
  ImportField; // NewAutosyncRegister
  ImportField; // NewAutosyncRegister
  ImportField; // NewAutosyncRegister
  CUr.Code = ImportField;
  CUr.Name = ImportField;
  CUr.Person = ImportField;
  CUr.WarnText1 = ImportField;
  CUr.InvAddr0 = ImportField;
  CUr.InvAddr1 = ImportField;
  CUr.InvAddr2 = ImportField;
  CUr.InvoiceToCode = ImportField;
  CUr.DelAddr0 = ImportField;
  CUr.DelAddr1 = ImportField;
  CUr.DelAddr2 = ImportField;
  CUr.Phone = ImportField;
  CUr.Fax = ImportField;
  CUr.CustCat = ImportField;
  CUr.Comment = ImportField;
  CUr.PayDeal = ImportField;
  CUr.ExportFlag = StringToInt(ImportField);
  CUr.AccFlag = StringToInt(ImportField);
  CUr.Objects = ImportField;
  CUr.InterestFlag = StringToInt(ImportField);
  CUr.VATNr = ImportField;
  CUr.CountryCode = ImportField;
  CUr.SearchKey = ImportField;
  CUr.RemndrFlag = StringToInt(ImportField);
  CUr.LangCode = ImportField;
  CUr.CurncyCode = ImportField;
  CUr.OnAccount = StringToInt(ImportField);
  CUr.SalesMan = ImportField;
  CUr.CreditLimit = StringToVal(ImportField,M4Val);
  CUr.ShipDeal = ImportField;
  CUr.ShipMode = ImportField;
  CUr.VATCode = ImportField;
  CUr.Department = ImportField;
  CUr.OrderComment = ImportField;
  CUr.FreightNr = ImportField;
  CUr.PLCode = ImportField;
  CUr.RebCode = ImportField;
  CUr.Classification = ImportField;
  CUr.blockedFlag = StringToInt(ImportField);
  CUr.DateChanged = StringToDate(ImportField);
  CUr.AccOperator = ImportField;
  CUr.SecAccount = ImportField;
  CUr.BankAccount = ImportField;
  CUr.JobDesc = ImportField;
  CUr.CustType = StringToInt(ImportField);
  CUr.ComCode = ImportField;
  CUr.Sorting = ImportField;
  CUr.RegNr1 = ImportField;
  CUr.RegNr2 = ImportField;
  CUr.CPRNr = ImportField;
  CUr.wwwAddr = ImportField;
  CUr.CompItemCode = ImportField;
  CUr.ANACode = ImportField;
  CUr.EDIFlag = StringToInt(ImportField);
  CUr.eMail = ImportField;
  CUr.IntRate = StringToVal(ImportField,M4Val);
  CUr.TheirCode = ImportField;
  CUr.PriceBasedOn = StringToInt(ImportField);
  CUr.DeliveryBasedOn = StringToInt(ImportField);
  CUr.SalesGroup = ImportField;
  CUr.SortCode = ImportField;
  CUr.AllowLogin = StringToInt(ImportField);
  CUr.Password = StringToLongint(ImportField);
  CUr.FTPLogin = StringToInt(ImportField);
  CUr.DateCreated = StringToDate(ImportField);
  CUr.EGOFlag = StringToInt(ImportField);
  CUr.InvAddr3 = ImportField;
  CUr.DelAddr3 = ImportField;
  //CUr.xArea = 
  ImportField;
  //CUr.xAreaName = 
  ImportField;
  CUr.InvAddr4 = ImportField;
  CUr.DelAddr4 = ImportField;
  CUr.WebConf = ImportField;
  CUr.WebStartPage = ImportField;
  CUr.FreightCode = ImportField;
  CUr.MainDispGroup = ImportField;
  CUr.AutoGiro = StringToInt(ImportField);
  CUr.OnHoldFlag = StringToInt(ImportField);
  CUr.ColectionFlag = StringToInt(ImportField);
  CUr.LocationCode = ImportField;
  CUr.WebDisplays = ImportField;
  CUr.Mobile = ImportField;
  CUr.NoLetterPosting = StringToInt(ImportField);
  CUr.FiscalFlag = StringToInt(ImportField);
  CUr.UserStr1 = ImportField;
  CUr.UserStr2 = ImportField;
  CUr.UserStr3 = ImportField;
  CUr.UserStr4 = ImportField;
  CUr.UserStr5 = ImportField;
  CUr.UserVal1 = StringToVal(ImportField,M4UVal);
  CUr.UserVal2 = StringToVal(ImportField,M4UVal);
  CUr.UserVal3 = StringToVal(ImportField,M4UVal);
  CUr.UserDate1 = StringToDate(ImportField);
  CUr.UserDate2 = StringToDate(ImportField);
  CUr.UserDate3 = StringToDate(ImportField);
  CUr.AccAP = ImportField;
  CUr.AccCost = ImportField;
  CUr.Bank = ImportField;
  CUr.OnAccAccAP = ImportField;
  CUr.MinOrdSum = StringToVal(ImportField,M4Val);
  CUr.PurchAcc = ImportField;
  CUr.RefStr = ImportField;
  CUr.WithPayMode = ImportField;
  CUr.RetainPrc = ImportField;
  CUr.NoMailPosting = StringToInt(ImportField);
  CUr.VEType = StringToInt(ImportField);
  CUr.CUType = StringToInt(ImportField);
  CUr.VEPayDeal = ImportField;
  CUr.VEShipDeal = ImportField;
  CUr.VEShipMode = ImportField;
  CUr.VECreditLimit = StringToVal(ImportField,M4Val);
  CUr.VEObjects = ImportField;
  CUr.VEWarnText1 = ImportField;
  CUr.VEFactoring = ImportField;
  CUr.VECurncyCode = ImportField;
  CUr.VECustID = ImportField;
  CUr.VEVATCode = ImportField;
  CUr.NoFactoringFlag = StringToInt(ImportField);
  CUr.NoRepa = StringToInt(ImportField);
  CUr.VECat = ImportField;
  CUr.IBANCode = ImportField;
  //CUr.xEInvAddr = ImportField;
  ImportField;
  //CUr.xEInvFunc = StringToInt(ImportField);
  ImportField;
  //CUr.xAcceptanceGroup = ImportField;
  ImportField;
  CUr.WebServiceChannel = StringToInt(ImportField);
  CUr.SkypeName = ImportField;
  CUr.Region = ImportField;
  CUr.NoTax1 = StringToInt(ImportField);
  CUr.NoTax2 = StringToInt(ImportField);
  CUr.GuestType = StringToInt(ImportField);
  CUr.PassportNr = ImportField;
  CUr.Profesion = ImportField;
  CUr.Nationality = ImportField;
  CUr.BirthDate = StringToDate(ImportField);
  CUr.Gender = StringToInt(ImportField);
  CUr.Newspaper = ImportField;
  CUr.Smoking = StringToInt(ImportField);
  CUr.DocType = ImportField;
  CUr.Blacklist = StringToInt(ImportField);
  CUr.MarStatus = StringToInt(ImportField);
  CUr.Passphrase = ImportField;
  CUr.SIPCode = ImportField;
  CUr.AltPhone = ImportField;
  CUr.Comment0 = ImportField;
  CUr.Comment1 = ImportField;
  CUr.Comment2 = ImportField;
  CUr.Title = ImportField;
  CUr.Salutation1 = ImportField;
  CUr.Salutation2 = ImportField;
  CUr.Salutation3 = ImportField;
  //CUr.xUserCode = ImportField;
  ImportField;
  CUr.DealerType = StringToInt(ImportField);
  CUr.GroupInv = StringToInt(ImportField);
  CUr.AddressBooks = ImportField;
  CUr.Extension = ImportField;
  CUr.TourOperator = ImportField;
  CUr.Agent = ImportField;
  CUr.DietRemarks = ImportField;
  CUr.RequirementRemarks = ImportField;
  CUr.AgeStatus = StringToInt(ImportField);
  CUr.Age = StringToLongint(ImportField);
  CUr.DefGuestPayMode = ImportField;
  CUr.BookOrigin = ImportField;
  CUr.TaxTemplateCode = ImportField;
  CUr.VETaxTemplateCode = ImportField;
  CUr.EmployeeType = StringToInt(ImportField);
  CUr.Ethnicity = ImportField;
  CUr.BirthPlace = ImportField;
  CUr.IDNr = ImportField;
  CUr.VisaType = ImportField;
  CUr.VisaNr = ImportField;
  CUr.VisaExpiry = StringToDate(ImportField);
  CUr.MilitaryDocNr = ImportField;
  CUr.SocialSecurityNr = ImportField;
  CUr.DisabledStatus = StringToInt(ImportField);
  CUr.Disability = ImportField;
  CUr.HealthStatus = ImportField;
  CUr.HealthIssues = ImportField;
  CUr.DriverLicenceCategory = ImportField;
  CUr.SchoolName = ImportField;
  CUr.EducationalDegree = ImportField;
  CUr.EducationalMajor = ImportField;
  CUr.EducationStatus = StringToInt(ImportField);
  CUr.PreviousEmployer = ImportField;
  CUr.PreviousJobTitle = ImportField;
  CUr.Birthday = ImportField;
  CUr.VERebCode = ImportField;
  CUr.SelfBilling = StringToInt(ImportField);
  CUr.DelCountry = ImportField;
  CUr.VEInvoiceToCode = ImportField;
  CUr.MainPartner = ImportField;
  CUr.CreditLimitDays = StringToLongint(ImportField);
  CUr.VECreditLimitDays = StringToLongint(ImportField);
  ImportField;
  
  
  CUr.CreateSalesMan = ImportField;
  CUr.CreateLocation = ImportField;
  CUr.CreateMachineCode = ImportField;
  CUr.CreateComment = ImportField;
  CUr.CreateCompany = StringToInt(ImportField);
  CUr.PlanShipDays = StringToInt(ImportField);
  CUr.AllowSendSMS = StringToInt(ImportField);
  CUr.AllowSendeMail = StringToInt(ImportField);
  CUr.AllowSendCall = StringToInt(ImportField);
  CUr.AllowSendkMail = StringToInt(ImportField);
  CUr.SuprDate = StringToDate(ImportField);
  CUr.WedDate = StringToDate(ImportField);
  CUr.ItaldizainSite = StringToInt(ImportField);
  CUr.OtherInformation = StringToInt(ImportField);
  CUr.Instagram = StringToInt(ImportField);
  CUr.Facebook = StringToInt(ImportField);
  CUr.Advertising = StringToInt(ImportField);
  CUr.Radio = StringToInt(ImportField);
  CUr.OtherInformationSource = ImportField;
  CUr.AllowWhatsApp = StringToInt(ImportField);
  CUr.PhoneDublFlag = StringToInt(ImportField);
  CUr.EmailDublFlag = StringToInt(ImportField);
  CUr.BirthRebateInComp = StringToInt(ImportField);
  CUr.BirthRebateLastDate = StringToDate(ImportField);
  CUr.BirthRebateTransNr = StringToLongint(ImportField);
  
  /*while (NextImportLine(false)) begin
    tstr = ImportField;
    if nonblank(tstr) then begin
      AddToText(tstr,CUr);
      if (ImportIntoText(CUr)) then begin
      end;
    end;
  end;*/
  
  return;
end;

global
updating procedure ReadImportTagcu4(string thetag)
begin
  record CUVc CUr;
  
  //logtext(0,"======================ReadImportTagcu4");
  while (NextImportLine(false)) begin
    ReadImportTagcu4Record(CUr);
    RecordImportStore(CUr,false);
  end;
  
  return;
end;

global
function string 120 ReadRecordIdStrcu4(Integer compnr,string thetag)
begin
  record CUVc CUr;
  
  //logtext(0,"======================ReadImportTagcu4");
  CUr.Code = ImportField;
  ReadRecordIdStrcu4 = BuildRecordIdStr(CUr,compnr);
  return;
end;// Edit ************************** Monday, 11 September 2017 14:21:11
// Edit ************************** Monday, 11 September 2017 13:42:43// Edit ************************** Monday, 11 September 2017 13:42:44

procedure ReadImportTagstockmov1Record(record StockMovVc StockMovr)
begin
  string 255 tstr;
  row StockMovVc StockMovrw;
  integer rwcnt;
  
  RecordNew(StockMovr);
  StockMovr.SerNr = StringToLongint(ImportField);
  StockMovr.RegDate = StringToDate(ImportField);
  StockMovr.Comment = ImportField;
  StockMovr.FrLocation = ImportField;
  StockMovr.ToLocation = ImportField;
  StockMovr.OKFlag = StringToInt(ImportField);
  StockMovr.Sign = ImportField;
  StockMovr.CurncyCode = ImportField;
  StockMovr.ToRateB1 = StringToVal(ImportField,M4Rate);
  StockMovr.TransDate = StringToDate(ImportField);
  StockMovr.ExportedFlag = StringToInt(ImportField);
  StockMovr.FrRate = StringToVal(ImportField,M4Rate);
  StockMovr.ToRateB2 = StringToVal(ImportField,M4Rate);
  StockMovr.BaseRate1 = StringToVal(ImportField,M4Rate);
  StockMovr.BaseRate2 = StringToVal(ImportField,M4Rate);
  StockMovr.TotQty = StringToVal(ImportField,M4Qty);
  StockMovr.FrLocOKNr = StringToVal(ImportField,M4Qty);
  StockMovr.ToLocOKNr = StringToVal(ImportField,M4Qty);
  StockMovr.IntORNo = StringToLongint(ImportField);
  StockMovr.TotWeight = StringToVal(ImportField,M4Qty);
  StockMovr.TotVolume = StringToVal(ImportField,M4Qty);
  StockMovr.Objects = ImportField;
  StockMovr.FrPos = ImportField;
  StockMovr.ToPos = ImportField;
  StockMovr.OtherExtraCosts = StringToVal(ImportField,M423Val);
  StockMovr.ProdSerNr = StringToLongint(ImportField);
  StockMovr.RefStr = ImportField;
  StockMovr.DeliveryMan = ImportField;
  StockMovr.Prntdf = StringToInt(ImportField);
  StockMovr.ShipMode = ImportField;
  StockMovr.ShipDeal = ImportField;
  StockMovr.Sorting = ImportField;
  StockMovr.SHNr = StringToLongint(ImportField);
  StockMovr.ManualPick = StringToInt(ImportField);
  StockMovr.ToForkLiftQue = StringToInt(ImportField);
  StockMovr.FileName = ImportField;
  StockMovr.TransNr = StringToLongint(ImportField);
  StockMovr.ThrouLocation = ImportField;
  StockMovr.SentOKFlag = StringToInt(ImportField);
  StockMovr.Reserved = StringToInt(ImportField);
  StockMovr.SentTransDate = StringToDate(ImportField);
  StockMovr.FrThrouLocOKNr = StringToVal(ImportField,M4Qty);
  StockMovr.ToThrouLocOKNr = StringToVal(ImportField,M4Qty);
  StockMovr.FreightCode = ImportField;
  StockMovr.FreightCompanyRegNr = ImportField;
  StockMovr.FreightCompany = ImportField;
  StockMovr.TruckInfo = ImportField;
  StockMovr.Driver = ImportField;
  StockMovr.CMRText = ImportField;
  StockMovr.TotSentQty = StringToVal(ImportField,M4Qty);
  StockMovr.OrdFlag = StringToInt(ImportField);
  StockMovr.PlanSendDate = StringToDate(ImportField);
  StockMovr.PlanSendTime = StringToTime(ImportField);
  StockMovr.PlanDurationDays = StringToInt(ImportField);
  StockMovr.PlanDurationTime = StringToTime(ImportField);
  StockMovr.PlanArrDate = StringToDate(ImportField);
  StockMovr.PlanArrTime = StringToTime(ImportField);
  StockMovr.ActSendDate = StringToDate(ImportField);
  StockMovr.ActSendTime = StringToTime(ImportField);
  StockMovr.ActDurationDays = StringToInt(ImportField);
  StockMovr.ActDurationTime = StringToTime(ImportField);
  StockMovr.ActArrDate = StringToDate(ImportField);
  StockMovr.ActArrTime = StringToTime(ImportField);
  StockMovr.OrdTransDate = StringToDate(ImportField);
  StockMovr.TreatedFlag = StringToInt(ImportField);
  StockMovr.Invalid = StringToInt(ImportField);
  StockMovr.InvalidDate = StringToDate(ImportField);
  StockMovr.Reason = ImportField;
  StockMovr.ThrouPosition = ImportField;
  StockMovr.TerminalID = ImportField;
  StockMovr.BranchID = ImportField;
  StockMovr.OfficialSerNr = ImportField;
  StockMovr.Hash = ImportField;
  StockMovr.HashKeyVersion = StringToInt(ImportField);
  StockMovr.RegTime = StringToTime(ImportField);
  StockMovr.LocalMachineCode = ImportField;
  StockMovr.NotForReport = StringToInt(ImportField);
  StockMovr.SentCoin = StringToInt(ImportField);
  StockMovr.TypeCoin = StringToInt(ImportField);
  StockMovr.SentDateCoin = StringToDate(ImportField);
  StockMovr.FileNameCoin = ImportField;
  StockMovr.TransBillCoin = ImportField;
  
  rwcnt = 0;
  
  while (NextImportLine(false)) begin
    ClearRow(StockMovr,StockMovrw,1);
    StockMovrw.ArtCode = ImportField;
    StockMovrw.Quant = StringToVal(ImportField,M4UVal);
    StockMovrw.Spec = ImportField;
    StockMovrw.SerialNr = ImportField;
    StockMovrw.NewPrice = StringToVal(ImportField,M45Val);
    StockMovrw.ExtraSCost = ImportField;
    StockMovrw.OldPrice = StringToVal(ImportField,M45Val);
    StockMovrw.FIFORowVal = StringToVal(ImportField,M45Val);
    StockMovrw.BasePrice = StringToVal(ImportField,M423Val);
    StockMovrw.Coefficient = StringToVal(ImportField,M45Val);
    StockMovrw.IntORRow = StringToLongint(ImportField);
    StockMovrw.Objects = ImportField;
    StockMovrw.UnitXval = StringToVal(ImportField,M4UVal);
    StockMovrw.UnitYval = StringToVal(ImportField,M4UVal);
    StockMovrw.UnitZval = StringToVal(ImportField,M4UVal);
    StockMovrw.FrPosCode = ImportField;
    StockMovrw.ToPosCode = ImportField;
    StockMovrw.SHRow = StringToLongint(ImportField);
    StockMovrw.SentQuant = StringToVal(ImportField,M4UVal);
    StockMovrw.OrdQuant = StringToVal(ImportField,M4UVal);
    StockMovrw.SentNewPrice = StringToVal(ImportField,M45Val);
    StockMovrw.SentExtraSCost = ImportField;
    StockMovrw.SentOldPrice = StringToVal(ImportField,M45Val);
    StockMovrw.SentFIFORowVal = StringToVal(ImportField,M45Val);
    StockMovrw.ThrouPosCode = ImportField;
    StockMovrw.BarCode = ImportField;
    MatRowPut(StockMovr,rwcnt,StockMovrw);
    rwcnt = rwcnt + 1;
  end;
  
  return;
end;

global
updating procedure ReadImportTagstockmov1(string thetag)
begin
  record StockMovVc StockMovr;
  
  //logtext(0,"======================ReadImportTagstockmov1");
  while (NextImportLine(false)) begin
    ReadImportTagstockmov1Record(StockMovr);
    RecordImportStore(StockMovr,false);
  end;
  
  return;
end;

global
function string 120 ReadRecordIdStrstockmov1(Integer compnr,string thetag)
begin
  record StockMovVc StockMovr;
  
   //logtext(0,"======================ReadImportTagstockmov1");
  StockMovr.SerNr = StringToLongint(ImportField);
  ReadRecordIdStrstockmov1 = BuildRecordIdStr(StockMovr,compnr);
  return;
  
end;

// Edit ************************** Monday, 11 September 2017 13:43:53// Edit ************************** Monday, 11 September 2017 13:43:55

procedure ReadImportTagORVcRecord(record ORVc ORr)
begin
  record TaxMatrixVc TMr;
  row ORVc ORrw;
  integer rwcnt;
  
  RecordNew(ORr);
  ORr.SerNr = StringToLongint(ImportField);
  ORr.OrdDate = StringToDate(ImportField);
  ORr.CustCode = ImportField;
  ORr.Addr0 = ImportField;
  ORr.Addr1 = ImportField;
  ORr.Addr2 = ImportField;
  ORr.Addr3 = ImportField;
  ORr.OurContact = ImportField;
  ORr.CustContact = ImportField;
  ORr.ExportFlag = StringToInt(ImportField);
  ORr.InvFlag = StringToInt(ImportField);
  ORr.ShipFlag = StringToInt(ImportField);
  ORr.Prntdf = StringToInt(ImportField);
  ORr.PayDeal = ImportField;
  ORr.CustCat = ImportField;
  ORr.InvMark = StringToInt(ImportField);
  ORr.ShipMark = StringToInt(ImportField);
  ORr.Objects = ImportField;
  ORr.ShipMode = ImportField;
  ORr.OrderStatus = StringToInt(ImportField);
  ORr.PlanShip = ImportField;
  ORr.SalesMan = ImportField;
  ORr.Sign = ImportField;
  ORr.ShipDeal = ImportField;
  ORr.ShipAddr0 = ImportField;
  ORr.ShipAddr1 = ImportField;
  ORr.ShipAddr2 = ImportField;
  ORr.ShipAddr3 = ImportField;
  ORr.CurncyCode = ImportField;
  ORr.LangCode = ImportField;
  ORr.InvoiceToCode = ImportField;
  ORr.Closed = StringToInt(ImportField);
  ORr.ToRateB1 = StringToVal(ImportField,M4Rate);
  ORr.BuildOn = StringToInt(ImportField);
  ORr.PRCode = ImportField;
  ORr.Comment = ImportField;
  ORr.InvOnlyOnFull = StringToInt(ImportField);
  ORr.DownPaySent = StringToVal(ImportField,M4Val);
  ORr.DownPayRedcd = StringToVal(ImportField,M4Val);
  ORr.OrderClass = ImportField;
  ORr.CustOrdNr = ImportField;
  ORr.PriceList = ImportField;
  ORr.InclVAT = StringToInt(ImportField);
  ORr.Sum0 = StringToVal(ImportField,M4Val);
  ORr.Sum1 = StringToVal(ImportField,M4Val);
  ORr.Sum2 = StringToVal(ImportField,M4Val);
  ORr.Sum3 = StringToVal(ImportField,M4Val);
  ORr.Sum4 = StringToVal(ImportField,M4Val);
  ORr.Reserved = StringToInt(ImportField);
  ORr.OSFlag = StringToInt(ImportField);
  ORr.Location = ImportField;
  ORr.CustVATCode = ImportField;
  ORr.RebCode = ImportField;
  ORr.VATNr = ImportField;
  ORr.Phone = ImportField;
  ORr.Fax = ImportField;
  ORr.ExportedFlag = StringToInt(ImportField);
  ORr.BaseSum4 = StringToVal(ImportField,M4Val);
  ORr.FrRate = StringToVal(ImportField,M4Rate);
  ORr.ToRateB2 = StringToVal(ImportField,M4Rate);
  ORr.BaseRate1 = StringToVal(ImportField,M4Rate);
  ORr.BaseRate2 = StringToVal(ImportField,M4Rate);
  ORr.DiscPerc = StringToVal(ImportField,M4Qty);
  ORr.DiscSum = StringToVal(ImportField,M4Val);
  ORr.TotGP = StringToVal(ImportField,M4Val);
  ORr.Probability = StringToVal(ImportField,M41Val);
  ORr.CreditCard = ImportField;
  ORr.AuthorizationCode = ImportField;
  ORr.GPProc = StringToVal(ImportField,M41Val);
  ORr.DespatchDate = StringToDate(ImportField);
  ORr.DespatchTime = StringToTime(ImportField);
  ORr.SalesGroup = ImportField;
  ORr.Sorting = ImportField;
  ORr.TotQty = StringToVal(ImportField,M4Qty);
  ORr.TotWeight = StringToVal(ImportField,M4Qty);
  ORr.TotVolume = StringToVal(ImportField,M4Qty);
  ORr.Commision = StringToVal(ImportField,M4Val);
  ORr.SumIncCom = StringToVal(ImportField,M4Val);
  ORr.FrPrice = StringToVal(ImportField,M4Val);
  ORr.FrBase = StringToVal(ImportField,M4Val);
  ORr.FrItem = ImportField;
  ORr.FrVATCode = ImportField;
  ORr.FrObjects = ImportField;
  ORr.InvAddr3 = ImportField;
  ORr.InvAddr4 = ImportField;
  ORr.DelAddr3 = ImportField;
  ORr.DelAddr4 = ImportField;
  ORr.DelAddrCode = ImportField;
  ORr.TAX1Sum = StringToVal(ImportField,M4Val);
  ORr.QuoteNr = StringToLongint(ImportField);
  ORr.InvBeforeShip = StringToInt(ImportField);
  ORr.colnr = StringToInt(ImportField);
  ORr.OKFlag = StringToInt(ImportField);
  ORr.PlanShipDate = StringToDate(ImportField);
  ORr.PrepaidAmount = StringToVal(ImportField,M4Val);
  ORr.Region = ImportField;
  ORr.RefStr = ImportField;
  ORr.GroupOrdNr = StringToLongint(ImportField);
  ORr.NoDelivery = StringToInt(ImportField);
  ORr.NoInvoice = StringToInt(ImportField);
  ORr.TAX2Sum = StringToVal(ImportField,M4Val);
  ORr.NoTax1 = StringToInt(ImportField);
  ORr.NoTax2 = StringToInt(ImportField);
  ORr.BranchID = ImportField;
  ORr.NoTAXonVAT = StringToLongint(ImportField);
  ORr.TotalwoTAX = StringToInt(ImportField);
  ORr.OrderType = StringToInt(ImportField);
  ORr.AcceptanceStatus = StringToInt(ImportField);
  ORr.CustTaxTemplateCode = ImportField;
  ImportPackedMatrix(TMr);
  PackFieldMatrix(ORr,"TaxMatrix",TMr);
  ORr.TerminalID = ImportField;
  ORr.OfficialSerNr = ImportField;
  ORr.Hash = ImportField;
  ORr.HashKeyVersion = StringToInt(ImportField);
  ORr.RegDate = StringToDate(ImportField);
  ORr.RegTime = StringToTime(ImportField);
  ORr.LocalMachineCode = ImportField;
  ORr.InvCountry = ImportField;
  ORr.DelCountry = ImportField;
  ORr.TREONr = StringToLongint(ImportField);
  ORr.TREOExpDate = StringToDate(ImportField);
  ORr.ORCONr = StringToLongint(ImportField);
  ORr.AcceptanceBy = ImportField;
  ORr.AcceptanceFYI = ImportField;
  //ORr.BankCode = ImportField;
  ORr.OKDate = StringToDate(ImportField);
  ORr.UsedBirthRebateH = StringToInt(ImportField);
  
  rwcnt = 0;
  
  while (NextImportLine(false)) begin
    ClearRow(ORr,ORrw,1);
    ORrw.stp = StringToInt(ImportField);
    ORrw.ArtCode = ImportField;
    ORrw.Quant = StringToVal(ImportField,M4UVal);
    ORrw.Price = StringToVal(ImportField,M423Val);
    ORrw.Sum = StringToVal(ImportField,M4Val);
    ORrw.vRebate = StringToVal(ImportField,M41Val);
    ORrw.SalesAcc = ImportField;
    ORrw.Shipd1 = StringToVal(ImportField,M4UVal);
    ORrw.Shipd2 = StringToVal(ImportField,M4UVal);
    ORrw.Invd = StringToVal(ImportField,M4UVal);
    ORrw.Objects = ImportField;
    ORrw.BasePrice = StringToVal(ImportField,M423Val);
    ORrw.rowGP = StringToVal(ImportField,M4Val);
    ORrw.Spec = ImportField;
    ORrw.VATCode = ImportField;
    ORrw.Recepy = ImportField;
    ORrw.SerialNr = ImportField;
    ORrw.PriceFactor = StringToVal(ImportField,M45Val);
    ORrw.VARList = ImportField;
    ORrw.Location = ImportField;
    ORrw.Source = ImportField;
    ORrw.PickingDate = StringToDate(ImportField);
    ORrw.PickingTime = ImportField;
    ORrw.InloadingDate = StringToDate(ImportField);
    ORrw.InloadingTime = ImportField;
    ORrw.DespatchRowDate = StringToDate(ImportField);
    ORrw.DespatchRowTime = ImportField;
    ORrw.PlanShipRow = ImportField;
    ORrw.ShipNote = ImportField;
    ORrw.UnitCode = ImportField;
    ORrw.UnitFactQuant = StringToVal(ImportField,M4UVal);
    ORrw.UnitFactPrice = StringToVal(ImportField,M423Val);
    ORrw.UnitXval = StringToVal(ImportField,M4UVal);
    ORrw.UnitYval = StringToVal(ImportField,M4UVal);
    ORrw.UnitZval = StringToVal(ImportField,M4UVal);
    ORrw.Coefficient = StringToVal(ImportField,M45Val);
    ORrw.VECode = ImportField;
    ORrw.Production = ImportField;
    ORrw.GroupOrdRow = StringToLongint(ImportField);
    ORrw.TAX2Code = ImportField;
    ORrw.TAX2Prc = StringToVal(ImportField,M423Val);
    ORrw.TAX2Reb = StringToVal(ImportField,M4Val);
    ORrw.TAX1Reb = StringToVal(ImportField,M4Val);
    ORrw.TAX2Acc = ImportField;
    ORrw.PlanShipRowDate = StringToDate(ImportField);
    ORrw.CUServiceHistNr = StringToLongint(ImportField);
    ORrw.CUServiceUntilDate = StringToDate(ImportField);
    ORrw.Position = ImportField;
    ORrw.RowOrderType = StringToInt(ImportField);
    ORrw.TaxTemplateCode = ImportField;
    ImportPackedMatrix(TMr);
    PackRowFieldMatrix(ORrw,"TaxMatrix",TMr);
    ORrw.Region = ImportField;
    ORrw.Perceptions = StringToInt(ImportField);
    ORrw.MotherArtCode = ImportField;
    ORrw.RecipeQuant = StringToVal(ImportField,M4Qty);
    ORrw.CustArtCode = ImportField;
    ORrw.Salesmen = ImportField;
    ORrw.OrderType = kOrderTypeDefault;
    
     ORrw.UsedBirthRebate = StringToInt(ImportField);
		 ORrw.PlanCostCur = ImportField;
		 ORrw.PlanCostVal = StringToVal(ImportField,M4Val);
    MatRowPut(ORr,rwcnt,ORrw);
    rwcnt = rwcnt + 1;
  end;
  
  return;
end;

global
updating procedure ReadImportTagORVc(string thetag)
begin
  record ORVc ORr;
  
  while (NextImportLine(false)) begin
    ReadImportTagORVcRecord(ORr);
    RecordImportStore(ORr,false);
  end;
  
  return;
end;

global
function string 120 ReadRecordIdStrORVc(Integer compnr,string thetag)
begin
  record ORVc ORr;
  
  ORr.SerNr = StringToLongint(ImportField);
  ReadRecordIdStrORVc = BuildRecordIdStr(ORr,compnr);
  return;
end;


// Edit ************************** Monday, 11 September 2017 13:49:42// Edit ************************** Monday, 11 September 2017 13:49:42

procedure ReadImportTagItemHistVcRecord(record ItemHistVc ItemHistr)
begin
  string 255 tstr;
  RecordNew(ItemHistr);
  ItemHistr.SerNr = StringToLongint(ImportField);
  ItemHistr.ArtCode = ImportField;
  ItemHistr.Variety = ImportField;
  ItemHistr.Location = ImportField;
  ItemHistr.FileName = ImportField;
  ItemHistr.TransNr = StringToLongint(ImportField);
  ItemHistr.Row = StringToInt(ImportField);
  ItemHistr.TransDate = StringToDate(ImportField);
  ItemHistr.StockAffectf = StringToInt(ImportField);
  ItemHistr.Qty = StringToVal(ImportField,M45Val);
  ItemHistr.Qty2 = StringToVal(ImportField,M45Val);
  ItemHistr.RemQty = StringToVal(ImportField,M45Val);
  ItemHistr.Source = StringToLongint(ImportField);
  ItemHistr.TotCostPrice = StringToVal(ImportField,M45Val);
  ItemHistr.SerialNr = ImportField;
  ItemHistr.RemCostPrice = StringToVal(ImportField,M45Val);
  ItemHistr.FIFODate = StringToDate(ImportField);
  ItemHistr.WATotCost = StringToVal(ImportField,M45Val);
  ItemHistr.CPTotCost = StringToVal(ImportField,M45Val);
  ItemHistr.BPTotCost = StringToVal(ImportField,M45Val);
  ItemHistr.WATotCostPerLoc = StringToVal(ImportField,M45Val);
  ItemHistr.CPTotCostPerLoc = StringToVal(ImportField,M45Val);
  ItemHistr.BPTotCostPerLoc = StringToVal(ImportField,M45Val);
  ItemHistr.Position = ImportField;
  ItemHistr.Invalid = StringToInt(ImportField);
  ItemHistr.SerNrPerLoc = StringToVal(ImportField,M4Qty);
  ItemHistr.VECode = ImportField;
  ItemHistr.ConsigStock = StringToInt(ImportField);
  ItemHistr.WillBePurged = StringToInt(ImportField);
  ItemHistr.TREOStock = StringToInt(ImportField);
  ItemHistr.CurncyCode = ImportField;
  ItemHistr.TotCostPriceCurncy = StringToVal(ImportField,M45Val);
  ItemHistr.RemCostPriceCurncy = StringToVal(ImportField,M45Val);
  ItemHistr.InDate = StringToDate(ImportField);
  ItemHistr.InFileName = ImportField;
  
  return;
end;

global
updating procedure ReadImportTagItemHistVc(string thetag)
begin
  record ItemHistVc ItemHistr;
  
  //logtext(0,"======================ReadImportTagItemHistVc");
  while (NextImportLine(false)) begin
    ReadImportTagItemHistVcRecord(ItemHistr);
    RecordImportStore(ItemHistr,false);
  end;
  
  return;
end;

// Edit ************************** Monday, 11 September 2017 13:51:05// Edit ************************** Monday, 11 September 2017 13:51:06

procedure ReadImportTagclcorspRecord(record CLCorspVc CLCorspr)
begin
  string 255 tstr;
  RecordNew(CLCorspr);
  CLCorspr.Code = ImportField;
  CLCorspr.Comment = ImportField;
  CLCorspr.AccNumber = ImportField;
  CLCorspr.Objects = ImportField;
  
  return;
end;

global
updating procedure ReadImportTagclcorsp(string thetag)
begin
  record CLCorspVc CLCorspr;
  
  //logtext(0,"======================ReadImportTagclcorsp");
  while (NextImportLine(false)) begin
    ReadImportTagclcorspRecord(CLCorspr);
    RecordImportStore(CLCorspr,false);
  end;
  
  return;
end;


// Edit ************************** Monday, 11 September 2017 13:54:01// Edit ************************** Monday, 11 September 2017 13:54:02

procedure ReadImportTagpurchase2Record(record PUVc PUr)
begin
  record TaxMatrixVc TMr;
  string 255 tstr;
  row PUVc PUrw;
  integer rwcnt;
  
  RecordNew(PUr);
  PUr.SerNr = StringToLongint(ImportField);
  PUr.RegDate = StringToDate(ImportField);
  PUr.TransDate = StringToDate(ImportField);
  PUr.Comment = ImportField;
  PUr.VECode = ImportField;
  PUr.VEName = ImportField;
  PUr.PONr = StringToLongint(ImportField);
  PUr.Location = ImportField;
  PUr.OKFlag = StringToInt(ImportField);
  PUr.CurncyCode = ImportField;
  PUr.ToRateB1 = StringToVal(ImportField,M4Rate);
  PUr.InclVAT = StringToInt(ImportField);
  PUr.SumCostPrice = StringToVal(ImportField,M45Val);
  PUr.SumQuant = StringToVal(ImportField,M4Qty);
  PUr.ShipCost = StringToVal(ImportField,M4UVal);
  PUr.CustomsCost = StringToVal(ImportField,M4UVal);
  PUr.ExtraCost = StringToVal(ImportField,M4UVal);
  PUr.ExportedFlag = StringToInt(ImportField);
  PUr.FrRate = StringToVal(ImportField,M4Rate);
  PUr.ToRateB2 = StringToVal(ImportField,M4Rate);
  PUr.BaseRate1 = StringToVal(ImportField,M4Rate);
  PUr.BaseRate2 = StringToVal(ImportField,M4Rate);
  PUr.LocOKNr = StringToVal(ImportField,M4Qty);
  PUr.Objects = ImportField;
  PUr.PUClass = ImportField;
  PUr.POCOSerNr = StringToLongint(ImportField);
  PUr.Cost1 = StringToVal(ImportField,M4UVal);
  PUr.Cost2 = StringToVal(ImportField,M4UVal);
  PUr.Cost3 = StringToVal(ImportField,M4UVal);
  PUr.Cost4 = StringToVal(ImportField,M4UVal);
  PUr.Cost5 = StringToVal(ImportField,M4UVal);
  PUr.VATVal = StringToVal(ImportField,M4Val);
  PUr.SubTotal = StringToVal(ImportField,M4Val);
  PUr.PayVal = StringToVal(ImportField,M4Val);
  PUr.VEVATCode = ImportField;
  PUr.Invalid = StringToInt(ImportField);
  PUr.ExportFlag = StringToInt(ImportField);
  PUr.PrelPUNr = StringToLongint(ImportField);
  PUr.FreightCode = ImportField;
  PUr.FreightCompanyRegNr = ImportField;
  PUr.FreightCompany = ImportField;
  PUr.TruckInfo = ImportField;
  PUr.Driver = ImportField;
  PUr.CMRText = ImportField;
  //PUr.xBookVariance = StringToInt(ImportField);
  ImportField;
  //PUr.xVarTransDate = StringToDate(ImportField);
  ImportField;
  PUr.LangCode = ImportField;
  PUr.TAX1Sum = StringToVal(ImportField,M4Val);
  PUr.TAX2Sum = StringToVal(ImportField,M4Val);
  PUr.ShipCostRound = StringToVal(ImportField,M4UVal);
  PUr.CustomsCostRound = StringToVal(ImportField,M4UVal);
  PUr.Cost1Round = StringToVal(ImportField,M4UVal);
  PUr.Cost2Round = StringToVal(ImportField,M4UVal);
  PUr.Cost3Round = StringToVal(ImportField,M4UVal);
  PUr.Cost4Round = StringToVal(ImportField,M4UVal);
  PUr.Cost5Round = StringToVal(ImportField,M4UVal);
  PUr.Sorting = ImportField;
  PUr.InvalidDate = StringToDate(ImportField);
  PUr.NoTAXonVAT = StringToLongint(ImportField);
  PUr.AcceptanceStatus = StringToInt(ImportField);
  PUr.PUFromPORate = StringToInt(ImportField);
  PUr.TotUPrice = StringToVal(ImportField,M4Val);
  PUr.VETaxTemplateCode = ImportField;
  ImportPackedMatrix(TMr);
  PackFieldMatrix(PUr,"TaxMatrix",TMr);
  PUr.BranchID = ImportField;
  PUr.AcceptanceBy = ImportField;
  PUr.ExtraCostsCalculation = StringToInt(ImportField);
  PUr.AcceptanceFYI = ImportField;
  PUr.OfficialSerNr = ImportField;
  PUr.NotForReport = StringToInt(ImportField);
  
  rwcnt = 0;
  
  while (NextImportLine(false)) begin
    ClearRow(PUr,PUrw,1);
    PUrw.ArtCode = ImportField;
    PUrw.Quant = StringToVal(ImportField,M4UVal);
    PUrw.Spec = ImportField;
    PUrw.UPrice = StringToVal(ImportField,M45Val);
    PUrw.SerialNr = ImportField;
    PUrw.OrdRow = StringToLongint(ImportField);
    PUrw.Extra = ImportField;
    PUrw.CostPrice = StringToVal(ImportField,M45Val);
    PUrw.VEItemCode = ImportField;
    PUrw.VARList = ImportField;
    PUrw.ShipCost = StringToVal(ImportField,M45Val);
    PUrw.CustomsCost = ImportField;
    PUrw.BestBefore = StringToDate(ImportField);
    PUrw.Coefficient = StringToVal(ImportField,M45Val);
    PUrw.BasePrice = StringToVal(ImportField,M423Val);
    PUrw.Sum = StringToVal(ImportField,M45Val);
    PUrw.Comment = ImportField;
    PUrw.Objects = ImportField;
    PUrw.CostAcc = ImportField;
    PUrw.CredAcc = ImportField;
    PUrw.CustomsNr = ImportField;
    PUrw.CountryOfOrg = ImportField;
    PUrw.PosCode = ImportField;
    PUrw.BatchStatus = ImportField;
    PUrw.UnitXval = StringToVal(ImportField,M4UVal);
    PUrw.UnitYval = StringToVal(ImportField,M4UVal);
    PUrw.UnitZval = StringToVal(ImportField,M4UVal);
    PUrw.RowCost1 = StringToVal(ImportField,M4UVal);
    PUrw.RowCost2 = StringToVal(ImportField,M4UVal);
    PUrw.RowCost3 = StringToVal(ImportField,M4UVal);
    PUrw.RowCost4 = StringToVal(ImportField,M4UVal);
    PUrw.RowCost5 = StringToVal(ImportField,M4UVal);
    PUrw.VATCode = ImportField;
    PUrw.stp = StringToInt(ImportField);
    PUrw.ovst = StringToInt(ImportField);
    PUrw.Sign = ImportField;
    PUrw.UpdDate = StringToDate(ImportField);
    PUrw.PORecon = StringToVal(ImportField,M4UVal);
    PUrw.POReconComment = ImportField;
    PUrw.VIRecon = StringToVal(ImportField,M4UVal);
    PUrw.VIReconComment = ImportField;
    PUrw.PONr = StringToLongint(ImportField);
    PUrw.BarCode = ImportField;
    PUrw.PrelPUNr = StringToLongint(ImportField);
    PUrw.PrelPURow = StringToLongint(ImportField);
    PUrw.ToPosCode = ImportField;
    PUrw.UnitCode = ImportField;
    PUrw.VarianceAmount = StringToVal(ImportField,M4Val);
    PUrw.TAX2Code = ImportField;
    PUrw.TAX2Prc = StringToVal(ImportField,M423Val);
    PUrw.TAX2Reb = StringToVal(ImportField,M4Val);
    PUrw.TAX1Reb = StringToVal(ImportField,M4Val);
    PUrw.TAX2Acc = ImportField;
    PUrw.Location = ImportField;
    PUrw.ChargeNumber = StringToLongint(ImportField);
    PUrw.VEQuant = StringToVal(ImportField,M4UVal);
    PUrw.PIFactor = StringToVal(ImportField,M4UVal);
    PUrw.VEUnit = ImportField;
    PUrw.StockType = StringToInt(ImportField);
    PUrw.InPrice = StringToVal(ImportField,M45Val);
    PUrw.SuppSerialNr = ImportField;
    PUrw.MajStoneDet = ImportField;
    PUrw.Colour = ImportField;
    PUrw.Clarity = ImportField;
    PUrw.Cert = ImportField;
    PUrw.MinStoneDet = ImportField;
    PUrw.Metal = ImportField;
    PUrw.RowWeight = ImportField;
    PUrw.Size = ImportField;
    PUrw.Length = ImportField;
    PUrw.WatchBrand = ImportField;
    PUrw.StyleName = ImportField;
    PUrw.WatchMetal = ImportField;
    PUrw.Movement = ImportField;
    PUrw.BrcStr = ImportField;
    PUrw.Gender = ImportField;
    PUrw.Other = ImportField;
    PUrw.Other2 = ImportField;
    PUrw.MotherPURow = StringToLongint(ImportField);
    PUrw.TaxTemplateCode = ImportField;
    ImportPackedMatrix(TMr);
    PackRowFieldMatrix(PUrw,"TaxMatrix",TMr);
    PUrw.TREO = StringToInt(ImportField);
    PUrw.PrintQuant = StringToVal(ImportField,M4UVal);
    MatRowPut(PUr,rwcnt,PUrw);
    rwcnt = rwcnt + 1;
  end;
  
  return;
end;

global
updating procedure ReadImportTagpurchase2(string thetag)
begin
  record PUVc PUr;
  
  //logtext(0,"======================ReadImportTagpurchase2");
  while (NextImportLine(false)) begin
    ReadImportTagpurchase2Record(PUr);
    RecordImportStore(PUr,false);
  end;
  
  return;
end;

// Edit ************************** Monday, 11 September 2017 13:54:11

procedure ReadImportTagRetPUVcRecord(record RetPUVc RetPUr)
begin
  string 255 tstr;
  row RetPUVc RetPUrw;
  integer rwcnt;
  
  RecordNew(RetPUr);
  RetPUr.SerNr = StringToLongint(ImportField);
  RetPUr.RegDate = StringToDate(ImportField);
  RetPUr.TransDate = StringToDate(ImportField);
  RetPUr.Comment = ImportField;
  RetPUr.VECode = ImportField;
  RetPUr.VEName = ImportField;
  RetPUr.PONr = StringToLongint(ImportField);
  RetPUr.Location = ImportField;
  RetPUr.OKFlag = StringToInt(ImportField);
  RetPUr.CurncyCode = ImportField;
  RetPUr.ToRateB1 = StringToVal(ImportField,M4Rate);
  RetPUr.InclVAT = StringToInt(ImportField);
  RetPUr.SumCostPrice = StringToVal(ImportField,M45Val);
  RetPUr.SumQuant = StringToVal(ImportField,M4Qty);
  RetPUr.ExportedFlag = StringToInt(ImportField);
  RetPUr.FrRate = StringToVal(ImportField,M4Rate);
  RetPUr.ToRateB2 = StringToVal(ImportField,M4Rate);
  RetPUr.BaseRate1 = StringToVal(ImportField,M4Rate);
  RetPUr.BaseRate2 = StringToVal(ImportField,M4Rate);
  RetPUr.LocOKNr = StringToVal(ImportField,M4Qty);
  RetPUr.PUNr = StringToLongint(ImportField);
  RetPUr.Objects = ImportField;
  RetPUr.Invalid = StringToInt(ImportField);
  RetPUr.ExportFlag = StringToInt(ImportField);
  RetPUr.Type = StringToInt(ImportField);
  RetPUr.UpdStockFlag = StringToInt(ImportField);
  RetPUr.FreightCode = ImportField;
  RetPUr.FreightCompanyRegNr = ImportField;
  RetPUr.FreightCompany = ImportField;
  RetPUr.TruckInfo = ImportField;
  RetPUr.Driver = ImportField;
  RetPUr.CMRText = ImportField;
  RetPUr.DelAddrCode = ImportField;
  RetPUr.DelAddr0 = ImportField;
  RetPUr.DelAddr1 = ImportField;
  RetPUr.DelAddr2 = ImportField;
  RetPUr.DelAddr3 = ImportField;
  RetPUr.DelAddr4 = ImportField;
  RetPUr.Reason = ImportField;
  RetPUr.InvalidDate = StringToDate(ImportField);
  RetPUr.Sorting = ImportField;
  RetPUr.TerminalID = ImportField;
  RetPUr.BranchID = ImportField;
  RetPUr.OfficialSerNr = ImportField;
  RetPUr.Hash = ImportField;
  RetPUr.HashKeyVersion = StringToInt(ImportField);
  RetPUr.RegTime = StringToTime(ImportField);
  RetPUr.LocalMachineCode = ImportField;
  RetPUr.NotForReport = StringToInt(ImportField);
  RetPUr.SentCoin = StringToInt(ImportField);
  RetPUr.TypeCoin = StringToInt(ImportField);
  RetPUr.SentDateCoin = StringToDate(ImportField);
  RetPUr.FileNameCoin = ImportField;
  RetPUr.TransBillCoin = ImportField;
  RetPUr.PackageEANNum = ImportField;
  
  rwcnt = 0;
  
  while (NextImportLine(false)) begin
    ClearRow(RetPUr,RetPUrw,1);
    RetPUrw.ArtCode = ImportField;
    RetPUrw.Quant = StringToVal(ImportField,M4UVal);
    RetPUrw.Spec = ImportField;
    RetPUrw.FIFO = StringToVal(ImportField,M45Val);
    RetPUrw.FIFORowVal = StringToVal(ImportField,M45Val);
    RetPUrw.SerialNr = ImportField;
    RetPUrw.VEItemCode = ImportField;
    RetPUrw.BestBefore = StringToDate(ImportField);
    RetPUrw.Coefficient = StringToVal(ImportField,M45Val);
    RetPUrw.Objects = ImportField;
    RetPUrw.CostAcc = ImportField;
    RetPUrw.CredAcc = ImportField;
    RetPUrw.PosCode = ImportField;
    RetPUrw.UnitXval = StringToVal(ImportField,M4UVal);
    RetPUrw.UnitYval = StringToVal(ImportField,M4UVal);
    RetPUrw.UnitZval = StringToVal(ImportField,M4UVal);
    RetPUrw.VATCode = ImportField;
    RetPUrw.OrdRow = StringToLongint(ImportField);
    RetPUrw.VarianceAmount = StringToVal(ImportField,M4Val);
    RetPUrw.PUNr = StringToLongint(ImportField);
    RetPUrw.PURow = StringToLongint(ImportField);
    RetPUrw.Location = ImportField;
    RetPUrw.PUCostPrice = StringToVal(ImportField,M45Val);
    RetPUrw.PONr = StringToLongint(ImportField);
    RetPUrw.BarCode = ImportField;
    MatRowPut(RetPUr,rwcnt,RetPUrw);
    rwcnt = rwcnt + 1;
  end;
  
  return;
end;

global
updating procedure ReadImportTagRetPUVc(string thetag)
begin
  record RetPUVc RetPUr;
  
  //logtext(0,"======================ReadImportTagRetPUVc");
  while (NextImportLine(false)) begin
    ReadImportTagRetPUVcRecord(RetPUr);
    RecordImportStore(RetPUr,false);
  end;
  
  return;
end;

// Edit ************************** Monday, 11 September 2017 14:26:33

procedure ReadImportTagpldef2Record(record PLDefVc PLDefr)
begin
  string 255 tstr;
  row PLDefVc PLDefrw;
  integer rwcnt;
  
  RecordNew(PLDefr);
  
  PLDefr.UUID = StringToUUID(ImportField); // NewAutosyncRegister
  ImportField; // NewAutosyncRegister
  ImportField; // NewAutosyncRegister
  PLDefr.Code = ImportField;
  PLDefr.Comment = ImportField;
  PLDefr.CurncyCode = ImportField;
  PLDefr.InclVAT = StringToInt(ImportField);
  PLDefr.DepPrice = StringToInt(ImportField);
  PLDefr.StartDate = StringToDate(ImportField);
  PLDefr.EndDate = StringToDate(ImportField);
  PLDefr.PLReplCode = ImportField;
  PLDefr.PLBasedOn = StringToInt(ImportField);
  PLDefr.VATCode = ImportField;
  PLDefr.BBVECode = ImportField;
  PLDefr.BBVarAcc = ImportField;
  PLDefr.BBGenTrans = StringToInt(ImportField);
  PLDefr.LengthClass = StringToInt(ImportField);
  PLDefr.StartTime = StringToTime(ImportField);
  PLDefr.EndTime = StringToTime(ImportField);
  
  rwcnt = 0;
  
  while (NextImportLine(false)) begin
    ClearRow(PLDefr,PLDefrw,1);
    PLDefrw.ItemCode = ImportField;
    PLDefrw.Formula = ImportField;
    PLDefrw.CodeType = StringToInt(ImportField);
    PLDefrw.VATCode = ImportField;
    PLDefrw.DispGroups = ImportField;
    MatRowPut(PLDefr,rwcnt,PLDefrw);
    rwcnt = rwcnt + 1;
  end;
  
  return;
end;

global
updating procedure ReadImportTagpldef2(string thetag)
begin
  record PLDefVc PLDefr;
  
  //logtext(0,"======================ReadImportTagpldef2");
  while (NextImportLine(false)) begin
    ReadImportTagpldef2Record(PLDefr);
    RecordImportStore(PLDefr,false);
  end;
  
  return;
end;


// Edit ************************** Monday, 11 September 2017 14:26:45// Edit ************************** Monday, 11 September 2017 14:26:46

procedure ReadImportTagTRVc1Record(record TRVc TRr)
begin
  string 255 tstr;
  row TRVc TRrw;
  integer rwcnt;
  
  RecordNew(TRr);
  TRr.Number = StringToLongint(ImportField);
  TRr.RegDate = StringToDate(ImportField);
  TRr.Comment = ImportField;
  TRr.TransDate = StringToDate(ImportField);
  TRr.Sign = ImportField;
  TRr.DSum = StringToVal(ImportField,M4Val);
  TRr.CSum = StringToVal(ImportField,M4NegVal);
  TRr.DiffVal = StringToVal(ImportField,M4Val);
  TRr.RefStr = ImportField;
  //TRr.xMainf = StringToInt(ImportField);
  ImportField;
  TRr.IntYc = StringToInt(ImportField);
  //TRr.xBalf = StringToInt(ImportField);
  ImportField;
  TRr.Expf = StringToInt(ImportField);
  TRr.ExportedFlag = StringToInt(ImportField);
  TRr.DSum2 = StringToVal(ImportField,M4Val);
  TRr.CSum2 = StringToVal(ImportField,M4NegVal);
  TRr.Diff2Val = StringToVal(ImportField,M4Val);
  TRr.LastChangeDate = StringToDate(ImportField);
  TRr.FileName = ImportField;
  TRr.TransNr = StringToLongint(ImportField);
  TRr.SeqNr = StringToLongint(ImportField);
  TRr.RegTime = StringToTime(ImportField);
  
  rwcnt = 0;
  
  while (NextImportLine(false)) begin
    ClearRow(TRr,TRrw,1);
    TRrw.stp = StringToInt(ImportField);
    TRrw.ovst = StringToInt(ImportField);
    TRrw.AccNumber = ImportField;
    TRrw.Objects = ImportField;
    TRrw.DebVal = StringToVal(ImportField,M4Val);
    TRrw.CredVal = StringToVal(ImportField,M4Val);
    TRrw.VATCode = ImportField;
    TRrw.Qty = StringToVal(ImportField,M4Val);
    TRrw.CurDebVal = StringToVal(ImportField,M4Val);
    TRrw.CurCredVal = StringToVal(ImportField,M4Val);
    TRrw.ToRateB1 = StringToVal(ImportField,M4Rate);
    TRrw.Comment = ImportField;
    TRrw.Curncy = ImportField;
    TRrw.BRSerNr = StringToLongint(ImportField);
    TRrw.BRRowNr = StringToInt(ImportField);
    TRrw.NomVal = StringToVal(ImportField,M4Val);
    TRrw.CompCode = ImportField;
    TRrw.Typ = StringToInt(ImportField);
    TRrw.SerNr = StringToLongint(ImportField);
    TRrw.DueDate = StringToDate(ImportField);
    TRrw.CorspSer = StringToLongint(ImportField);
    TRrw.UpdDate = StringToDate(ImportField);
    TRrw.Sign = ImportField;
    TRrw.OldTransDate = StringToDate(ImportField);
    TRrw.CorrNr = StringToLongint(ImportField);
    TRrw.CorrDate = StringToDate(ImportField);
    TRrw.CorrYc = StringToInt(ImportField);
    TRrw.Reconsf = StringToInt(ImportField);
    TRrw.FrRate = StringToVal(ImportField,M4Rate);
    TRrw.ToRateB2 = StringToVal(ImportField,M4Rate);
    TRrw.DebVal2 = StringToVal(ImportField,M4Val);
    TRrw.CredVal2 = StringToVal(ImportField,M4Val);
    TRrw.BaseRate1 = StringToVal(ImportField,M4Rate);
    TRrw.BaseRate2 = StringToVal(ImportField,M4Rate);
    TRrw.ACShort = ImportField;
    TRrw.ReconCode = ImportField;
    TRrw.TAccNumber = ImportField;
    TRrw.TFromFileName = ImportField;
    TRrw.TFromCode = ImportField;
    TRrw.SAFTType = StringToInt(ImportField);
    TRrw.ReconDate = StringToDate(ImportField);
    TRrw.ExtraComment = ImportField;
    TRrw.MyVal1 = StringToVal(ImportField,M4Val);
    TRrw.MyVal2 = StringToVal(ImportField,M4Val);
    TRrw.MyVal3 = StringToVal(ImportField,M4Val);
    TRrw.MyVal4 = StringToVal(ImportField,M4Val);
    TRrw.MyVal5 = StringToVal(ImportField,M4Val);
    TRrw.MyVal6 = StringToVal(ImportField,M4Val);
    TRrw.CustCode = ImportField;
    TRrw.MyVal7 = StringToVal(ImportField,M4Val);
    TRrw.MyVal8 = StringToVal(ImportField,M4Val);
    TRrw.MyVal9 = StringToVal(ImportField,M4Val);
    TRrw.MyVal10 = StringToVal(ImportField,M4Val);
    TRrw.MyVal11 = StringToVal(ImportField,M4Val);
    TRrw.MyVal12 = StringToVal(ImportField,M4Val);
    TRrw.MyVal13 = StringToVal(ImportField,M4Val);
    TRrw.MyVal14 = StringToVal(ImportField,M4Val);
    TRrw.MyVal15 = StringToVal(ImportField,M4Val);
    MatRowPut(TRr,rwcnt,TRrw);
    rwcnt = rwcnt + 1;
  end;
  
  return;
end;

global
updating procedure ReadImportTagTRVc1(string thetag)
begin
  record TRVc TRr;
  
  //logtext(0,"======================ReadImportTagTRVc1");
  while (NextImportLine(false)) begin
    ReadImportTagTRVc1Record(TRr);
    RecordImportStore(TRr,false);
  end;
  
  return;
end;

// Edit ************************** Monday, 11 September 2017 14:29:41// Edit ************************** Monday, 11 September 2017 14:29:42



