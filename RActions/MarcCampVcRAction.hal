external function Boolean CustomerWithPhoneExists(record CUVc,var string, var string);// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 20 August 2018 16:41:05
external function Boolean CustomerWithEmailExists(string,string);// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 20 August 2018 16:41:05
external updating procedure CopyLoyaltyBalanceToNewCard(var record LoyaltyCardVc); //Edit***************************Sasha2,12:19 23.05.2017
external updating procedure CreateLoyaltyCardRemote(record CUVc,var record LoyaltyCardVc);// Edit ************************** BPI Ukraine - KramarAlexandr - Thursday, 4 January 2018 12:28:35
external procedure StripEndingSpaces(var string);
external function string 50 TimeToString(time,string,boolean);
external function LongInt POSNETHexToLong(string);
remote function Boolean PasteCustInOrder(var record ORVc,string,string,var string,var string);//Edit_________________ABR 14.12.18 11:00
external  function string 100 BPICodeToName(string);
external function Boolean GetItemPriceDiscount3CRM(string,val,var record INVc,string,val,val,val,val,val,string,string,string,string,
                                                var val,var string,var val,var string,var val,var string,Integer,var Boolean,Date,Time,
                                                string,Boolean,var Boolean,string,var string,var val,string,string,var string,var string,var record MarcCampVc);
remote procedure ORVc_PasteQuant(var record ORVc,Integer,Boolean,var Boolean);
remote procedure ORSumup(var record ORVc);
remote updating function longint CreateGlobalIVFromWebOR (var record ORVc);
remote procedure ORVc_PastePayDeal(var record ORVc);
external function boolean CompanyIsJWLikeCompany(Integer);
external updating procedure SendIVVisitToCRM(var record IVVc);
remote updating procedure RDBDoBuildData(LongInt);
external procedure ParsePhones(string, var integer, var array string); //edited by BPI
external function string 255 StrReplace(string,string,string);
external function roundmode SetRoundModeD(Integer);

									
SetLangMode(LangRussian,"RUS",0);


global procedure SendMailTiCRMForChangeCustomer(record CUVc CUr,record CUVc newCUr)
begin
	area custinfo,text,replyPr;
	
	addtexttoarea("Данные по клиенту в системе CRM изменились",custinfo);
	addtexttoarea(chr(13) & chr(10),custinfo);
	addtexttoarea("Код клиента: " & CUr.Code,custinfo);
	addtexttoarea(chr(13) & chr(10),custinfo);
	addtexttoarea("Имя клиента: " & CUr.Name,custinfo);
	addtexttoarea(chr(13) & chr(10),custinfo);
	addtexttoarea("Изменения:",custinfo);
	addtexttoarea(chr(13) & chr(10),custinfo);
	
	if(CUr.BirthDate!=newCUr.BirthDate)then begin
		addtexttoarea("BirthDate: " & CUr.BirthDate & " ->  " & newCUr.BirthDate,custinfo);
		addtexttoarea(chr(13) & chr(10),custinfo);
	end;
	if(CUr.Phone!=newCUr.Phone)then begin
		addtexttoarea("Phone: " & CUr.Phone & " ->  " & newCUr.Phone,custinfo);
		addtexttoarea(chr(13) & chr(10),custinfo);
	end;
	if(CUr.Mobile!=newCUr.Mobile)then begin
		addtexttoarea("Phone1: " & CUr.Mobile & " ->  " & newCUr.Mobile,custinfo);
		addtexttoarea(chr(13) & chr(10),custinfo);
	end;
	if(CUr.AltPhone!=newCUr.AltPhone)then begin
		addtexttoarea("Phome2: " & CUr.AltPhone & " ->  " & newCUr.AltPhone,custinfo);
		addtexttoarea(chr(13) & chr(10),custinfo);
	end;
	if(CUr.Fax!=newCUr.Fax)then begin
		addtexttoarea("Phone3: " & CUr.Fax & " ->  " & newCUr.Fax,custinfo);
		addtexttoarea(chr(13) & chr(10),custinfo);
	end;
	if(CUr.eMail!=newCUr.eMail)then begin
		addtexttoarea("eMail: " & CUr.eMail & " ->  " & newCUr.eMail,custinfo);
		addtexttoarea(chr(13) & chr(10),custinfo);
	end;
	if(CUr.Gender!=newCUr.Gender)then begin
		addtexttoarea("Gender: " & CUr.Gender & " ->  " & newCUr.Gender,custinfo);
		addtexttoarea(chr(13) & chr(10),custinfo);
	end;
	if(CUr.CRMName!=newCUr.CRMName)then begin
		addtexttoarea("Name :" & CUr.CRMName & " ->  " & newCUr.CRMName,custinfo);
		addtexttoarea(chr(13) & chr(10),custinfo);
	end;
	if(CUr.CRMLName!=newCUr.CRMLName)then begin
		addtexttoarea("LastName :" & CUr.CRMLName & " ->  " & newCUr.CRMLName,custinfo);
		addtexttoarea(chr(13) & chr(10),custinfo);
	end;
	if(CUr.CRMPatr!=newCUr.CRMPatr)then begin
		addtexttoarea("MidleName :" & CUr.CRMPatr & " ->  " & newCUr.CRMPatr,custinfo);
		addtexttoarea(chr(13) & chr(10),custinfo);
	end;
	
	setexportcodepage("UTF-8");
	
	writeareatofile(custinfo,"CustomerChangedInCRM.txt",0);
	setareazerosize(text);
	addtexttoarea("{",text);
	addtexttoarea("\"host\":\"smtp.gmail.com\",",text);
	addtexttoarea("\"port\":465,",text);
	addtexttoarea("\"secure\":true,",text);
	addtexttoarea("\"user\":\"IDReporSender@gmail.com\",",text);
	addtexttoarea("\"pass\":\"c2h5ohc2h5oh\",",text);
	addtexttoarea("\"from\":\"IDReportSender@gmail.com\",",text);
	addtexttoarea("\"to\":\"" & "kramar.alexandr@gmail.com,n.hajiyeva@italdizain.az" & "\",",text);
	addtexttoarea("\"subject\":\"" & "Изменены данные клиента" & "\",",text);
	addtexttoarea("\"plaintext\":\"notblank\",",text);			
	addtexttoarea("\"filename\":\"" & "CustomerChangedInCRM.txt" & "\",",text);			
	addtexttoarea("\"path\":\"/usr/local/bin/StandardERPServer/" & "CustomerChangedInCRM.txt" & "\"",text);
	addtexttoarea("}",text);

	SendWebRequest("127.0.0.1",1071,-1,false,"POST","/sendMail","application/json","",false,text,replyPr,5);
	
return;
end;

global 
function string 255 ParseHEX(string tag)
begin
	integer j,ln;
	string 255 hex,out;
	ln = len(tag);
	for(j=0;j<ln;j=j+1) begin
		if(mid(tag,j,1)=="\\") then begin
			j=j+2;
			hex = mid(tag,j,4);
			out=out & UChr(POSNETHexToLong(hex));
			j=j+3;
		end else begin
			out=out&mid(tag,j,1);
		end;
	end;
	ParseHEX=out;
return;
end;

function string 255 MyJSGet(json jsons,string tag)
begin
	string 255 res;
	
	res = JSONGet(jsons,tag);
	if(res=="null")then begin
		res = "";
	end;
		
	MyJSGet = res;
return;
end;

global webpublic updating procedure WebGetMarcCamp()
begin
	area getpost;
	json jsresponse;
	record MarcCampVc MCr;
	row MarcCampVc MCrw;
	date dat;
	integer cpmpnr;
	integer i,rwcnt;
	area areq;
	boolean TrHs,testf,headf,foundf;
	record PLVc PLr;
	record GlobalItemVc GIr;
	val price;
	string 255 class,hansaidget;
	string 20 brand;
	integer curcmp;
	
	curcmp = currentcompany;
	webgetpostdata(getpost);
	SetCompany(1,false);
	hansaidget = webgetarg("hansaId");
	logtext(0,"hansaidget " & hansaidget);
	jsresponse = ParseJSONArea(getpost);
	if(nonblank(MyJSGet(jsresponse,"hansaId")))then begin	
		hansaidget = MyJSGet(jsresponse,"hansaId");
	end;
	
	if(nonblank(hansaidget))then begin	
		foundf = false;
		TrHs = true;
		MCr.Code = hansaidget;
		if(nonblank(hansaidget))then begin
			MCr.Code = hansaidget;
		end;
		while(loopmain(MCr,1,TrHs))begin
			if(MCr.CompNr>0)then begin
				SetCompany(MCr.CompNr,false);
			end;
			if(MCr.Code!=hansaidget)then begin TrHs = false; end;
			
			if(TrHs)then begin
				if(headf==false)then begin
					foundf = true;
					WebOutString("{\"hansaID\":\"" & MCr.Code & "\",\"Items\":[");
					headf = true;
				end;
				
				rwcnt = matrowcnt(MCr);
				for (i=0;i<rwcnt;i=i+1)begin
					matrowget(MCr,i,MCrw);
					if(i>0)then begin 
						AddTextToArea(",",areq); 
						WebOutString(",");
					end;
					
					price = blankval;
					brand = "";
					class = "";
					GIr.Code = MCrw.ItemCode;
					if(readfirstmain(GIr,1,true))then begin
						PLr.ArtCode = GIr.HansaCode;
						PLr.PLCode = "RRP";
						readfirstmain(PLr,2,true);
						price = PLr.ExVatPrice;
						brand = GIr.Brand;
						class = GIr.Classification;
					end;

					WebOutString("{");
					WebOutString("\"hansaID\":\"" & MCrw.ItemCode & "\",");
					WebOutString("\"name\":\"" & MCrw.Name & "\",");
					if(price!=0)then begin
						WebOutString("\"price\":" & price & ",");
					end;
					if(nonblank(brand))then begin
						WebOutString("\"brand\":\"" & brand & "\",");
					end;
					if(nonblank(class))then begin
						WebOutString("\"classification\":\"" & class & "\",");
					end;
					if(MCrw.vRebate==0)then begin
						MCrw.vRebate = 0;
					end;
					WebOutString("\"discount\":" & MCrw.vRebate & "");
					WebOutString("}");
				end;
			end;
			ReSetCompany(curcmp);
		end;
		
		if(headf)then begin
			WebOutString("]}");
		end;
				
		if(foundf==false)then begin
			WebOutString("{\"Error\":\"MarcCampVc not found\"}");
		end;
	end else begin
		WebOutString("{\"Error\":\"hansaId not found\"}");
	end;
	

return;
end;

global webpublic updating procedure WebCreateMarcCamp()
begin
	area getpost;
	json jsresponse;
	record MarcCampVc MCr;
	date dat;
	integer cpmpnr;
	area areq;
	
	setcompany(1,false);
	
	webgetpostdata(getpost);
	jsresponse = ParseJSONArea(getpost);
	if(nonblank(MyJSGet(jsresponse,"hansaId")) and nonblank(MyJSGet(jsresponse,"Id")))then begin
		if(true)then begin
			cpmpnr = 1;
			if(cpmpnr>0 and cpmpnr<29)then begin
				setcompany(1,false);
				MCr.Code = MyJSGet(jsresponse,"hansaId");
				if(readfirstmain(MCr,1,true)==false)then begin
					if(nonblank(MyJSGet(jsresponse,"proposedStartDate")) and nonblank(MyJSGet(jsresponse,"proposedEndDate")))then begin
						recordnew(MCr);
						MCr.Code = MyJSGet(jsresponse,"hansaId");
						MCr.CRMID = MyJSGet(jsresponse,"Id");
						MCr.Page = 1;
						MCr.Name = MyJSGet(jsresponse,"campaignName");
						dat.year = stringtoint(left(MyJSGet(jsresponse,"proposedStartDate"),4));
						dat.day = stringtoint(mid(MyJSGet(jsresponse,"proposedStartDate"),8,2));
						dat.month = stringtoint(mid(MyJSGet(jsresponse,"proposedStartDate"),5,2));
						MCr.sDate = dat;
						dat.year = stringtoint(left(MyJSGet(jsresponse,"proposedEndDate"),4));
						dat.day = stringtoint(mid(MyJSGet(jsresponse,"proposedEndDate")8,,2));
						dat.month = stringtoint(mid(MyJSGet(jsresponse,"proposedEndDate"),5,2));
						MCr.eDate = dat;
						dat.year = stringtoint(left(MyJSGet(jsresponse,"actualStartDate"),4));
						dat.day = stringtoint(mid(MyJSGet(jsresponse,"actualStartDate"),8,2));
						dat.month = stringtoint(mid(MyJSGet(jsresponse,"actualStartDate"),5,2));
						MCr.RealsDate = dat;
						dat.year = stringtoint(left(MyJSGet(jsresponse,"actualEndDate"),4));
						dat.day = stringtoint(mid(MyJSGet(jsresponse,"actualEndDate"),8,2));
						dat.month = stringtoint(mid(MyJSGet(jsresponse,"actualEndDate"),5,2));
						MCr.RealeDate = dat;
						recordstore(MCr,true);
						AddRecordToArea(MCr,"MarcCampVc",areq);
						WebOutArea(areq);
					end else begin
						weboutstring("{\"error\":\"Date range incorrect\"}");
					end;
				end else begin
					weboutstring("{\"error\":\"Record already exist\"}");
				end;
			end else begin
				weboutstring("{\"error\":\"compnr is wrong\"}");
			end;
		end else begin
			weboutstring("{\"error\":\"compnr is blank\"}");
		end;
	end else begin
		weboutstring("{\"error\":\"hansaId is blank or Id is blank\"}");
	end;
return;
end;


global webpublic updating procedure WebCreateConsultant()
begin
	record UserVc USr;
	record CUVc CUr;
	area getpost;
	json jsresponse;
	boolean foundf;
	string 100 tstr,field;
	date birthdate;
	record CompaniesBlock CBb;
	row CompaniesBlock CBrw;
	integer mtrw,i;
	record GlobalStoresVc GSr;
	
	logtext(0,"WebCreateConsultant");
	
	webgetpostdata(getpost);
	setcompany(1,false);
	
	jsresponse = ParseJSONArea(getpost);
	if(nonblank(MyJSGet(jsresponse,"hansaId")))then begin
		if(nonblank(MyJSGet(jsresponse,"shopId")))then begin
			blockload(CBb);		
			mtrw = matrowcnt(CBb);
			For(i=0;i<mtrw;i=i+1) begin
	  		matrowget(CBb,i,CBrw);
	  		setcompany(i+1,true);
	  		GSr.Code = "";
	  		resetloop(GSr);
	  		while(loopmain(GSr,1,true))begin
	  			if(GSr.Code==MyJSGet(jsresponse,"shopId"))then begin
	  				USr.Code = MyJSGet(jsresponse,"hansaId");
	  				if(readfirstmain(USr,1,true)==false)then begin
	  					if(nonblank(MyJSGet(jsresponse,"firstName")))then begin
								recordnew(USr);
									USr.Code = left(MyJSGet(jsresponse,"hansaId"),10);
									USr.Name = MyJSGet(jsresponse,"firstName") & " " & MyJSGet(jsresponse,"lastName");
									USr.AccessGroup = "DENY";
									USr.TypeOfUser = kTypeOfUserConcurrent;
									USr.StartLevel = 1;
									USr.IsSalesMan = 1;
									USr.Phone1 = MyJSGet(jsresponse,"mainPhone");
									USr.Phone2 = MyJSGet(jsresponse,"mobilePhone");
									USr.emailAddr = MyJSGet(jsresponse,"email");
									weboutstring("{\"id\":\"" & USr.Code & "\"}");
								recordStore(USr,true);
								goto lWebCreateConsultant;
	  					end else begin
	  						weboutstring("{\"error\":\"Blank first name\"}");
	  					end;
	  				end else begin
	  					weboutstring("{\"error\":\"Consultant exist\"}");
	  				end;
	  			end;
	  		end;
			end; 
		end else begin
			weboutstring("{\"error\":\"hansaId is shopId\"}");
		end;
	end else begin
		weboutstring("{\"error\":\"hansaId is blank\"}");
	end;

lWebCreateConsultant:;
resetcompany(1);

return;
end;


global webpublic updating procedure WebUpdateConsultant()
begin
	record UserVc USr;
	record CUVc CUr;
	area getpost;
	json jsresponse;
	boolean foundf;
	string 100 tstr,field;
	date birthdate;
	record CompaniesBlock CBb;
	row CompaniesBlock CBrw;
	integer mtrw,i;
	record GlobalStoresVc GSr;
	
	logtext(0,"WebCreateConsultant");
	
	webgetpostdata(getpost);
	setcompany(1,false);
	
	jsresponse = ParseJSONArea(getpost);
	if(nonblank(MyJSGet(jsresponse,"hansaId")))then begin
		if(nonblank(MyJSGet(jsresponse,"shopId")))then begin
			blockload(CBb);		
			mtrw = matrowcnt(CBb);
			For(i=0;i<mtrw;i=i+1) begin
	  		matrowget(CBb,i,CBrw);
	  		setcompany(i+1,true);
	  		GSr.Code = "";
	  		resetloop(GSr);
	  		while(loopmain(GSr,1,true))begin
	  			if(GSr.Code==MyJSGet(jsresponse,"shopId"))then begin
	  				USr.Code = MyJSGet(jsresponse,"hansaId");
	  				if(readfirstmain(USr,1,true))then begin
	  					if(nonblank(MyJSGet(jsresponse,"firstName")))then begin
								USr.Name = MyJSGet(jsresponse,"firstName") & " " & MyJSGet(jsresponse,"lastName");
								USr.Phone1 = MyJSGet(jsresponse,"mainPhone");
								USr.Phone2 = MyJSGet(jsresponse,"mobilePhone");
								USr.emailAddr = MyJSGet(jsresponse,"email");
								weboutstring("{\"id\":\"" & USr.Code & "\"}");
								recordStore(USr,true);
								goto lWebUpdateConsultant;
	  					end else begin
	  						weboutstring("{\"error\":\"Blank first name\"}");
	  					end;
	  				end else begin
	  					weboutstring("{\"error\":\"Consultant not exist\"}");
	  				end;
	  			end;
	  		end;
			end; 
		end else begin
			weboutstring("{\"error\":\"hansaId is shopId\"}");
		end;
	end else begin
		weboutstring("{\"error\":\"hansaId is blank\"}");
	end;

lWebUpdateConsultant:;
resetcompany(1);

return;
end;

global webpublic updating procedure WebCreateLoyaltyCard()
begin
	record LoyaltyCardVc LCr;
	record CUVc CUr;
	area getpost;
	json jsresponse;
	boolean foundf;
	string 100 tstr,field;
	date birthdate,d1;
	
	logtext(0,"WebCreateLoyCard");
	setcompany(1,false);
	webgetpostdata(getpost);
	writeareatofile(getpost,"WebCreateLoyCard.txt",0);
	jsresponse = ParseJSONArea(getpost);
	if(nonblank(MyJSGet(jsresponse,"HansaId")))then begin
		LCr.SerNr = MyJSGet(jsresponse,"HansaId");
		if(readfirstmain(LCr,1,true)==false)then begin
			logtext(0,"Cont " & MyJSGet(jsresponse,"Contact"));
			CUr.Code = MyJSGet(jsresponse,"Contact");
			if(nonblank(CUr.Code))then begin
				if(readfirstmain(CUr,1,true))then begin
					recordnew(LCr);
						logtext(0,"Create Loyalty card with nonblank customer");
						CreateLoyaltyCardRemote(CUr,LCr);
						LCr.SerNr = uppercase(MyJSGet(jsresponse,"HansaId"));
						LCr.CustCode = MyJSGet(jsresponse,"Contact");
						LCr.LCMLevel = MyJSGet(jsresponse,"LoyaltyProgramId");
						LCr.CRMid = MyJSGet(jsresponse,"Id");
					
						d1.year = stringtoint(left(MyJSGet(jsresponse,"startdate"),4));
						d1.day = stringtoint(mid(MyJSGet(jsresponse,"startdate"),8,2));
						d1.month = stringtoint(mid(MyJSGet(jsresponse,"startdate"),5,2));
						LCr.StartDate = d1;
						d1.year = stringtoint(left(MyJSGet(jsresponse,"enddate"),4));
						d1.day = stringtoint(mid(MyJSGet(jsresponse,"enddate"),8,2));
						d1.month = stringtoint(mid(MyJSGet(jsresponse,"enddate"),5,2));
						LCr.ExpiryDate = d1;
						if(MyJSGet(jsresponse,"CardStatus")=="inactive")then begin
							LCr.Closed = 1;
						end;					
						CopyLoyaltyBalanceToNewCard(LCr);
					recordstore(LCr,true);
					weboutstring("{\"hansaId\":\"" & LCr.SerNr & "\"}");
				end else begin
					weboutstring("{\"error\":\"Customer not found\"}");
				end;
			end else begin
				recordnew(LCr);
					logtext(0,"Create Loyalty card with blank customer");
					LCr.SerNr = uppercase(MyJSGet(jsresponse,"HansaId"));
					LCr.CustCode = MyJSGet(jsresponse,"Contact");
					LCr.LCMLevel = MyJSGet(jsresponse,"LoyaltyProgramId");
					LCr.CRMid = MyJSGet(jsresponse,"Id");
					d1.year = stringtoint(left(MyJSGet(jsresponse,"startdate"),4));
					d1.day = stringtoint(mid(MyJSGet(jsresponse,"startdate"),8,2));
					d1.month = stringtoint(mid(MyJSGet(jsresponse,"startdate"),5,2));
					LCr.StartDate = d1;
					d1.year = stringtoint(left(MyJSGet(jsresponse,"enddate"),4));
					d1.day = stringtoint(mid(MyJSGet(jsresponse,"enddate"),8,2));
					d1.month = stringtoint(mid(MyJSGet(jsresponse,"enddate"),5,2));
					LCr.ExpiryDate = d1;
					LCr.Closed = 1;
				recordstore(LCr,true);
			end;
		end else begin
			weboutstring("{\"error\":\"Card already created\"}");
		end;			
	end;
return;
end;

global webpublic updating procedure WebUpdateLoyaltyCard()
begin
	record LoyaltyCardVc LCr;
	record CUVc CUr;
	area getpost;
	json jsresponse;
	boolean foundf;
	string 100 tstr,field;
	date birthdate,d1;
	
	logtext(0,"WebUpdateLoyCard");
	
	webgetpostdata(getpost);
	
	jsresponse = ParseJSONArea(getpost);
	if(nonblank(MyJSGet(jsresponse,"hansaId")))then begin
		LCr.SerNr = MyJSGet(jsresponse,"hansaId");
		if(readfirstmain(LCr,1,true))then begin
			LCr.SerNr = MyJSGet(jsresponse,"hansaId");
			LCr.LCMLevel = MyJSGet(jsresponse,"LoyaltyProgramId");
			d1.year = stringtoint(left(MyJSGet(jsresponse,"startdate"),4));
			d1.day = stringtoint(mid(MyJSGet(jsresponse,"startdate"),8,2));
			d1.month = stringtoint(mid(MyJSGet(jsresponse,"startdate"),5,2));
			LCr.StartDate = d1;
			d1.year = stringtoint(left(MyJSGet(jsresponse,"enddate"),4));
			d1.day = stringtoint(mid(MyJSGet(jsresponse,"enddate"),8,2));
			d1.month = stringtoint(mid(MyJSGet(jsresponse,"enddate"),5,2));
			LCr.ExpiryDate = d1;
			if(MyJSGet(jsresponse,"CardStatus")=="inactive")then begin
				LCr.Closed = 1;
			end;
			if(MyJSGet(jsresponse,"CardStatus")=="active")then begin
				LCr.Closed = 0;
			end;
			recordstore(LCr,true);
			weboutstring("{\"hansaId\":\"" & LCr.SerNr & "\"}");
		end else begin
			weboutstring("{\"error\":\"Card not found\"}");
		end;			
	end else begin
		weboutstring("{\"error\":\"blank hansaId\"}");
	end;
return;
end;

updating procedure CreateCustomerFromArr(area getpost)
begin
	record CUVc CUr;
	json jsresponse;
	boolean foundf;
	string 100 tstr,field,status,gender;
	date birthdate;
	
	jsresponse = ParseJSONArea(getpost);
	logtext(0,"hansaId " & MyJSGet(jsresponse,"hansaId"));
	if(nonblank(MyJSGet(jsresponse,"hansaId")) and nonblank(MyJSGet(jsresponse,"Id")))then begin
		CUr.ANACode = MyJSGet(jsresponse,"id");
		if(readfirstkey("ANACode",CUr,1,true)==false)then begin
			CUr.Phone = left(MyJSGet(jsresponse,"landlineNumber"),20);
			if(readfirstkey("Phone",CUr,1,true))then begin
				foundf = true;
			end;
			
			status = MyJSGet(jsresponse,"status");
			
			CUr.CRMid = MyJSGet(jsresponse,"Id");
			CUr.Phone = left(MyJSGet(jsresponse,"landlineNumber"),20);
			CUr.Mobile = left(MyJSGet(jsresponse,"mobilePhone1"),20);
			CUr.AltPhone = left(MyJSGet(jsresponse,"mobilePhone2"),20);
			CUr.Fax = MyJSGet(jsresponse,"mobilePhone3");
			if(CustomerWithPhoneExists(CUr,tstr,field))then begin
				weboutstring("{\"error\":\" Customer with phone exists" & field & "\"}");
			end else begin
				if(CustomerWithEmailExists("",MyJSGet(jsresponse,"mainEmail")))then begin
					weboutstring("{\"error\":\"Customer with e-Mail exist\"}");
				end else begin
					recordnew(CUr);
					CUr.Code = MyJSGet(jsresponse,"hansaId");
					
					CUr.CRMName = MyJSGet(jsresponse,"firstName");
					CUr.CRMLName = MyJSGet(jsresponse,"lastName");
					CUr.CRMPatr = MyJSGet(jsresponse,"middleName");
					StripEndingSpaces(CUr.CRMName);
					StripEndingSpaces(CUr.CRMLName);
					
					if(status=="active")then begin
						CUr.blockedFlag = 0;
					end;
					if(status=="inactive")then begin
						CUr.blockedFlag = 1;
					end;
					
					gender = MyJSGet(jsresponse,"gender");
					if(status=="Male")then begin
						CUr.Gender = 0;
					end;
					if(status=="Female")then begin
						CUr.Gender = 1;
					end;
					
					if(nonblank(MyJSGet(jsresponse,"firstName")) or nonblank(MyJSGet(jsresponse,"lastName")))then begin
						CUr.Name = MyJSGet(jsresponse,"firstName") & " " & MyJSGet(jsresponse,"lastName");
					end;
					StripEndingSpaces(CUr.Name);
					CUr.Phone = left(MyJSGet(jsresponse,"landlineNumber"),20);
					CUr.Mobile = left(MyJSGet(jsresponse,"mobilePhone1"),20);
					CUr.AltPhone = left(MyJSGet(jsresponse,"mobilePhone2"),20);
					CUr.Fax = left(MyJSGet(jsresponse,"mobilePhone3"),20);
					CUr.eMail = MyJSGet(jsresponse,"mainEmail");
					birthdate.year = stringtoint(left(MyJSGet(jsresponse,"birthday"),4));
					birthdate.day = stringtoint(mid(MyJSGet(jsresponse,"birthday"),8,2));
					birthdate.month = stringtoint(mid(MyJSGet(jsresponse,"birthday"),5,2));
					CUr.BirthDate = birthdate;
					CUr.ANACode = MyJSGet(jsresponse,"id");
					CUr.RebCode = "0%";
					CUr.PLCode = "RRP";
					recordinsert(CUr,true);
					weboutstring("{\"id\":\"" & CUr.Code & "\"}");
				end;
			end;
		end else begin
			weboutstring("{\"error\":\"Customer already created\"}");
		end;
	end else begin
		weboutstring("{\"error\":\"Blank hansaId or Id\"}");
	end;
	
return;
end;

global webpublic updating procedure WebCreateCustomer()
begin
	record CUVc CUr;
	area getpost;
	json jsresponse;
	boolean foundf;
	string 100 tstr,field,status,gender;
	date birthdate;
	
	logtext(0,"WebCreateCustomer");
	webgetpostdata(getpost);

	setcompany(1,false);
	
	CreateCustomerFromArr(getpost);
	
	addtexttoarea(" CreateCustomerFromArr " & CUr.Code & " " & currentcompany & " ",getpost);
	addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,getpost);
	writeareatofile(getpost,"CRMCustomers.txt",1);
	
return;
end;

global webpublic updating procedure WebUpdateCustomer()
begin
	record CUVc CUr,oldCUr;
	area getpost;
	json jsresponse;
	boolean foundf;
	string 100 tstr,field,status,gender;
	date birthdate;
	record PhoneVc Phoner;
	boolean TrHs;
	integer i,phonesqty;
	array string 255 phones;
	boolean updatef,mail,lcfound;
	record LoyaltyCardVc LCr;
	
	logtext(0,"WebUpdateCustomer");
	
	webgetpostdata(getpost);
	
	SetCompany(1,false);
	
	jsresponse = ParseJSONArea(getpost);
	if(nonblank(MyJSGet(jsresponse,"hansaId")))then begin
		CUr.Code = MyJSGet(jsresponse,"hansaId");
		if(CUr.Code=="NONAME")then begin
			goto lWebUpdateCustomer;
		end;
		if(CUr.Code=="NOFULLNAME")then begin
			goto lWebUpdateCustomer;
		end;
		if(CUr.Code=="VIP30")then begin
			goto lWebUpdateCustomer;
		end;
		if(CUr.Code=="VIP25")then begin
			goto lWebUpdateCustomer;
		end;
		if(CUr.Code=="VIP")then begin
			goto lWebUpdateCustomer;
		end;
		
		if(readfirstkey("Code",CUr,1,true)==true)then begin
			LCr.CustCode = Cur.Code;
			lcfound = false;
			TrHs = true;
			while(loopkey("CustCode",LCr,1,TrHs))begin
				if(LCr.CustCode!=Cur.Code)then begin
					TrHs = false;
				end;
				if(TrHs)then begin
					if(LCr.LCMLevel=="1" or LCr.LCMLevel=="EMPL")then begin
						lcfound = true;
					end;
				end;
			end;
			//Обновление персональных данных в карточке клиента отключено по письму от Натаван И Щахрияра 4/2/2021 "Re: Отключение обновление ФИО контактов из CMR"
			logtext(0,CUr.Code);
			status = MyJSGet(jsresponse,"status");
			if(status=="active")then begin
				oldCUr.blockedFlag = 0;
			end;
			if(status=="inactive")then begin
				oldCUr.blockedFlag = 1;
			end;
			
			if(oldCUr.blockedFlag!=CUr.blockedFlag)then begin
				CUr.blockedFlag = oldCUr.blockedFlag;
				updatef = true;
			end;
			
			birthdate.year = stringtoint(left(MyJSGet(jsresponse,"birthday"),4));
			birthdate.day = stringtoint(mid(MyJSGet(jsresponse,"birthday"),8,2));
			birthdate.month = stringtoint(mid(MyJSGet(jsresponse,"birthday"),5,2));
			
			
			if(CUr.CRMid!=MyJSGet(jsresponse,"Id"))then begin
				CUr.CRMid = MyJSGet(jsresponse,"Id");
				updatef = true;
			end;
			if(lcfound==false)then begin
				CUr.BirthDate = birthdate;			
				CUr.Phone = MyJSGet(jsresponse,"landlineNumber");
				CUr.Mobile = MyJSGet(jsresponse,"mobilePhone1");
				CUr.AltPhone = MyJSGet(jsresponse,"mobilePhone2");
				CUr.Fax = MyJSGet(jsresponse,"mobilePhone3");
				CUr.eMail = MyJSGet(jsresponse,"mainEmail");			
				gender = MyJSGet(jsresponse,"gender");
				if(status=="Male")then begin
					CUr.Gender = 0;
				end;
				if(status=="Female")then begin
					CUr.Gender = 1;
				end;			
				CUr.CRMName = MyJSGet(jsresponse,"firstName");
				StripEndingSpaces(CUr.CRMName);
				CUr.CRMLName = MyJSGet(jsresponse,"lastName");
				StripEndingSpaces(CUr.CRMLName);
				CUr.CRMPatr = MyJSGet(jsresponse,"middleName");		
				StripEndingSpaces(CUr.CRMPatr);
				if(nonblank(MyJSGet(jsresponse,"middleName")) or nonblank(MyJSGet(jsresponse,"lastName")))then begin
					CUr.Name = MyJSGet(jsresponse,"firstName") & " " & MyJSGet(jsresponse,"lastName");
					StripEndingSpaces(CUr.Name);
				end;
				updatef = true;
			end else begin
				//Фиксирование изменения регистра
				oldCUr.BirthDate = birthdate;	
				if(nonblankdate(oldCUr.BirthDate))then begin		
					if(blankdate(CUr.BirthDate) and CUr.BirthDate!=oldCUr.BirthDate)then begin
						CUr.BirthDate = oldCUr.BirthDate;
						updatef = true;
					end;
				end;
			
				oldCUr.Phone = MyJSGet(jsresponse,"landlineNumber");
				if(nonblank(oldCUr.Phone))then begin
					if(blank(CUr.Phone) and CUr.Phone!=oldCUr.Phone)then begin
						CUr.Phone = oldCUr.Phone;
						updatef = true;
					end;
				end;
				oldCUr.Mobile = MyJSGet(jsresponse,"mobilePhone1");
				if(nonblank(oldCUr.Mobile))then begin
					if(blank(CUr.Mobile) and CUr.Mobile!=oldCUr.Mobile)then begin
						CUr.Mobile = oldCUr.Mobile;
						updatef = true;
					end;
				end;
			
				oldCUr.AltPhone = MyJSGet(jsresponse,"mobilePhone2");
				if(nonblank(oldCUr.AltPhone))then begin
					if(blank(CUr.AltPhone) and CUr.Mobile!=oldCUr.AltPhone)then begin
						CUr.AltPhone = oldCUr.AltPhone;
						updatef = true;
					end;
				end;
				oldCUr.Fax = MyJSGet(jsresponse,"mobilePhone3");
				if(nonblank(oldCUr.Fax))then begin
					if(blank(CUr.Fax) and CUr.Fax!=oldCUr.Fax)then begin
						CUr.Fax = oldCUr.Fax;
						updatef = true;
					end;
				end;
				oldCUr.eMail = MyJSGet(jsresponse,"mainEmail");		
				if(nonblank(oldCUr.eMail))then begin
					if(blank(CUr.eMail) and CUr.eMail!=oldCUr.eMail)then begin
						CUr.eMail = oldCUr.eMail;
						updatef = true;
					end;	
				end;
			
				gender = MyJSGet(jsresponse,"gender");
				if(nonblank(gender))then begin
					if(gender=="Male")then begin
						oldCUr.Gender = 0;
					end;
					if(gender=="Female")then begin
						oldCUr.Gender = 1;
					end;		
					if(CUr.Gender!=oldCUr.Gender)then begin
						CUr.Gender = oldCUr.Gender;
						updatef = true;
					end;
				end else begin
					oldCUr.Gender = CUr.Gender;
				end;
			
				
				oldCUr.CRMName = MyJSGet(jsresponse,"firstName");
				StripEndingSpaces(oldCUr.CRMName);
				if(nonblank(oldCUr.CRMName))then begin
					if(blank(CUr.CRMName) and CUr.CRMName!=oldCUr.CRMName)then begin
						CUr.CRMName = oldCUr.CRMName;
						updatef = true;
					end;	
				end;
				oldCUr.CRMLName = MyJSGet(jsresponse,"lastName");
				StripEndingSpaces(oldCUr.CRMLName);
				if(nonblank(oldCUr.CRMLName))then begin
					if(blank(CUr.CRMLName) and CUr.CRMLName!=oldCUr.CRMLName)then begin
						CUr.CRMLName = oldCUr.CRMLName;
						updatef = true;
					end;
				end;
				oldCUr.CRMPatr = MyJSGet(jsresponse,"middleName");	
				if(nonblank(oldCUr.CRMPatr))then begin
					if(blank(CUr.CRMPatr) and CUr.CRMPatr!=oldCUr.CRMPatr)then begin
						CUr.CRMPatr = oldCUr.CRMPatr;
						updatef = true;
					end;
				end;
			
			
				if(nonblank(MyJSGet(jsresponse,"firstName")) or nonblank(MyJSGet(jsresponse,"lastName")))then begin
					oldCUr.Name = MyJSGet(jsresponse,"firstName") & " " & MyJSGet(jsresponse,"lastName");
					StripEndingSpaces(oldCUr.Name);
				end;
				if(blank(CUr.Name) and CUr.Name!=oldCUr.Name)then begin
					CUr.Name = oldCUr.Name;
					updatef = true;
				end else begin
					if(CUr.CRMName==oldCUr.CRMName and CUr.CRMLName==oldCUr.CRMLName)then begin
						oldCUr.Name = MyJSGet(jsresponse,"firstName") & " " & MyJSGet(jsresponse,"lastName");
						StripEndingSpaces(oldCUr.Name);
						updatef = true;
					end;
				end;
			
				mail = false;
				//if(nonblank(CUr.Name) and CUr.Name!=oldCUr.Name) then begin logtext(0,"Name"); mail = true; end;
				if(nonblankdate(CUr.BirthDate) and CUr.BirthDate!=oldCUr.BirthDate)  then begin logtext(0,"BirthDate"); mail = true; end;
				if(nonblank(CUr.Phone) and CUr.Phone!=oldCUr.Phone)  then begin logtext(0,"Phone"); mail = true; end;
				if(nonblank(CUr.Mobile) and CUr.Mobile!=oldCUr.Mobile)  then begin logtext(0,"Mobile"); mail = true; end;
				if(nonblank(CUr.AltPhone) and CUr.AltPhone!=oldCUr.AltPhone)  then begin logtext(0,"AltPhone"); mail = true; end;
				if(nonblank(CUr.Fax) and CUr.Fax!=oldCUr.Fax)  then begin logtext(0,"Fax"); mail = true; end;
				if(nonblank(CUr.eMail) and CUr.eMail!=oldCUr.eMail)  then begin logtext(0,"eMail"); mail = true; end;
				if((CUr.Gender!=3 and CUr.Gender!=oldCUr.Gender))  then begin logtext(0,"Gender"); mail = true; end;
				if(nonblank(CUr.CRMName) and CUr.CRMName!=oldCUr.CRMName)  then begin logtext(0,"CRMName"); mail = true; end;
				if(nonblank(CUr.CRMLName) and CUr.CRMLName!=oldCUr.CRMLName)  then begin logtext(0,"CRMLName"); mail = true; end;
				if(nonblank(CUr.CRMPatr) and CUr.CRMPatr!=oldCUr.CRMPatr) then begin logtext(0,"CRMPatr"); mail = true; end;
		
				if(mail)then begin
					SendMailTiCRMForChangeCustomer(CUr,oldCUr);
				end;
			end;
			
			if(updatef)then begin
				recordstore(CUr,true);
			end;
			
			if(updatef)then begin
				resetloop(Phoner);
				TrHs = true;
				Phoner.CUCode = CUr.Code;
				while (LoopKey("CUCode",Phoner,1,TrHs)) begin
					if (Phoner.CUCode!=CUr.Code) then begin TrHs = false; end;
					if (TrHs) then begin
						RecordDelete(Phoner);
						StepBack(Phoner);
					end;
				end;
		
				ParsePhones(CUr.Phone,phonesqty,phones);
				for (i=0;i<=phonesqty;i=i+1) begin
					recordnew(Phoner);
					Phoner.PhoneNum = phones[i];
					Phoner.CUCode = CUr.Code;
					recordStore(Phoner,true);
				end;
		
				ParsePhones(CUr.AltPhone,phonesqty,phones);
				for (i=0;i<=phonesqty;i=i+1) begin
					recordnew(Phoner);
					Phoner.PhoneNum = phones[i];
					Phoner.CUCode = CUr.Code;
					recordStore(Phoner,true);
				end;
		
				ParsePhones(CUr.Mobile,phonesqty,phones);
				for (i=0;i<=phonesqty;i=i+1) begin
					recordnew(Phoner);
					Phoner.PhoneNum = phones[i];
					Phoner.CUCode = CUr.Code;
					recordStore(Phoner,true);
				end;
			end;
			weboutstring("{\"id\":\"" & CUr.Code & "\"}");
			
		end else begin
			weboutstring("{\"error\":\"Customer not exist\",\"result\":\"try create\"}");
			logtext(0,"CreateCustomerFromArr+++++++++++++++++++++++++++++++++++++");
			CreateCustomerFromArr(getpost);
			addtexttoarea(" CreateCustomerFromArr " & CUr.Code & " " & currentcompany & " ",getpost)
		end;
	end else begin
		weboutstring("{\"error\":\"hansaID is blank\"}");
	end;
	
	addtexttoarea(" WebUpdateCustomer " & CUr.Code & " " & currentcompany & " ",getpost);
	addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,getpost);
	writeareatofile(getpost,"CRMCustomers.txt",1);
lWebUpdateCustomer:;

return;
end;



global function string 255 NormalizeStrToJson (string Str)
begin
	integer strln,i;
	string 255 NormStr;
	string 5 ch;
	
	NormStr = "";
	strln = len(Str);
	for (i=0;i<strln;i=i+1)begin
		ch = mid(Str,i,1);
		switch(ch)begin// Edit ************************** BPI Ukraine - KramarAlexandr - 02, 20 10 2020 y. at 10:02:13 AM
			case "\"": NormStr = NormStr & chr(92) & mid(Str,i,1);
			case "\\": NormStr = NormStr & chr(92) & mid(Str,i,1);
			otherwise
				NormStr = NormStr & ch;
		end;
		/*if(mid(Str,i,1)==chr(34))then begin// Edit ************************** BPI Ukraine - KramarAlexandr - 02, 20 10 2020 y. at 10:02:11 AM
			NormStr = NormStr & chr(92) & mid(Str,i,1);
		end else begin
			NormStr = NormStr & mid(Str,i,1);
		end;*/
	end;
	
	
	NormalizeStrToJson = NormStr;
	
	return
end;

global updating procedure SednUpdateMarcCampVcToCRM(var record MarcCampVc MCr)
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply;
  string 255 ha1,ha2;
  row MarcCampVc MCrw;
  integer i;
  json rejs;
  record WebReportChBlock WRChb;
	blockload(WRChb);		
	if(WRChb.WEBCheck==1)then begin
		host = "192.168.3.11";
		page = "/api/MarketingCampaign/Update";
		port = 8088;
		logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
		if(fileexists("demoserver"))then begin
			port = 8087;
 			logtext(0,"newport 8087");
		end;


		addtexttoarea("{" & chr(13) & chr(10),req);
		addtexttoarea("\"campaignName\":\"" & NormalizeStrToJson(MCr.Name) & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"name\":\"" & NormalizeStrToJson(MCr.Name) & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"proposedStartDate\":"  & "\"" & DateToString(MCr.sDate,"YYYY-MM-DD") & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"proposedEndDate\":"  & "\"" & DateToString(MCr.eDate,"YYYY-MM-DD") & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"actualStartDate\":"  & "\"" & DateToString(MCr.RealsDate,"YYYY-MM-DD") & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"actualEndDate\":"  & "\"" & DateToString(MCr.RealeDate,"YYYY-MM-DD") & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"Id\":" & "\"" & NormalizeStrToJson(MCr.CRMID) & "\"" & chr(13) & chr(10),req);
		addtexttoarea("}" & chr(13) & chr(10),req);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,req);
		writeareatofile(req,"CRMRequest.txt",1);
		if (SendWebRequest(host,port,-1,false,"PATCH",page,"application/json","",false,req,reply,5)) then begin
			addtexttoarea(" SednUpdateMarcCampVcToCRM " & MCr.Code & " " & currentcompany & " ",reply);
			addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
			writeareatofile(reply,"CRMResponse.txt",1);
			rejs = ParseJSONArea(reply);
			if(nonblank(MyJSGet(rejs,"result")))then begin
				MCr.Sended = 1;
				logtext(0,"SednUpdateMarcCampVcToCRM " &MyJSGet(rejs,"result"));
			end;
		end;
	end;
return;
end;

global procedure SendRemoteImpRequestMn()
begin
	area reply, ErrAr2;
	
	if(fileexists("BTRxErrMail.txt"))then begin
		setareazerosize(ErrAr2);
		addtexttoarea("{",ErrAr2);
		addtexttoarea("\"host\":\"smtp.gmail.com\",",ErrAr2);
		addtexttoarea("\"port\":465,",ErrAr2);
		addtexttoarea("\"secure\":true,",ErrAr2);
		addtexttoarea("\"user\":\"IDReporSender@gmail.com\",",ErrAr2);
		addtexttoarea("\"pass\":\"c2h5ohc2h5oh\",",ErrAr2);
		addtexttoarea("\"from\":\"IDReportSender@gmail.com\",",ErrAr2);
		addtexttoarea("\"to\":\"" & "forfun942@gmail.com" & "\",",ErrAr2);
		addtexttoarea("\"subject\":\"" & USetStr(36240) & " " & CurrentDate & "\",",ErrAr2);
		addtexttoarea("\"plaintext\":\"notblank\",",ErrAr2);		
		addtexttoarea("\"filename\":\"BTRxErrMail.txt\",",ErrAr2);				
		addtexttoarea("\"path\":\"/usr/local/bin/StandardERPServer/" & "BTRxErrMail.txt" & "\"",ErrAr2);
		addtexttoarea("}",ErrAr2);

		logtext(0,"ImportAddClassIn");
		//SendWebRequest("127.0.0.1",1071,1071,false,"POST","/sendMail","application/json","",false,ErrAr2,reply,5);
		//SendAsyncWebRequest("127.0.0.1",1071,-1,false,"POST","/sendMail","application/json","",ErrAr2,"",5);
		SendWebRequest("127.0.0.1",1071,-1,false,"POST","/sendMail","application/json","",false,ErrAr2,reply,5);
		logtext(0,"reply length " & getarealength(reply));

		SendWebRequest("127.0.0.1",1071,-1,false,"POST","/sendMail","application/json","",false,ErrAr2,reply,5);
		MilliSleep(2000);
		Delete_File("BTRxErrMail.txt");
	end;

return;
end;

global updating procedure SednMarcCampVcToCRM(var record MarcCampVc MCr)
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply;
  string 255 ha1,ha2;
  row MarcCampVc MCrw;
  integer i;
  json rejs,jsresponse;
  record WebReportChBlock WRChb;
  
  
	blockload(WRChb);		
	if(WRChb.WEBCheck==1)then begin
		host = "192.168.3.11";
		page = "/api/MarketingCampaign/Create";
		port = 8088;
		logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
		if(fileexists("demoserver"))then begin
			port = 8087;
 			logtext(0,"newport 8087");
		end;
		
		if(nonblank(MCr.CRMID))then begin
			SednUpdateMarcCampVcToCRM(MCr);
		end else begin
			if(blank(MCr.CRMID))then begin
				SendWebRequest(host,port,-1,false,"GET","/api/MarketingCampaign/GetCrmId?hansaId=" & UrlEncode(MCr.Code),"application/json","",false,req,reply,5);
				jsresponse = ParseJSONArea(reply);
				if(nonblank(MyJSGet(jsresponse,"result")))then begin
					MCr.CRMID = MyJSGet(jsresponse,"result");
					if(nonblank(MCr.CRMID))then begin
						SednUpdateMarcCampVcToCRM(MCr);
					end;
					recordstore(MCr,true);
					goto LMarketingCampaign;
				end;
			end;
			addtexttoarea("{" & chr(13) & chr(10),req);
			addtexttoarea("\"campaignName\":\"" & NormalizeStrToJson(MCr.Name) & "\"," & chr(13) & chr(10),req);
			addtexttoarea("\"name\":\"" & NormalizeStrToJson(MCr.Name) & "\"," & chr(13) & chr(10),req);
			addtexttoarea("\"proposedStartDate\":"  & "\"" & DateToString(MCr.sDate,"YYYY-MM-DD") & "\"," & chr(13) & chr(10),req);
			addtexttoarea("\"proposedEndDate\":"  & "\"" & DateToString(MCr.eDate,"YYYY-MM-DD") & "\"," & chr(13) & chr(10),req);
			addtexttoarea("\"actualStartDate\":"  & "\"" & DateToString(MCr.RealsDate,"YYYY-MM-DD") & "\"," & chr(13) & chr(10),req);
			addtexttoarea("\"actualEndDate\":"  & "\"" & DateToString(MCr.RealeDate,"YYYY-MM-DD") & "\"," & chr(13) & chr(10),req);
			addtexttoarea("\"hansaId\":" & "\"" & NormalizeStrToJson(MCr.Code) & "\"" & chr(13) & chr(10),req);
			addtexttoarea("}" & chr(13) & chr(10),req);
			addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,req);
			writeareatofile(req,"CRMRequest.txt",1);
			if (SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5)) then begin
				addtexttoarea(" SednMarcCampVcToCRM " & MCr.Code & " " & currentcompany & " ",reply);
				addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
				writeareatofile(reply,"CRMResponse.txt",1);
				rejs = ParseJSONArea(reply);
				if(nonblank(MyJSGet(rejs,"result")))then begin
					MCr.CRMID = MyJSGet(rejs,"result");
					MCr.Sended = 1;
					logtext(0,"SednMarcCampVcToCRM " & MCr.CRMID);
				end;
			end;
			addtexttoarea(" SednMarcCampVcToCRM " & MCr.Code & " " & currentcompany & " ",reply);
			addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
	writeareatofile(reply,"CRMResponse.txt",1);
		end;
	end;
	
	LMarketingCampaign:;
	
return;
end;

global updating procedure SednSyncReqMarcCampVcToCRM(var record MarcCampVc MCr)
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply;
  string 255 ha1,ha2;
  row MarcCampVc MCrw;
  integer i;
  json rejs;
  record WebReportChBlock WRChb;
	blockload(WRChb);		
	if(WRChb.WEBCheck==1)then begin
		host = "192.168.3.11";
		page = "/api/MarketingCampaign/SyncCampaignProducts";
		port = 8088;
		logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
		if(fileexists("demoserver"))then begin
			port = 8087;
 			logtext(0,"newport 8087");
		end;

		logtext(0,page & "?ID=" & MCr.CRMID);
		if (SendWebRequest(host,port,-1,false,"GET",page & "?id=" & MCr.CRMID,"application/json","",false,req,reply,5)) then begin

		end;
		addtexttoarea(" SednSyncReqMarcCampVcToCRM " & MCr.Code & " " & currentcompany & " ",reply);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
		writeareatofile(reply,"CRMResponse.txt",1);
	end;
return;
end;

global updating procedure SednConsultantToCRM(var record UserVc USr)
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply;
  string 255 ha1,ha2;
  row MarcCampVc MCrw;
  integer i;
  json jsresponse;
  string 50 shopid;
  record WebReportChBlock WRChb;
	blockload(WRChb);	
		
	if(WRChb.WEBCheck==1)then begin
		host = "192.168.3.11";
		page = "/api/Consultant/Create";
		port = 8088;
		logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
		if(fileexists("demoserver"))then begin
			port = 8087;
 	logtext(0,"newport 8087");
		end;


		SendWebRequest(host,port,-1,false,"GET","/api/Shop/GetCrmId?hansaId=" & UrlEncode(USr.Location),"application/json","",false,req,reply,5);
		shopid = getstringfromarea(reply,0,getarealength(reply));
		logtext(0,"shopid" & shopid);
		jsresponse = ParseJSONArea(reply);
		if(nonblank(MyJSGet(jsresponse,"result")))then begin
			shopid = MyJSGet(jsresponse,"result");
			logtext(0,"SednConsultantToCRM shopid " & MyJSGet(jsresponse,"result"));
		end;
		setareazerosize(reply);
		
		addtexttoarea("{" & chr(13) & chr(10),req);
		addtexttoarea("\"firstName\":\"" & NormalizeStrToJson(USr.Name) & "\"," & chr(13) & chr(10),req);
		if(nonblank(shopid)) then begin
		addtexttoarea("\"shopId\":\"" & NormalizeStrToJson(shopid) & "\"," & chr(13) & chr(10),req);
		end;
		addtexttoarea("\"email\":\"" & NormalizeStrToJson(USr.emailAddr) & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"mainPhone\":\"" & USr.Phone1 & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"hansaId\":" & "\"" & NormalizeStrToJson(USr.Code) & "\"," & chr(13) & chr(10),req);
		if(USr.Closed==0)then begin
			addtexttoarea("\"status\":\"" & "active" & "\"" & chr(13) & chr(10),req);
		end else begin
			addtexttoarea("\"status\":\"" & "inactive" & "\"" & chr(13) & chr(10),req);
		end;
		addtexttoarea("}" & chr(13) & chr(10),req);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,req);
		writeareatofile(req,"CRMRequest.txt",1);
		SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5);
		if(getarealength(reply)>0)then begin
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				USr.CRMid = MyJSGet(jsresponse,"result");
				logtext(0,"SednConsultantToCRM" & MyJSGet(jsresponse,"result"));
			end;
		end;
		addtexttoarea(" SednConsultantToCRM " & USr.Code & " " & currentcompany & " ",reply);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
		writeareatofile(reply,"CRMResponse.txt",1);
	end;
return;
end;



global updating procedure SednUpdateConsultantToCRM(var record UserVc USr)
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply;
  string 255 ha1,ha2;
  row MarcCampVc MCrw;
  integer i;
  json jsresponse;
  string 50 shopid;
  record WebReportChBlock WRChb;
	blockload(WRChb);	
		
	if(WRChb.WEBCheck==1)then begin
		host = "192.168.3.11";
		page = "/api/Consultant/Update";
		port = 8088;
		logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
		if(fileexists("demoserver"))then begin
			port = 8087;
 	logtext(0,"newport 8087");
		end;


		SendWebRequest(host,port,-1,false,"GET","/api/Shop/GetCrmId?hansaId=" & UrlEncode(USr.Location),"application/json","",false,req,reply,5);
		shopid = getstringfromarea(reply,0,getarealength(reply));
		logtext(0,"shopid" & shopid);
		jsresponse = ParseJSONArea(reply);
		if(nonblank(MyJSGet(jsresponse,"result")))then begin
			shopid = MyJSGet(jsresponse,"result");
			logtext(0,"SednConsultantToCRM shopid " & MyJSGet(jsresponse,"result"));
		end;
		setareazerosize(reply);
		
		addtexttoarea("{" & chr(13) & chr(10),req);
		addtexttoarea("\"firstName\":\"" & NormalizeStrToJson(USr.Name) & "\"," & chr(13) & chr(10),req);
		if(nonblank(shopid)) then begin
		addtexttoarea("\"shopId\":\"" & NormalizeStrToJson(shopid) & "\"," & chr(13) & chr(10),req);
		end;
		if(USr.Closed==0)then begin
			addtexttoarea("\"status\":\"" & "active" & "\"," & chr(13) & chr(10),req);
		end else begin
			addtexttoarea("\"status\":\"" & "inactive" & "\"," & chr(13) & chr(10),req);
		end;
		
		addtexttoarea("\"email\":\"" & NormalizeStrToJson(USr.emailAddr) & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"mainPhone\":\"" & USr.Phone1 & "\"," & chr(13) & chr(10),req);
		if(nonblank(USr.CRMid)) then begin
			addtexttoarea("\"id\":" & "\""& NormalizeStrToJson(USr.CRMid) &"\"" & chr(13) & chr(10),req);
		end else begin
			SendWebRequest(host,port,-1,false,"GET","/api/Consultant/GetCrmId?hansaId=" & UrlEncode(USr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				shopid = MyJSGet(jsresponse,"result");
				logtext(0,"SednConsultantToCRM id " & MyJSGet(jsresponse,"result"));
				USr.CRMid = shopid;
			end;
			if(nonblank(USr.CRMid)) then begin
				addtexttoarea("\"id\":" & "\""& NormalizeStrToJson(USr.CRMid) &"\"" & chr(13) & chr(10),req);
			end else begin
				SednConsultantToCRM(USr);
				goto lSednUpdateConsultantToCRM; 
			end;			
		end;
		addtexttoarea("}" & chr(13) & chr(10),req);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,req);
		writeareatofile(req,"CRMRequest.txt",1);
		SendWebRequest(host,port,-1,false,"PATCH",page,"application/json","",false,req,reply,5);
		if(getarealength(reply)>0)then begin
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				logtext(0,"SednUpdateConsultantToCRM" & MyJSGet(jsresponse,"result"));
			end;
		end;
		addtexttoarea(" SednUpdateConsultantToCRM " & USr.Code & " " & currentcompany & " ",reply);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
		writeareatofile(reply,"CRMResponse.txt",1);
	end;
	
	
lSednUpdateConsultantToCRM:;
return;
end;

global updating procedure SednDelConsultantToCRM(var record UserVc USr)
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply;
  string 255 ha1,ha2;
  row MarcCampVc MCrw;
  integer i;
  json jsresponse;
  string 50 shopid;
	record WebReportChBlock WRChb;
	blockload(WRChb);	
		
	if(WRChb.WEBCheck==1)then begin
  
		host = "192.168.3.11";
		page = "/api/Consultant/Delete";
		port = 8088;
		logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
		if(fileexists("demoserver"))then begin
			port = 8087;
 			logtext(0,"newport 8087");
		end;

		
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,req);
		writeareatofile(req,"CRMRequest.txt",1);
		SendWebRequest(host,port,-1,false,"DELETE",page & "?id=" & USr.CRMid,"application/json","id",false,req,reply,5);
		if(getarealength(reply)>0)then begin
			jsresponse = ParseJSONArea(reply);
			if(MyJSGet(jsresponse,"result")==USr.CRMid)then begin
				USr.CRMid = "";
			end;
		end;
		addtexttoarea(" SednDelConsultantToCRM " & USr.Code & " " & currentcompany & " ",reply);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
		writeareatofile(reply,"CRMResponse.txt",1);
	end;
return;
end;

global updating procedure SendBrandToCRM(var record GlobalBrandsVc GBr) // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger11:38 11.09.2018
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply;
  string 255 ha1,ha2;
  row MarcCampVc MCrw;
  integer i;
  json jsresponse;
	record WebReportChBlock WRChb;
	blockload(WRChb);		
	if(WRChb.WEBCheck==1)then begin
	
  
		host = "192.168.3.11";
		page = "/api/Brand/Create";
		port = 8088;
		logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
		if(fileexists("demoserver"))then begin
			port = 8087;
 			logtext(0,"newport 8087");
		end;
		
		if(blank(GBr.CRMid))then begin
			SendWebRequest(host,port,-1,false,"GET","/api/Brand/GetCrmId?hansaId=" & UrlEncode(GBr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				GBr.CRMid = MyJSGet(jsresponse,"result");
				recordstore(GBr,true);
				goto lSendBrandToCRM;
			end;
		end;
		
		addtexttoarea("{" & chr(13) & chr(10),req);
		addtexttoarea("\"brand\":\"" & NormalizeStrToJson(GBr.Name) & "\"," & chr(13) & chr(10),req);
		//addtexttoarea("\"id\":" & "\"\"," & chr(13) & chr(10),req);
		addtexttoarea("\"hansaId\":" & "\"" & NormalizeStrToJson(GBr.Code) & "\"" & chr(13) & chr(10),req);
		addtexttoarea("}" & chr(13) & chr(10),req);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,req);
		writeareatofile(req,"CRMRequest.txt",1);
		SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5);
		if(getarealength(reply)>0)then begin
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				GBr.CRMid = MyJSGet(jsresponse,"result");
				recordstore(GBr,true);
				logtext(0,"SendBrandToCRM " & MyJSGet(jsresponse,"result"));
			end;
		end;
		addtexttoarea(" SendBrandToCRM " & GBr.Code & " " & currentcompany & " ",reply);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
		writeareatofile(reply,"CRMResponse.txt",1);
	end;
	lSendBrandToCRM:;
	
return;
end;


global updating procedure SendUpdateBrandToCRM(var record GlobalBrandsVc GBr) // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger11:38 11.09.2018
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply;
  string 255 ha1,ha2;
  row MarcCampVc MCrw;
  integer i;
  json jsresponse;
	record WebReportChBlock WRChb;
	blockload(WRChb);		
	if(WRChb.WEBCheck==1)then begin
	
  
		host = "192.168.3.11";
		page = "/api/Brand/Update";
		port = 8088;
		logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
		if(fileexists("demoserver"))then begin
			port = 8087;
 			logtext(0,"newport 8087");
		end;

		
		addtexttoarea("{" & chr(13) & chr(10),req);
		addtexttoarea("\"brand\":\"" & NormalizeStrToJson(GBr.Name) & "\"," & chr(13) & chr(10),req);
		if(nonblank(GBr.CRMid)) then begin
			addtexttoarea("\"id\":" & "\"" & NormalizeStrToJson(GBr.CRMid) & "\"" & chr(13) & chr(10),req);
		end else begin			
			if(blank(GBr.CRMid))then begin
				SendWebRequest(host,port,-1,false,"GET","/api/Brand/GetCrmId?hansaId=" & UrlEncode(GBr.Code),"application/json","",false,req,reply,5);
				jsresponse = ParseJSONArea(reply);
				if(nonblank(MyJSGet(jsresponse,"result")))then begin
					GBr.CRMid = MyJSGet(jsresponse,"result");
					recordstore(GBr,true);
				end;
			end;
			if(blank(GBr.CRMid))then begin
				SendBrandToCRM(GBr);
			end;
			if(nonblank(GBr.CRMid))then begin
				recordstore(GBr,true);
			end;
		end;
		addtexttoarea("}" & chr(13) & chr(10),req);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,req);
		writeareatofile(req,"CRMRequest.txt",1);
		SendWebRequest(host,port,-1,false,"PATCH",page,"application/json","",false,req,reply,5);
		if(getarealength(reply)>0)then begin
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				logtext(0,"SendUpdateBrandToCRM " & MyJSGet(jsresponse,"result"));
			end;
		end;
		addtexttoarea(" SendUpdateBrandToCRM " & GBr.Code & " " & currentcompany & " ",reply);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
		writeareatofile(reply,"CRMResponse.txt",1);
	end;
return;
end;

global webpublic updating procedure WebUpdateBrands()
begin
record GlobalBrandsVc GBr;
	SetCompany(1,false);
	logtext(0,"WebUpdateBrands");
	GBr.Code = "";
	while(loopmain(GBr,1,true))begin
		if(blank(GBr.CRMid))then begin
			SendUpdateBrandToCRM(GBr);
			if(nonblank(GBr.CRMid))then begin
				recordstore(GBr,true);
				logtext(0,GBr.Code & " " & GBr.Name & " " & GBr.CRMid);
			end;
		end;
	end;

return;
end;

global updating procedure SendContactToCRM(var record CUVc CUr,boolean updatef) // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger11:38 11.09.2018
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply;
  string 255 ha1,ha2, UserCRMID, LocationCRMID;
  row MarcCampVc MCrw;
  integer i;
  json jsresponse;
	record WebReportChBlock WRChb;
	record UserVc Userr;	
	record GlobalStoresVc GSr;
	blockload(WRChb);	
	
	if(CUr.CUType==1)then begin
	
		if(WRChb.WEBCheck==1)then begin
			logtext(0,"SendContactToCRM");
			host = "192.168.3.11";
			page = "/api/Contact/Create";
			port = 8088;
			logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
			if(fileexists("demoserver"))then begin
				port = 8087;
		logtext(0,"newport 8087");
			end;

		
			Userr.Code = CUr.CurEmplCreator;
			if(Readfirstmain(Userr,1,true))then begin
				UserCRMID = Userr.CRMid;
			end;
			if(blank(UserCRMID))then begin
				if(nonblank(CUr.CurEmplCreator))then begin
					SendWebRequest(host,port,-1,false,"GET","/api/Consultant/GetCrmId?hansaId=" & UrlEncode(CUr.CurEmplCreator),"application/json","",false,req,reply,5);
					jsresponse = ParseJSONArea(reply);
					if(nonblank(MyJSGet(jsresponse,"result")))then begin
						UserCRMID = MyJSGet(jsresponse,"result");
					end;
				end;
			end;
		
		
		
		
			GSr.Code = CUr.CreateLocation;
			if(Readfirstmain(GSr,1,true))then begin
				LocationCRMID = GSr.CRMid;
			end;
			if(blank(LocationCRMID) or LocationCRMID=="null")then begin
				if(nonblank(CUr.CreateLocation))then begin 
					SendWebRequest(host,port,-1,false,"GET","/api/Shop/GetCrmId?hansaId=" & UrlEncode(CUr.CreateLocation),"application/json","",false,req,reply,5);
					jsresponse = ParseJSONArea(reply);
					if(nonblank(MyJSGet(jsresponse,"result")))then begin
						LocationCRMID = MyJSGet(jsresponse,"result");
						GSr.CRMid = LocationCRMID;
						recordstore(GSr,true);
					end;
				end;
			end;
		
		
			addtexttoarea("{" & chr(13) & chr(10),req);
			if(nonblank(CUr.CRMName))then begin
				addtexttoarea("\"firstName\":\"" & NormalizeStrToJson(CUr.CRMName) & "\"," & chr(13) & chr(10),req);
				addtexttoarea("\"lastName\":\"" & NormalizeStrToJson(CUr.CRMLName) & "\"," & chr(13) & chr(10),req);
				addtexttoarea("\"middleName\":\"" & NormalizeStrToJson(CUr.CRMPatr) & "\"," & chr(13) & chr(10),req);
			end else begin
				addtexttoarea("\"firstName\":\"" & NormalizeStrToJson(CUr.Name) & "\"," & chr(13) & chr(10),req);
				addtexttoarea("\"lastName\":\"" & "" & "\"," & chr(13) & chr(10),req);
				addtexttoarea("\"middleName\":\"" & "" & "\"," & chr(13) & chr(10),req);
			end;
			addtexttoarea("\"landlineNumber\":\"" & CUr.Phone & "\"," & chr(13) & chr(10),req);
			addtexttoarea("\"mobilePhone1\":\"" & CUr.Mobile & "\"," & chr(13) & chr(10),req);
			addtexttoarea("\"mobilePhone2\":\"" & CUr.AltPhone & "\"," & chr(13) & chr(10),req);
			if(nonblank(CUr.Fax))then begin
				addtexttoarea("\"mobilePhone3\":\"" & CUr.Fax & "\"," & chr(13) & chr(10),req);
			end;
			addtexttoarea("\"mainEmail\":\"" & NormalizeStrToJson(CUr.eMail) & "\"," & chr(13) & chr(10),req);
			addtexttoarea("\"addEmail\":\"" & "" & "\"," & chr(13) & chr(10),req);
		
		
			if(CUr.Gender==0)then begin
				addtexttoarea("\"gender\":\"" & "Male" & "\"," & chr(13) & chr(10),req);
			end;
			if(CUr.Gender==1)then begin
				addtexttoarea("\"gender\":\"" & "Female" & "\"," & chr(13) & chr(10),req);
			end;
		
			if(CUr.blockedFlag==0)then begin
				addtexttoarea("\"blockedflag\":\"" & "active" & "\"," & chr(13) & chr(10),req);
			end else begin
				addtexttoarea("\"blockedflag\":\"" & "inactive" & "\"," & chr(13) & chr(10),req);
			end;
		
			addtexttoarea("\"birthday\":\"" & datetostring(CUr.BirthDate,"YYYY-MM-DD") & "\"," & chr(13) & chr(10),req);
			if(nonblank(LocationCRMID))then begin
				addtexttoarea("\"shopId\":" & "\"" & NormalizeStrToJson(LocationCRMID) & "\"," & chr(13) & chr(10),req);
			end;
			if(nonblank(UserCRMID))then begin
				addtexttoarea("\"consultantId\":" & "\"" & NormalizeStrToJson(UserCRMID) & "\"," & chr(13) & chr(10),req);
			end;
			addtexttoarea("\"hansaId\":" & "\"" & NormalizeStrToJson(CUr.Code) & "\"" & chr(13) & chr(10),req);
			addtexttoarea("}" & chr(13) & chr(10),req);
			addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,req);
			writeareatofile(req,"CRMRequest.txt",1);
			SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5);
			if(getarealength(reply)>0)then begin
				jsresponse = ParseJSONArea(reply);
				if(nonblank(MyJSGet(jsresponse,"result")))then begin
					CUr.CRMid = MyJSGet(jsresponse,"result");
					if(updatef)then begin
						recordstore(CUr,true);
					end;
					logtext(0,"SendContactToCRM " & CUr.CRMid);
				end;
			end;
			addtexttoarea(" SendContactToCRM " & CUr.Code & " " & currentcompany & " ",reply);
			addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
			writeareatofile(reply,"CRMResponse.txt",1);
		end;
	end;
return;
end;


global updating procedure SendAsyncUpdateContactToCRM(var record CUVc CUr)// Edit ************************** BPI Ukraine - KramarAlexandr - 02, 11 02 2020 y. at 11:23:45 PM
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply;
 string 255 ha1,ha2, UserCRMID, LocationCRMID;
  row MarcCampVc MCrw;
  integer i;
  json jsresponse;
	record WebReportChBlock WRChb;
	record UserVc Userr;	
	record GlobalStoresVc GSr;
	
	blockload(WRChb);		
	
	if(CUr.CUType==1)then begin
		if(WRChb.WEBCheck==1)then begin
	
	
			host = "192.168.3.11";
			page = "/api/Contact/Update";
			port = 8088;
			logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
			if(fileexists("demoserver"))then begin
				port = 8087;
				logtext(0,"newport 8087");
			end;

		
			Userr.Code = CUr.CurEmplCreator;
			if(Readfirstmain(Userr,1,true))then begin
				UserCRMID = Userr.CRMid;
			end;
			if(blank(UserCRMID) or UserCRMID=="null")then begin
				if(nonblank(CUr.CurEmplCreator))then begin
					SendWebRequest(host,port,-1,false,"GET","/api/Consultant/GetCrmId?hansaId=" & UrlEncode(CUr.CurEmplCreator),"application/json","",false,req,reply,5);
					jsresponse = ParseJSONArea(reply);
					if(nonblank(MyJSGet(jsresponse,"result")))then begin
						UserCRMID = MyJSGet(jsresponse,"result");
					end;
				end;
			end;
		
			if(blank(CUr.CRMid))then begin
				SendWebRequest(host,port,-1,false,"GET","/api/Contact/GetCrmId?hansaId=" & UrlEncode(CUr.Code),"application/json","",false,req,reply,5);
				jsresponse = ParseJSONArea(reply);
				if(nonblank(MyJSGet(jsresponse,"result")))then begin
					CUr.CRMid = MyJSGet(jsresponse,"result");
					if(blank(CUr.CRMid))then begin
						SendContactToCRM(CUr,false);
						goto lSendAsyncUpdateContactToCRM;
					end;
				end else begin
					SendContactToCRM(CUr,false);
					goto lSendAsyncUpdateContactToCRM;
				end;
			end;
		
		
			GSr.Code = CUr.CreateLocation;
			if(Readfirstmain(GSr,1,true))then begin
				LocationCRMID = GSr.CRMid;
			end;
			if(blank(LocationCRMID) or LocationCRMID=="null")then begin
				if(nonblank(CUr.CreateLocation))then begin 
					SendWebRequest(host,port,-1,false,"GET","/api/Shop/GetCrmId?hansaId=" & UrlEncode(CUr.CreateLocation),"application/json","",false,req,reply,5);
					jsresponse = ParseJSONArea(reply);
					if(nonblank(MyJSGet(jsresponse,"result")))then begin
						LocationCRMID = MyJSGet(jsresponse,"result");
						GSr.CRMid = LocationCRMID;
						recordstore(GSr,true);
					end;
				end;
			end;

			addtexttoarea("{" & chr(13) & chr(10),req);
				
				addtexttoarea("\"firstName\":\"" & NormalizeStrToJson(CUr.CRMName) & "\"," & chr(13) & chr(10),req);
				addtexttoarea("\"lastName\":\"" & NormalizeStrToJson(CUr.CRMLName) & "\"," & chr(13) & chr(10),req);
				addtexttoarea("\"middleName\":\"" & NormalizeStrToJson(CUr.CRMPatr) & "\"," & chr(13) & chr(10),req);

			//if(nonblank(CUr.Phone))then begin
				addtexttoarea("\"landlineNumber\":\"" & CUr.Phone & "\"," & chr(13) & chr(10),req);
			//end;
			//if(nonblank(CUr.eMail))then begin
				addtexttoarea("\"mainEmail\":\"" & NormalizeStrToJson(CUr.eMail) & "\"," & chr(13) & chr(10),req);
			//end;
			//if(nonblank(CUr.Mobile))then begin
				addtexttoarea("\"mobilePhone1\":\"" & CUr.Mobile & "\"," & chr(13) & chr(10),req);
			//end;
			//if(nonblank(CUr.AltPhone))then begin
				addtexttoarea("\"mobilePhone2\":\"" & CUr.AltPhone & "\"," & chr(13) & chr(10),req);
			//end;
			if(nonblank(CUr.Fax))then begin
				addtexttoarea("\"mobilePhone3\":\"" & CUr.Fax & "\"," & chr(13) & chr(10),req);
			end;
			addtexttoarea("\"birthday\":\"" & datetostring(CUr.BirthDate,"YYYY-MM-DD") & "\"," & chr(13) & chr(10),req);
			//if(nonblank(LocationCRMID))then begin
				addtexttoarea("\"shopId\":" & "\"" & NormalizeStrToJson(LocationCRMID) & "\"," & chr(13) & chr(10),req);
			//end;
			if(nonblank(UserCRMID))then begin
				addtexttoarea("\"consultantId\":" & "\"" & NormalizeStrToJson(UserCRMID) & "\"," & chr(13) & chr(10),req);
			end;
		
			if(CUr.Gender==0)then begin
				addtexttoarea("\"gender\":\"" & "Male" & "\"," & chr(13) & chr(10),req);
			end;
			if(CUr.Gender==1)then begin
				addtexttoarea("\"gender\":\"" & "Female" & "\"," & chr(13) & chr(10),req);
			end;
		
			if(CUr.blockedFlag==0)then begin
				addtexttoarea("\"blockedflag\":\"" & "active" & "\"," & chr(13) & chr(10),req);
			end else begin
				addtexttoarea("\"blockedflag\":\"" & "inactive" & "\"," & chr(13) & chr(10),req);
			end;
			
			if(CUr.blockedFlag==0)then begin
				addtexttoarea("\"BlockedFlag\":\"" & "0" & "\"," & chr(13) & chr(10),req);
			end else begin
				addtexttoarea("\"BlockedFlag\":\"" & "1" & "\"," & chr(13) & chr(10),req);
			end;

			addtexttoarea("\"id\":" & "\"" & NormalizeStrToJson(CUr.CRMid) & "\"" & chr(13) & chr(10),req);

			addtexttoarea("}" & chr(13) & chr(10),req);
			addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,req);
			writeareatofile(req,"CRMRequest.txt",1);
			//SendWebRequest(host,port,-1,false,"PATCH",page,"application/json","",false,req,reply,5);
			SendAsyncWebRequest(host,port,-1,false,"PATCH",page,"application/json","",req,"",3);
		end;
	end;
lSendAsyncUpdateContactToCRM:;
	
return;
end;

global updating procedure SendUpdateContactToCRM(var record CUVc CUr) // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger11:38 11.09.2018
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply;
 string 255 ha1,ha2, UserCRMID, LocationCRMID;
  row MarcCampVc MCrw;
  integer i;
  json jsresponse;
	record WebReportChBlock WRChb;
	record UserVc Userr;	
	record GlobalStoresVc GSr;
	
	blockload(WRChb);		
	
	if(CUr.CUType==1)then begin
		if(WRChb.WEBCheck==1)then begin
	
	
			host = "192.168.3.11";
			page = "/api/Contact/Update";
			port = 8088;
			logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
			if(fileexists("demoserver"))then begin
				port = 8087;
				logtext(0,"newport 8087");
			end;

		
			Userr.Code = CUr.CurEmplCreator;
			if(Readfirstmain(Userr,1,true))then begin
				UserCRMID = Userr.CRMid;
			end;
			if(blank(UserCRMID) or UserCRMID=="null")then begin
				if(nonblank(CUr.CurEmplCreator))then begin
					SendWebRequest(host,port,-1,false,"GET","/api/Consultant/GetCrmId?hansaId=" & UrlEncode(CUr.CurEmplCreator),"application/json","",false,req,reply,5);
					jsresponse = ParseJSONArea(reply);
					if(nonblank(MyJSGet(jsresponse,"result")))then begin
						UserCRMID = MyJSGet(jsresponse,"result");
					end;
				end;
			end;
		
			if(blank(CUr.CRMid))then begin
				SendWebRequest(host,port,-1,false,"GET","/api/Contact/GetCrmId?hansaId=" & UrlEncode(CUr.Code),"application/json","",false,req,reply,5);
				jsresponse = ParseJSONArea(reply);
				if(nonblank(MyJSGet(jsresponse,"result")))then begin
					CUr.CRMid = MyJSGet(jsresponse,"result");
					if(blank(CUr.CRMid))then begin
						SendContactToCRM(CUr,false);
						goto lSendUpdateContactToCRM;
					end;
				end else begin
					SendContactToCRM(CUr,false);
					goto lSendUpdateContactToCRM;
				end;
			end;
		
		
			GSr.Code = CUr.CreateLocation;
			if(Readfirstmain(GSr,1,true))then begin
				LocationCRMID = GSr.CRMid;
			end;
			if(blank(LocationCRMID) or LocationCRMID=="null")then begin
				if(nonblank(CUr.CreateLocation))then begin 
					SendWebRequest(host,port,-1,false,"GET","/api/Shop/GetCrmId?hansaId=" & UrlEncode(CUr.CreateLocation),"application/json","",false,req,reply,5);
					jsresponse = ParseJSONArea(reply);
					if(nonblank(MyJSGet(jsresponse,"result")))then begin
						LocationCRMID = MyJSGet(jsresponse,"result");
						GSr.CRMid = LocationCRMID;
						recordstore(GSr,true);
					end;
				end;
			end;

			addtexttoarea("{" & chr(13) & chr(10),req);
			if(/*nonblank(CUr.CRMName)*/true)then begin
				addtexttoarea("\"firstName\":\"" & NormalizeStrToJson(CUr.CRMName) & "\"," & chr(13) & chr(10),req);
				addtexttoarea("\"lastName\":\"" & NormalizeStrToJson(CUr.CRMLName) & "\"," & chr(13) & chr(10),req);
				addtexttoarea("\"middleName\":\"" & NormalizeStrToJson(CUr.CRMPatr) & "\"," & chr(13) & chr(10),req);

			end else begin
				addtexttoarea("\"firstName\":\"" & NormalizeStrToJson(CUr.Name) & "\"," & chr(13) & chr(10),req);
				addtexttoarea("\"lastName\":\"" & "" & "\"," & chr(13) & chr(10),req);
			end;
			//if(nonblank(CUr.Phone))then begin
				addtexttoarea("\"landlineNumber\":\"" & CUr.Phone & "\"," & chr(13) & chr(10),req);
			//end;
			//if(nonblank(CUr.eMail))then begin
				addtexttoarea("\"mainEmail\":\"" & NormalizeStrToJson(CUr.eMail) & "\"," & chr(13) & chr(10),req);
			//end;
			//if(nonblank(CUr.Mobile))then begin
				addtexttoarea("\"mobilePhone1\":\"" & CUr.Mobile & "\"," & chr(13) & chr(10),req);
			//end;
			//if(nonblank(CUr.AltPhone))then begin
				addtexttoarea("\"mobilePhone2\":\"" & CUr.AltPhone & "\"," & chr(13) & chr(10),req);
			//end;
			if(nonblank(CUr.Fax))then begin
				addtexttoarea("\"mobilePhone3\":\"" & CUr.Fax & "\"," & chr(13) & chr(10),req);
			end;
			addtexttoarea("\"birthday\":\"" & datetostring(CUr.BirthDate,"YYYY-MM-DD") & "\"," & chr(13) & chr(10),req);
			//if(nonblank(LocationCRMID))then begin
				addtexttoarea("\"shopId\":" & "\"" & NormalizeStrToJson(LocationCRMID) & "\"," & chr(13) & chr(10),req);
			//end;
			if(nonblank(UserCRMID))then begin
				addtexttoarea("\"consultantId\":" & "\"" & NormalizeStrToJson(UserCRMID) & "\"," & chr(13) & chr(10),req);
			end;
		
			if(CUr.Gender==0)then begin
				addtexttoarea("\"gender\":\"" & "Male" & "\"," & chr(13) & chr(10),req);
			end;
			if(CUr.Gender==1)then begin
				addtexttoarea("\"gender\":\"" & "Female" & "\"," & chr(13) & chr(10),req);
			end;
		
			if(CUr.blockedFlag==0)then begin
				addtexttoarea("\"blockedflag\":\"" & "active" & "\"," & chr(13) & chr(10),req);
			end else begin
				addtexttoarea("\"blockedflag\":\"" & "inactive" & "\"," & chr(13) & chr(10),req);
			end;
		
		
			addtexttoarea("\"id\":" & "\"" & NormalizeStrToJson(CUr.CRMid) & "\"" & chr(13) & chr(10),req);
			addtexttoarea("}" & chr(13) & chr(10),req);
			addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,req);
			writeareatofile(req,"CRMRequest.txt",1);
			SendWebRequest(host,port,-1,false,"PATCH",page,"application/json","",false,req,reply,5);
			if(getarealength(reply)>0)then begin
				jsresponse = ParseJSONArea(reply);
				if(nonblank(MyJSGet(jsresponse,"result")))then begin
					logtext(0,"SendUpdateContactToCRM " & MyJSGet(jsresponse,"result"));
				end;
			end;
			addtexttoarea(" SendUpdateContactToCRM " & CUr.Code & " " & currentcompany & " ",reply);
			addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
			writeareatofile(reply,"CRMResponse.txt",1);
		end;
	end;
lSendUpdateContactToCRM:;
	
return;
end;




global updating procedure SendDiscountToCRM(var record RebVc Rebr) // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger11:38 11.09.2018
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply;
  string 255 ha1,ha2;
  row MarcCampVc MCrw;
  integer i;
  json jsresponse;
	record WebReportChBlock WRChb;
	blockload(WRChb);		
	if(WRChb.WEBCheck==1)then begin
	
  
		host = "192.168.3.11";
		page = "/api/Discount/Create";
		port = 8088;
		logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
		if(fileexists("demoserver"))then begin
			port = 8087;
 	logtext(0,"newport 8087");
		end;

		
		addtexttoarea("{" & chr(13) & chr(10),req);
		addtexttoarea("\"discount\":\"" & Rebr.vra0 & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"id\":" & "\"\"," & chr(13) & chr(10),req);
		addtexttoarea("\"hansaId\":" & "\"" & NormalizeStrToJson(Rebr.Code) & "\"" & chr(13) & chr(10),req);
		addtexttoarea("}" & chr(13) & chr(10),req);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,req);
		writeareatofile(req,"CRMRequest.txt",1);
		SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5);
		if(getarealength(reply)>0)then begin
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				Rebr.CRMid = MyJSGet(jsresponse,"result");
				logtext(0,"SendDiscountToCRM " & Rebr.CRMid);
			end;
		end;
		addtexttoarea(" SendDiscountToCRM " & Rebr.Code & " " & currentcompany & " ",reply);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
		writeareatofile(reply,"CRMResponse.txt",1);
	end;
return;
end;



global updating procedure SendUpdateDiscountToCRM(var record RebVc Rebr) // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger11:38 11.09.2018
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply;
  string 255 ha1,ha2;
  row MarcCampVc MCrw;
  integer i;
  json jsresponse;
	record WebReportChBlock WRChb;
	blockload(WRChb);		
	if(WRChb.WEBCheck==1)then begin
	
  
		host = "192.168.3.11";
		page = "/api/Discount/Update";
		port = 8088;
		logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
		if(fileexists("demoserver"))then begin
			port = 8087;
 	logtext(0,"newport 8087");
		end;

		
		if(blank(Rebr.CRMid) or Rebr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/Discount/GetCrmId?hansaId=" & UrlEncode(Rebr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				Rebr.CRMid = MyJSGet(jsresponse,"result");
				logtext(0,"SendUpdateDiscountToCRM Rebr.CRMid " & Rebr.CRMid);
			end;
		end;
		
		addtexttoarea("{" & chr(13) & chr(10),req);
		addtexttoarea("\"discount\":\"" & Rebr.vra0 & "\"," & chr(13) & chr(10),req);
		if(nonblank(Rebr.CRMid)) then begin
		addtexttoarea("\"id\":" & "\"" & NormalizeStrToJson(Rebr.CRMid) & "\"," & chr(13) & chr(10),req);
		end;
		addtexttoarea("\"hansaId\":" & "\"" & NormalizeStrToJson(Rebr.Code) & "\"" & chr(13) & chr(10),req);
		addtexttoarea("}" & chr(13) & chr(10),req);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,req);
		writeareatofile(req,"CRMRequest.txt",1);
		SendWebRequest(host,port,-1,false,"PATCH",page,"application/json","",false,req,reply,5);
		if(getarealength(reply)>0)then begin
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				logtext(0,"SendUpdateDiscountToCRM " & MyJSGet(jsresponse,"result"));
			end;
		end;
		addtexttoarea(" SendUpdateDiscountToCRM " & Rebr.Code & " " & currentcompany & " ",reply);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
		writeareatofile(reply,"CRMResponse.txt",1);
	end;
return;
end;





global updating procedure SendLoyaltyCardToCRM(var record LoyaltyCardVc LCr) // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger11:38 11.09.2018
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply;
  string 255 ha1,ha2;
  row MarcCampVc MCrw;
  integer i;
  json jsresponse;
	record WebReportChBlock WRChb;
	record CUVc CUr;
	record LCMemberLevelVc LCMLr;
	record RebVc Rebr;
	
	
	blockload(WRChb);	
	
		
	if(WRChb.WEBCheck==1)then begin
	
  
		host = "192.168.3.11";
		page = "/api/LoyaltyCard/Create";
		port = 8088;
		logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
		if(fileexists("demoserver"))then begin
			port = 8087;
 	logtext(0,"newport 8087");
		end;

		
		
		CUr.Code = LCr.CustCode;
		readfirstmain(CUr,1,true);
		if(blank(CUr.CRMid) or CUr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/Contact/GetCrmId?hansaId=" & UrlEncode(CUr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				CUr.CRMid = MyJSGet(jsresponse,"result");
				logtext(0,"SendUpdateLoyaltyCardToCRM CUr.CRMid " & CUr.CRMid);
				recordstore(CUr,true);
			end;
		end;
		
		LCMLr.Code = LCr.LCMLevel;
		readfirstmain(LCMLr,1,true);
		if(blank(LCMLr.CRMid) or LCMLr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/LoyaltyCard/GetCrmId?hansaId=" & UrlEncode(LCMLr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				LCMLr.CRMid = MyJSGet(jsresponse,"result");
				logtext(0,"SendUpdateLoyaltyCardToCRM LCMLr.CRMid " & LCMLr.CRMid);
				recordstore(LCMLr,true);
			end;
		end;
		
		Rebr.Code = LCr.RebCodeCRM;
		if(blank(Rebr.Code))then begin
			Rebr.Code = CUr.RebCode;
			LCr.RebCodeCRM = CUr.RebCode;;
		end;
		readfirstmain(Rebr,1,true);
		if(blank(Rebr.CRMid) or Rebr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/Discount/GetCrmId?hansaId=" & UrlEncode(Rebr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				Rebr.CRMid = MyJSGet(jsresponse,"result");
				recordstore(Rebr,true);
				logtext(0,"SendUpdateLoyaltyCardToCRM Rebr.CRMid " & Rebr.CRMid);
			end;
		end;
		
		addtexttoarea("{" & chr(13) & chr(10),req);
		if(nonblank(CUr.CRMid)) then begin
		addtexttoarea("\"contactId\":\"" & NormalizeStrToJson(CUr.CRMid) & "\"," & chr(13) & chr(10),req);
		end;
		if(LCr.Closed==0)then begin
			addtexttoarea("\"cardStatus\":\"" & "active" & "\"," & chr(13) & chr(10),req);
		end else begin
			addtexttoarea("\"cardStatus\":\"" & "inactive" & "\"," & chr(13) & chr(10),req);
		end;
		if(nonblank(LCMLr.CRMid)) then begin
		addtexttoarea("\"loyaltyProgramId\":\"" & NormalizeStrToJson(LCMLr.CRMid) & "\"," & chr(13) & chr(10),req);
		end;
		addtexttoarea("\"cardNumber\":\"" & NormalizeStrToJson(LCr.SerNr) & "\"," & chr(13) & chr(10),req);
		if(nonblank(Rebr.CRMid)) then begin
		addtexttoarea("\"discountId\":\"" & NormalizeStrToJson(Rebr.CRMid) & "\"," & chr(13) & chr(10),req);
		end;
		addtexttoarea("\"currentBalance\":\"" & LCr.PointsBalance & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"startDate\":\"" & datetostring(LCr.StartDate,"YYYY-MM-DD") & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"endDate\":\"" & datetostring(LCr.ExpiryDate,"YYYY-MM-DD") & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"barCode\":\"" & NormalizeStrToJson(LCr.SerNr) & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"cashbackLevel\":\"" & LCr.CashbackLevelPoints & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"totallyAccumulatedPoints\":\"" & LCr.PointsBalanceTotal & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"hansaId\":" & "\"" & NormalizeStrToJson(LCr.SerNr) & "\"" & chr(13) & chr(10),req);
		addtexttoarea("}" & chr(13) & chr(10),req);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,req);
		writeareatofile(req,"CRMRequest.txt",1);
		SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5);
		if(getarealength(reply)>0)then begin
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				LCr.CRMid = MyJSGet(jsresponse,"result");
				logtext(0,"SendLoyaltyCardToCRM " & MyJSGet(jsresponse,"result"));
			end;
		end;
		addtexttoarea(" SendLoyaltyCardToCRM " & LCr.SerNr & " " & currentcompany & " ",reply);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
		writeareatofile(reply,"CRMResponse.txt",1);
	end;
return;
end;


global webpublic updating procedure WebUpateLoyProgCRMId()
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply;
  string 255 ha1,ha2;
  row MarcCampVc MCrw;
  integer i;
  json jsresponse;
	record WebReportChBlock WRChb;
	record CUVc CUr;
	record LCMemberLevelVc LCMLr;
	record RebVc Rebr;
	
	host = "192.168.3.11";
	page = "/api/LoyaltyCard/Update";
	port = 8088;
	logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
	if(fileexists("demoserver"))then begin
		port = 8087;
 	logtext(0,"newport 8087");
	end;
	
	SetCompany(1,false);
	
	while(loopmain(LCMLr,1,true))begin
		setcompany(1,false);
		LCMLr.CRMid = "";
		SendWebRequest(host,port,-1,false,"GET","/api/LoyaltyProgram/GetCrmId?hansaId=" & UrlEncode(LCMLr.Code),"application/json","",false,req,reply,5);
		jsresponse = ParseJSONArea(reply);
		if(nonblank(MyJSGet(jsresponse,"result")))then begin
			LCMLr.CRMid = MyJSGet(jsresponse,"result");
			logtext(0,"WebUpateLoyProgCRMId LCMLr.CRMid " & LCMLr.Code & " -> " & LCMLr.CRMid);
			recordstore(LCMLr,true);
		end;
	end;
	

return;
end;

global updating procedure SendUpdateLoyaltyCardToCRM(var record LoyaltyCardVc LCr) // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger11:38 11.09.2018
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply;
  string 255 ha1,ha2;
  row MarcCampVc MCrw;
  integer i;
  json jsresponse;
	record WebReportChBlock WRChb;
	record CUVc CUr;
	record LCMemberLevelVc LCMLr;
	record RebVc Rebr;

	blockload(WRChb);		
	
	
	if(WRChb.WEBCheck==1)then begin
	
  
		host = "192.168.3.11";
		page = "/api/LoyaltyCard/Update";
		port = 8088;
		logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
		if(fileexists("demoserver"))then begin
		 port = 8087;
			logtext(0,"newport 8087");
		end;

		
		if(blank(LCr.CRMid) or LCr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/LoyaltyCard/GetCrmId?hansaId=" & UrlEncode(LCr.SerNr),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				LCr.CRMid = MyJSGet(jsresponse,"result");
				if(Blank(LCr.CRMid)) then begin
				  SendLoyaltyCardToCRM(LCr);
					goto  lSendUpdateLoyaltyCardToCRM;
				end;
			end else begin
				SendLoyaltyCardToCRM(LCr);
				goto  lSendUpdateLoyaltyCardToCRM;
			end;
		end;
		
		CUr.Code = LCr.CustCode;
		readfirstmain(CUr,1,true);
		if(blank(CUr.CRMid) or CUr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/Contact/GetCrmId?hansaId=" & UrlEncode(CUr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				CUr.CRMid = MyJSGet(jsresponse,"result");
				logtext(0,"SendUpdateLoyaltyCardToCRM CUr.CRMid " & CUr.CRMid);
				recordstore(CUr,true);
			end;
		end;
		
		LCMLr.Code = LCr.LCMLevel;
		readfirstmain(LCMLr,1,true);
		if(blank(LCMLr.CRMid) or LCMLr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/LoyaltyProgram/GetCrmId?hansaId=" & UrlEncode(LCMLr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				LCMLr.CRMid = MyJSGet(jsresponse,"result");
				logtext(0,"SendUpdateLoyaltyCardToCRM LCMLr.CRMid " & LCMLr.CRMid);
				recordstore(LCMLr,true);
			end;
		end;
		
		Rebr.Code = LCr.RebCodeCRM;
		readfirstmain(Rebr,1,true);
		if(blank(Rebr.CRMid) or Rebr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/Discount/GetCrmId?hansaId=" & UrlEncode(Rebr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				Rebr.CRMid = MyJSGet(jsresponse,"result");
				recordstore(Rebr,true);
				logtext(0,"SendUpdateLoyaltyCardToCRM Rebr.CRMid " & Rebr.CRMid);
			end;
		end;
		
		
		addtexttoarea("{" & chr(13) & chr(10),req);
		//addtexttoarea("\"consultantWhoIssuedTheCardId\":\"" & "" & "\"," & chr(13) & chr(10),req);
		if(nonblank(CUr.CRMid)) then begin
			addtexttoarea("\"contactId\":\"" & NormalizeStrToJson(CUr.CRMid) & "\"," & chr(13) & chr(10),req);
		end;
		if(LCr.Closed==0)then begin
			addtexttoarea("\"cardStatus\":\"" & "active" & "\"," & chr(13) & chr(10),req);
		end else begin
			addtexttoarea("\"cardStatus\":\"" & "inactive" & "\"," & chr(13) & chr(10),req);
		end;
		if(nonblank(LCMLr.CRMid)) then begin
		addtexttoarea("\"loyaltyProgramId\":\"" & NormalizeStrToJson(LCMLr.CRMid) & "\"," & chr(13) & chr(10),req);
		end;
		//addtexttoarea("\"cardNumber\":\"" & LCr.SerNr & "\"," & chr(13) & chr(10),req);
		if(nonblank(Rebr.CRMid)) then begin
		addtexttoarea("\"discountId\":\"" & NormalizeStrToJson(Rebr.CRMid) & "\"," & chr(13) & chr(10),req);
		end;
		addtexttoarea("\"currentBalance\":\"" & LCr.PointsBalance & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"startDate\":\"" & datetostring(LCr.StartDate,"YYYY-MM-DD") & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"endDate\":\"" & datetostring(LCr.ExpiryDate,"YYYY-MM-DD") & "\"," & chr(13) & chr(10),req);
		//addtexttoarea("\"barCode\":\"" & "" & "\"," & chr(13) & chr(10),req);
		//addtexttoarea("\"cardColorId\":\"" & "" & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"cashbackLevel\":\"" & LCr.CashbackLevelPoints & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"totallyAccumulatedPoints\":\"" & LCr.PointsBalanceTotal & "\"," & chr(13) & chr(10),req);
		//addtexttoarea("\"applicationId\":\"" & "" & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"id\":" & "\"" & NormalizeStrToJson(LCr.CRMid) & "\"" & chr(13) & chr(10),req);
		addtexttoarea("}" & chr(13) & chr(10),req);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,req);
		writeareatofile(req,"CRMRequest.txt",1);
		SendWebRequest(host,port,-1,false,"PATCH",page,"application/json","",false,req,reply,5);
		if(getarealength(reply)>0)then begin
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				logtext(0,"SendUpdateLoyaltyCardToCRM " & MyJSGet(jsresponse,"result"));
			end;
		end;
		addtexttoarea(" SendUpdateLoyaltyCardToCRM " & LCr.SerNr & " " & currentcompany & " ",reply);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
		writeareatofile(reply,"CRMResponse.txt",1);
	end;
	lSendUpdateLoyaltyCardToCRM:;
return;
end;


global updating procedure SendLoyaltyProgramToCRM(var record LCMemberLevelVc LCMLr) // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger11:38 11.09.2018
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply;
  string 255 ha1,ha2;
  row MarcCampVc MCrw;
  integer i;
  json jsresponse;
	record WebReportChBlock WRChb;
	record RebVc Rebr;
	string 100 rebid;
	string 100 id0,id5,id10,id15,id18,id20,id25,id30;
	
	blockload(WRChb);		
	if(WRChb.WEBCheck==1)then begin
		
  
		host = "192.168.3.11";
		page = "/api/LoyaltyProgram/Create";
		port = 8088;
		logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
		if(fileexists("demoserver"))then begin
			port = 8087;
 	logtext(0,"newport 8087");
		end;

		
		logtext(0,"LCMLr.CRMid " & LCMLr.CRMid);
		if(blank(LCMLr.CRMid) or LCMLr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/LoyaltyProgram/GetCrmId?hansaId=" & UrlEncode(LCMLr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				LCMLr.CRMid = MyJSGet(jsresponse,"result");
				logtext(0,"SendUpdateLoyaltyCardToCRM LCMLr.CRMid " & LCMLr.CRMid);
			end;
		end; 
		
		Rebr.Code = "0%";
		readfirstmain(Rebr,1,true);
		if(blank(Rebr.CRMid) or Rebr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/Discount/GetCrmId?hansaId=" & UrlEncode(Rebr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				id0 = MyJSGet(jsresponse,"result");
				recordstore(Rebr,true);
				logtext(0,"SendLoyaltyProgramToCRM Rebr.CRMid " & rebid);
			end;
		end else begin
			id0 = Rebr.CRMid;
		end;
		
		Rebr.Code = "5%";
		readfirstmain(Rebr,1,true);
		if(blank(Rebr.CRMid) or Rebr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/Discount/GetCrmId?hansaId=" & UrlEncode(Rebr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				id5 = MyJSGet(jsresponse,"result");
				recordstore(Rebr,true);
				logtext(0,"SendLoyaltyProgramToCRM Rebr.CRMid " & rebid);
			end;
		end else begin
			id5 = Rebr.CRMid;
		end;
		
		Rebr.Code = "10%";
		readfirstmain(Rebr,1,true);
		if(blank(Rebr.CRMid) or Rebr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/Discount/GetCrmId?hansaId=" & UrlEncode(Rebr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				id10 = MyJSGet(jsresponse,"result");
				recordstore(Rebr,true);
				logtext(0,"SendLoyaltyProgramToCRM Rebr.CRMid " & rebid);
			end;
		end else begin
			id10 = Rebr.CRMid;
		end;
		
		Rebr.Code = "15%";
		readfirstmain(Rebr,1,true);
		if(blank(Rebr.CRMid) or Rebr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/Discount/GetCrmId?hansaId=" & UrlEncode(Rebr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				id15 = MyJSGet(jsresponse,"result");
				recordstore(Rebr,true);
				logtext(0,"SendLoyaltyProgramToCRM Rebr.CRMid " & rebid);
			end;
		end else begin
			id15 = Rebr.CRMid;
		end;
		
		Rebr.Code = "18%";
		readfirstmain(Rebr,1,true);
		if(blank(Rebr.CRMid) or Rebr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/Discount/GetCrmId?hansaId=" & UrlEncode(Rebr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				id18 = MyJSGet(jsresponse,"result");
				recordstore(Rebr,true);
				logtext(0,"SendLoyaltyProgramToCRM Rebr.CRMid " & rebid);
			end;
		end else begin
			id18 = Rebr.CRMid;
		end;
		
		Rebr.Code = "20%";
		readfirstmain(Rebr,1,true);
		if(blank(Rebr.CRMid) or Rebr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/Discount/GetCrmId?hansaId=" & UrlEncode(Rebr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				id20 = MyJSGet(jsresponse,"result");
				recordstore(Rebr,true);
				logtext(0,"SendLoyaltyProgramToCRM Rebr.CRMid " & rebid);
			end;
		end else begin
			id20 = Rebr.CRMid;
		end;
		
		Rebr.Code = "25%";
		readfirstmain(Rebr,1,true);
		if(blank(Rebr.CRMid) or Rebr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/Discount/GetCrmId?hansaId=" & UrlEncode(Rebr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				id25 = MyJSGet(jsresponse,"result");
				recordstore(Rebr,true);
				logtext(0,"SendLoyaltyProgramToCRM Rebr.CRMid " & rebid);
			end;
		end else begin
			id25 = Rebr.CRMid;
		end;
		
		Rebr.Code = "30%";
		readfirstmain(Rebr,1,true);
		if(blank(Rebr.CRMid) or Rebr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/Discount/GetCrmId?hansaId=" & UrlEncode(Rebr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				id30 = MyJSGet(jsresponse,"result");
				recordstore(Rebr,true);
				logtext(0,"SendLoyaltyProgramToCRM Rebr.CRMid " & rebid);
			end;
		end else begin
			id30 = Rebr.CRMid;
		end;
		
		addtexttoarea("{" & chr(13) & chr(10),req);
		addtexttoarea("\"programName\":\"" & NormalizeStrToJson(LCMLr.Code) & "\"," & chr(13) & chr(10),req);
		if(LCMLr.Code=="1")then begin
			addtexttoarea("\"discountIds\":" & "[",req);
			addtexttoarea("\"" & id0 & "\",",req);
			addtexttoarea("\"" & id5 & "\",",req);
			addtexttoarea("\"" & id10 & "\",",req);
			addtexttoarea("\"" & id15 & "\",",req);
			addtexttoarea("\"" & id18 & "\",",req);
			addtexttoarea("\"" & id20 & "\"",req);
			addtexttoarea("]" & "," & chr(13) & chr(10),req);
		end;
		if(LCMLr.Code=="EMPL")then begin
			addtexttoarea("\"discountIds\":" & "[",req);
			addtexttoarea("\"" & id0 & "\",",req);
			addtexttoarea("\"" & id15 & "\",",req);
			addtexttoarea("\"" & id20 & "\",",req);
			addtexttoarea("\"" & id25 & "\",",req);
			addtexttoarea("\"" & id30 & "\",",req);
			addtexttoarea("]" & "," & chr(13) & chr(10),req);
		end;
		addtexttoarea("\"hansaId\":" & "\"" & NormalizeStrToJson(LCMLr.Code) & "\"" & chr(13) & chr(10),req);
		addtexttoarea("}" & chr(13) & chr(10),req);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,req);
		writeareatofile(req,"CRMRequest.txt",1);
		SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5);
		if(getarealength(reply)>0)then begin
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				LCMLr.CRMid = MyJSGet(jsresponse,"result");
				logtext(0,"SendLoyaltyProgramToCRM " & LCMLr.CRMid);
			end;
		end;
		addtexttoarea(" SendLoyaltyProgramToCRM " & LCMLr.Code & " " & currentcompany & " ",reply);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
		writeareatofile(reply,"CRMResponse.txt",1);
	end;
return;
end;

global updating procedure SendUpdateLoyaltyProgramToCRM(var record LCMemberLevelVc LCMLr) // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger11:38 11.09.2018
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply;
  string 255 ha1,ha2;
  row MarcCampVc MCrw;
  integer i;
  json jsresponse;
	record WebReportChBlock WRChb;
	string 100 rebid;
	string 100 id0,id5,id10,id15,id18,id20,id25,id30;
	Record RebVc Rebr;
	
	blockload(WRChb);		
	if(WRChb.WEBCheck==1)then begin
	
  
		host = "192.168.3.11";
		page = "/api/LoyaltyProgram/Update";
		port = 8088;
		logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
		if(fileexists("demoserver"))then begin
			port = 8087;
 	logtext(0,"newport 8087");
		end;

		
		logtext(0,"LCMLr.CRMid " & LCMLr.CRMid);
		if(blank(LCMLr.CRMid) or LCMLr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/LoyaltyProgram/GetCrmId?hansaId=" & UrlEncode(LCMLr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				LCMLr.CRMid = MyJSGet(jsresponse,"result");
				logtext(0,"SendUpdateLoyaltyCardToCRM LCMLr.CRMid " & LCMLr.CRMid);
				recordstore(LCMLr,true);
			end;
		end; 
		
		Rebr.Code = "0%";
		readfirstmain(Rebr,1,true);
		if(blank(Rebr.CRMid) or Rebr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/Discount/GetCrmId?hansaId=" & UrlEncode(Rebr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				id0 = MyJSGet(jsresponse,"result");
				recordstore(Rebr,true);
				logtext(0,"SendLoyaltyProgramToCRM Rebr.CRMid " & rebid);
			end;
		end else begin
			id0 = Rebr.CRMid;
		end;
		
		Rebr.Code = "5%";
		readfirstmain(Rebr,1,true);
		if(blank(Rebr.CRMid) or Rebr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/Discount/GetCrmId?hansaId=" & UrlEncode(Rebr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				id5 = MyJSGet(jsresponse,"result");
				recordstore(Rebr,true);
				logtext(0,"SendLoyaltyProgramToCRM Rebr.CRMid " & rebid);
			end;
		end else begin
			id5 = Rebr.CRMid;
		end;
		
		Rebr.Code = "10%";
		readfirstmain(Rebr,1,true);
		if(blank(Rebr.CRMid) or Rebr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/Discount/GetCrmId?hansaId=" & UrlEncode(Rebr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				id10 = MyJSGet(jsresponse,"result");
				recordstore(Rebr,true);
				logtext(0,"SendLoyaltyProgramToCRM Rebr.CRMid " & rebid);
			end;
		end else begin
			id10 = Rebr.CRMid;
		end;
		
		Rebr.Code = "15%";
		readfirstmain(Rebr,1,true);
		if(blank(Rebr.CRMid) or Rebr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/Discount/GetCrmId?hansaId=" & UrlEncode(Rebr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				id15 = MyJSGet(jsresponse,"result");
				recordstore(Rebr,true);
				logtext(0,"SendLoyaltyProgramToCRM Rebr.CRMid " & rebid);
			end;
		end else begin
			id15 = Rebr.CRMid;
		end;
		
		Rebr.Code = "18%";
		readfirstmain(Rebr,1,true);
		if(blank(Rebr.CRMid) or Rebr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/Discount/GetCrmId?hansaId=" & UrlEncode(Rebr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				id18 = MyJSGet(jsresponse,"result");
				recordstore(Rebr,true);
				logtext(0,"SendLoyaltyProgramToCRM Rebr.CRMid " & rebid);
			end;
		end else begin
			id18 = Rebr.CRMid;
		end;
		
		Rebr.Code = "20%";
		readfirstmain(Rebr,1,true);
		if(blank(Rebr.CRMid) or Rebr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/Discount/GetCrmId?hansaId=" & UrlEncode(Rebr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				id20 = MyJSGet(jsresponse,"result");
				recordstore(Rebr,true);
				logtext(0,"SendLoyaltyProgramToCRM Rebr.CRMid " & rebid);
			end;
		end else begin
			id20 = Rebr.CRMid;
		end;
		
		Rebr.Code = "25%";
		readfirstmain(Rebr,1,true);
		if(blank(Rebr.CRMid) or Rebr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/Discount/GetCrmId?hansaId=" & UrlEncode(Rebr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				id25 = MyJSGet(jsresponse,"result");
				recordstore(Rebr,true);
				logtext(0,"SendLoyaltyProgramToCRM Rebr.CRMid " & rebid);
			end;
		end else begin
			id25 = Rebr.CRMid;
		end;
		
		Rebr.Code = "30%";
		readfirstmain(Rebr,1,true);
		if(blank(Rebr.CRMid) or Rebr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/Discount/GetCrmId?hansaId=" & UrlEncode(Rebr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				id30 = MyJSGet(jsresponse,"result");
				recordstore(Rebr,true);
				logtext(0,"SendLoyaltyProgramToCRM Rebr.CRMid " & rebid);
			end;
		end else begin
			id30 = Rebr.CRMid;
		end;
		

		if(blank(LCMLr.CRMid) or LCMLr.CRMid=="null")then begin
			SendWebRequest(host,port,-1,false,"GET","/api/LoyaltyCard/GetCrmId?hansaId=" & UrlEncode(LCMLr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				LCMLr.CRMid = MyJSGet(jsresponse,"result");
				logtext(0,"SendUpdateLoyaltyProgramToCRM LCMLr.CRMid " & LCMLr.CRMid);
			end;
		end;
		
		addtexttoarea("{" & chr(13) & chr(10),req);
		addtexttoarea("\"programName\":\"" & NormalizeStrToJson(LCMLr.Code) & "\"," & chr(13) & chr(10),req);
		if(LCMLr.Code=="1")then begin
			addtexttoarea("\"discountIds\":" & "[",req);
			addtexttoarea("\"" & id0 & "\",",req);
			addtexttoarea("\"" & id5 & "\",",req);
			addtexttoarea("\"" & id10 & "\",",req);
			addtexttoarea("\"" & id15 & "\",",req);
			addtexttoarea("\"" & id18 & "\",",req);
			addtexttoarea("\"" & id20 & "\"",req);
			addtexttoarea("]" & "," & chr(13) & chr(10),req);
		end;
		if(LCMLr.Code=="EMPL")then begin
			addtexttoarea("\"discountIds\":" & "[",req);
			addtexttoarea("\"" & id0 & "\",",req);
			addtexttoarea("\"" & id15 & "\",",req);
			addtexttoarea("\"" & id20 & "\",",req);
			addtexttoarea("\"" & id25 & "\",",req);
			addtexttoarea("\"" & id30 & "\",",req);
			addtexttoarea("]" & "," & chr(13) & chr(10),req);
		end;
		if(nonblank(LCMLr.CRMid)) then begin
		addtexttoarea("\"id\":" & "\"" & NormalizeStrToJson(LCMLr.CRMid) & "\"," & chr(13) & chr(10),req);
		end;
		addtexttoarea("\"hansaId\":" & "\"" & NormalizeStrToJson(LCMLr.Code) & "\"" & chr(13) & chr(10),req);
		addtexttoarea("}" & chr(13) & chr(10),req);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,req);
		writeareatofile(req,"CRMRequest.txt",1);
		SendWebRequest(host,port,-1,false,"PATCH",page,"application/json","",false,req,reply,5);
		if(getarealength(reply)>0)then begin
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				logtext(0,"SendUpdateLoyaltyProgramToCRM " & MyJSGet(jsresponse,"result"));
			end;
		end;
		addtexttoarea(" SendUpdateLoyaltyProgramToCRM " & LCMLr.Code & " " & currentcompany & " ",reply);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
		writeareatofile(reply,"CRMResponse.txt",1);
	end;
return;
end;



global updating procedure SendShopToCRM(var record LocationVc Locr) // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger11:38 11.09.2018
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply;
  string 255 ha1,ha2;
  row MarcCampVc MCrw;
  integer i;
  json jsresponse;
  record GlobalStoresVc GSr;
  
	
	string 50 shopid;
	record WebReportChBlock WRChb;
	blockload(WRChb);		
	if(WRChb.WEBCheck==1)then begin
  
		host = "192.168.3.11";
		page = "/api/Shop/Create";
		port = 8088;
		logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
		if(fileexists("demoserver"))then begin
			port = 8087;
 	logtext(0,"newport 8087");
		end;

		
		addtexttoarea("{" & chr(13) & chr(10),req);
		addtexttoarea("\"shop\":\"" & NormalizeStrToJson(Locr.Name) & "\"," & chr(13) & chr(10),req);
		//addtexttoarea("\"traffic\":\"" & "0" & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"id\":" & "\"\"," & chr(13) & chr(10),req);
		addtexttoarea("\"hansaId\":" & "\"" & NormalizeStrToJson(Locr.Code) & "\"" & chr(13) & chr(10),req);
		addtexttoarea("}" & chr(13) & chr(10),req);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,req);
		writeareatofile(req,"CRMRequest.txt",1);
		SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5);
		if(getarealength(reply)>0)then begin
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")) and MyJSGet(jsresponse,"result")!="null")then begin
				Locr.CRMid = MyJSGet(jsresponse,"result");
				logtext(0,"SendShopToCRM " & Locr.CRMid);
			end;
		end;
		
		if(blank(Locr.CRMid))then begin
			SendWebRequest(host,port,-1,false,"GET","/api/Shop/GetCrmId?hansaId=" & UrlEncode(Locr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			logtext(0,"/api/Shop/GetCrmId?hansaId  " & MyJSGet(jsresponse,"result"));
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				Locr.CRMid = MyJSGet(jsresponse,"result");
				logtext(0,"SednConsultantToCRM shopid " & MyJSGet(jsresponse,"result"));
			end;
		end;
		addtexttoarea(" SendShopToCRM " & Locr.Code & " " & currentcompany & " ",reply);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
		writeareatofile(reply,"CRMResponse.txt",1);
	end;
return;
end;


global webpublic updating procedure WebSendUpdateShopToCRMAsyncReply()
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply;
  string 255 ha1,ha2;
  row MarcCampVc MCrw;
  integer i;
  json jsresponse;
	record WebReportChBlock WRChb;
	record LocationVc Locr;
	string 100 compn,reccode
	
	logtext(0,"WebSendUpdateShopToCRMAsyncReply");
	SetCompany(1,false);
	blockload(WRChb);		
	compn = webgetarg("compnr");
	reccode = webgetarg("reccode");
	webgetpostdata(reply);
	if(getarealength(reply)>0)then begin
		jsresponse = ParseJSONArea(reply);
		if(nonblank(compn))then begin
			setcompany(stringtoint(compn),false);
			if(nonblank(compn))then begin
				logtext(0,reccode);
				if(nonblank(reccode))then begin
					logtext(0,"SendUpdateShopToCRM " & MyJSGet(jsresponse,"result"));
				end;
			end;
		end;
	end;
	addtexttoarea(" SendUpdateShopToCRM " & Locr.Code & " " & currentcompany & " ",reply);
	addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
	writeareatofile(reply,"CRMResponse.txt",1);
	
return;
end;


global updating procedure SendUpdateShopToCRMAsync(var record LocationVc Locr) // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger11:38 11.09.2018
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply,a_req,req64;
  string 255 ha1,ha2,ssl;
  row MarcCampVc MCrw;
  integer i;
  json jsresponse;
	record WebReportChBlock WRChb;
	
	blockload(WRChb);		
	if(WRChb.WEBCheck==1)then begin
	
  
		host = "192.168.3.11";
		page = "/api/Shop/Update";
		port = 8088;
		logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
		if(fileexists("demoserver"))then begin
			port = 8087;
 			logtext(0,"newport 8087");
		end;
		ssl = "false";

		
		addtexttoarea("{" & chr(13) & chr(10),req);
		addtexttoarea("\"shop\":\"" & NormalizeStrToJson(Locr.Name) & "\"," & chr(13) & chr(10),req);
		if(nonblank(Locr.CRMid)) then begin
			addtexttoarea("\"id\":" & "\"" & NormalizeStrToJson(Locr.CRMid) & "\"" & chr(13) & chr(10),req);
		end else begin
			SendWebRequest(host,port,-1,false,"GET","/api/Shop/GetCrmId?hansaId=" & UrlEncode(Locr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			logtext(0,"/api/Shop/GetCrmId?hansaId  " & MyJSGet(jsresponse,"result"));
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				Locr.CRMid = MyJSGet(jsresponse,"result");
				addtexttoarea("\"id\":" & "\"" & NormalizeStrToJson(Locr.CRMid) & "\"" & chr(13) & chr(10),req);
			end;
		end;
		addtexttoarea("}" & chr(13) & chr(10),req);
			
		AddTextToArea("{\"host\" : \"" & host & "\"," & chr(13) & chr(10),a_req);//++++++++++++++++++++++++Request part
		AddTextToArea("\"port\" : " & port & "," & chr(13) & chr(10),a_req);
		AddTextToArea("\"https\" : " & ssl & "," & chr(13) & chr(10),a_req);
		AddTextToArea("\"page\" : \"" & page & "\"," & chr(13) & chr(10),a_req);
		AddTextToArea("\"method\" : \"" & "PATCH" & "\"," & chr(13) & chr(10),a_req);
		
		AddTextToArea("\"callbackhost\" : \"" & "127.0.0.1" & "\"," & chr(13) & chr(10),a_req);//++++++++++++++++++++++++CalBackPart
		AddTextToArea("\"callbackport\" : \"" & "8033" & "\"," & chr(13) & chr(10),a_req);
		AddTextToArea("\"callbackpage\" : \"" & "/WebSendUpdateShopToCRMAsyncReply.hal" & "\"," & chr(13) & chr(10),a_req);
		AddTextToArea("\"contenttype\" : \"" & "application/json;charset=utf8" & "\"," & chr(13) & chr(10),a_req);

		AddTextToArea("\"callbackgetdata\" : \"" & "?compnr=" & currentcompany & "&reccode=" & Locr.Code & "\"," & chr(13) & chr(10),a_req);

		AddTextToArea("\"xmldata\" : ",a_req);//++++++++++++++++++++++++Request body
		insertareabeforearea(a_req,req);
		setareazerosize(a_req);
		insertareabeforearea(req,a_req);
		AddTextToArea("}" & chr(13) & chr(10),a_req);		
		
		host = "127.0.0.1";
		page = "/getProxyRequest";
		port = 1071;
		SendWebRequest(host,port,-1,false,"PATCH",page,"application/json","",false,a_req,reply,5);
		
	end;
return;
end;

global updating procedure SendUpdateShopToCRM(var record LocationVc Locr) // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger11:38 11.09.2018
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply;
  string 255 ha1,ha2;
  row MarcCampVc MCrw;
  integer i;
  json jsresponse;
	record WebReportChBlock WRChb;
	
	blockload(WRChb);		
	if(WRChb.WEBCheck==1)then begin
	
  
		host = "192.168.3.11";
		page = "/api/Shop/Update";
		port = 8088;
		logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
		if(fileexists("demoserver"))then begin
			port = 8087;
 	logtext(0,"newport 8087");
		end;

		
		addtexttoarea("{" & chr(13) & chr(10),req);
		addtexttoarea("\"shop\":\"" & NormalizeStrToJson(Locr.Name) & "\"," & chr(13) & chr(10),req);
		//addtexttoarea("\"traffic\":\"" & "0" & "\"," & chr(13) & chr(10),req);
		if(nonblank(Locr.CRMid)) then begin
			addtexttoarea("\"id\":" & "\"" & NormalizeStrToJson(Locr.CRMid) & "\"" & chr(13) & chr(10),req);
		end else begin
			SendWebRequest(host,port,-1,false,"GET","/api/Shop/GetCrmId?hansaId=" & UrlEncode(Locr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			logtext(0,"/api/Shop/GetCrmId?hansaId  " & MyJSGet(jsresponse,"result"));
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				Locr.CRMid = MyJSGet(jsresponse,"result");
				addtexttoarea("\"id\":" & "\"" & NormalizeStrToJson(Locr.CRMid) & "\"" & chr(13) & chr(10),req);
			end;
		end;
		addtexttoarea("}" & chr(13) & chr(10),req);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,req);
		writeareatofile(req,"CRMRequest.txt",1);
		SendWebRequest(host,port,-1,false,"PATCH",page,"application/json","",false,req,reply,5);
		if(getarealength(reply)>0)then begin
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				logtext(0,"SendUpdateShopToCRM " & MyJSGet(jsresponse,"result"));
			end;
		end;
		addtexttoarea(" SendUpdateShopToCRM " & Locr.Code & " " & currentcompany & " ",reply);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
		writeareatofile(reply,"CRMResponse.txt",1);
	end;
return;
end;

global webpublic updating procedure WebSendIVVisitToCRMAsyncResponse()
begin
integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply;
  string 255 ha1,ha2;
  row MarcCampVc MCrw;
  integer i;
  json jsresponse;
	record WebReportChBlock WRChb;
	record LocationVc Locr;
	string 100 compn,reccode;
	record IVVc IVr;
	
	logtext(0,"WebSendIVVisitToCRMAsyncResponse");
	SetCompany(1,false);
	blockload(WRChb);		
	compn = webgetarg("compnr");
	reccode = webgetarg("reccode");
	webgetpostdata(reply);
	if(getarealength(reply)>0)then begin
		jsresponse = ParseJSONArea(reply);
		if(nonblank(compn))then begin
			setcompany(stringtoint(compn),false);
			if(nonblank(compn))then begin
				logtext(0,reccode);
				if(nonblank(reccode))then begin
					logtext(0,"WebSendIVVisitToCRMAsyncResponse " & MyJSGet(jsresponse,"result"));
					IVr.SerNr = stringtolongint(reccode);
					if(readfirstmain(IVr,1,true))then begin
						if(blank(IVr.CRMid))then begin
							IVr.CRMid = MyJSGet(jsresponse,"result");
							recordstore(IVr,true);
						end;
					end;
				end;
			end;
		end;
	end;
	
	addtexttoarea(" SendIVVisitToCRM " & IVr.SerNr & " " & currentcompany & " ",reply);
	addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
	writeareatofile(reply,"CRMResponse.txt",1);
return;
end;


global webpublic updating procedure WebUpdateVisit()
begin
	record CUVc CUr,oldCUr;
	area getpost;
	json jsresponse;
	boolean foundf;
	string 100 tstr,field,status,gender;
	date birthdate;
	record PhoneVc Phoner;
	boolean TrHs;
	integer i,phonesqty,compnr;
	longint senr;
	array string 255 phones;
	string 100 invnr;
	record IVVc IVr;
	
	logtext(0,"WebUpdateCustomer");
	
	webgetpostdata(getpost);
	
	writeareatofile(getpost,"UpdateVisit/" & datetostring(currentdate,"DDMMYY") & TimeToString(currenttime,"HHMMSS",false) & ".txt",1);
	if(getarealength(getpost)>20)then begin
		jsresponse = ParseJSONArea(getpost);
		invnr = MyJSGet(jsresponse,"visitId");
		if(nonblank(invnr))then begin
			invnr = StrReplace(invnr,"_",":");
			compnr = stringtoint(firstinrange(invnr,2));
			senr = stringtolongint(lastinrange(invnr,10));
			if(compnr>0 and senr>0)then begin
				setcompany(compnr,false);
				IVr.SerNr = senr;
				if(readfirstmain(IVr,1,true))then begin
					//IVr.CRMCustomer = MyJSGet(jsresponse,"customerId");
					//IVr.CRMCustomerName = MyJSGet(jsresponse,"customerName");
					//recordstore(IVr,true);
					weboutstring("{\"result\":\"OK\"}");
				end else begin
					weboutstring("{\"result\":\"error\",\"error\":\"invoice not found\"}");
				end;
				logtext(0,"compnr " & compnr);
				logtext(0,"senr " & senr);
			end else begin
				weboutstring("{\"result\":\"error\",\"error\":\"wrong visitId\"}");
			end;
		end else begin
			weboutstring("{\"result\":\"error\",\"error\":\"blank visitId\"}");
		end;
	end else begin
		weboutstring("{\"result\":\"error\",\"error\":\"no data\"}");
	end;
return;
end;

global updating procedure SendIVVisitToCRMAsync(area request,string reccode)
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply,a_req,req64;
  string 255 ha1,ha2,ssl;
  row MarcCampVc MCrw;
  integer i;
  json jsresponse;
	record WebReportChBlock WRChb;
	
	blockload(WRChb);		
	if(WRChb.WEBCheck==1)then begin
	
  
		host = "192.168.3.11";
		page = "/api/Visit/Create";
		port = 8088;
		logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
		if(fileexists("demoserver"))then begin
			port = 8087;
 			logtext(0,"newport 8087");
		end;
		ssl = "false";


		addtexttoarea("}" & chr(13) & chr(10),req);
			
		AddTextToArea("{\"host\" : \"" & host & "\"," & chr(13) & chr(10),a_req);//++++++++++++++++++++++++Request part
		AddTextToArea("\"port\" : " & port & "," & chr(13) & chr(10),a_req);
		AddTextToArea("\"https\" : " & ssl & "," & chr(13) & chr(10),a_req);
		AddTextToArea("\"page\" : \"" & page & "\"," & chr(13) & chr(10),a_req);
		AddTextToArea("\"method\" : \"" & "POST" & "\"," & chr(13) & chr(10),a_req);
		
		AddTextToArea("\"callbackhost\" : \"" & "127.0.0.1" & "\"," & chr(13) & chr(10),a_req);//++++++++++++++++++++++++CalBackPart
		AddTextToArea("\"callbackport\" : \"" & "8033" & "\"," & chr(13) & chr(10),a_req);
		AddTextToArea("\"callbackpage\" : \"" & "/WebSendIVVisitToCRMAsyncResponse.hal" & "\"," & chr(13) & chr(10),a_req);
		AddTextToArea("\"contenttype\" : \"" & "application/json;charset=utf8" & "\"," & chr(13) & chr(10),a_req);

		AddTextToArea("\"callbackgetdata\" : \"" & "?compnr=" & currentcompany & "&reccode=" & reccode & "\"," & chr(13) & chr(10),a_req);

		AddTextToArea("\"xmldata\" : ",a_req);//++++++++++++++++++++++++Request body
		insertareabeforearea(a_req,request);
		setareazerosize(a_req);
		insertareabeforearea(request,a_req);
		AddTextToArea("}" & chr(13) & chr(10),a_req);		
		
		host = "127.0.0.1";
		page = "/getProxyRequest";
		port = 1071;
		SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,a_req,reply,5);
		
	end;
return;
end;

global updating procedure SendIVVisitToCRM(var record IVVc IVr) // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger11:38 11.09.2018
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply,idreq;
  string 255 ha1,ha2;
  record MarcCampVc MCr;
  row MarcCampVc MCrw;
  integer i,cnt;
	record LoyaltyCardVc LCr;
  json jsresponse;
	record WebReportChBlock WRChb;
	record CUVc CUr;
	record LocationVc Locr;
	record GlobalStoresVc GSr;
	record UserVc User;
	boolean testf;
	row IVVc IVrw;
	record INVc INr;
	LongInt res;  
  record CreditLimitBlock CLb; 
  record MainStockBlock MSb;  
  record AccBlock ARAccRec;  
  record SRBlock SRb;  
  record CashierDefBlock CDb;
  record CYBlock CYb;
  record ItemStatusVc ISr;  
  record SHVc recSHr;
  record AccVc Accr;
  record LegalInvNrBlock LINrb;
  row LegalInvNrBlock LINrbrw;
  row SHVc SHrw2;
  row IVCashVc IVCashrw;
  row IVCashVc IVCash2rw;  
  record IVCashVc locIVCashr;
  Integer rwcnt,j,rwcnt2; 
  LongInt newnr,oldnr;
  Boolean gentrans,transf,unokf;
  val limit,bal,quant,prev,cash;
  string 255 tstr2,errstr,oldOfficialSerNr,c;
  string 10 location;
  Boolean isstruct;  
  Boolean check;
  Integer insertmode,updatemode;
  Integer errcode;
  LongInt sernr;
  record LocalOffLineNrBlock LastRecNr;
  Integer positivef;
  val discountprice,price,vreb,baseprice,tax2prc;
  string 255 curitemname,salesacc,vatcode,tax2code,taxtemplatecode;
  Boolean calcpricef,dummyf;
  Boolean test2f,remoteconnection;
  LongInt l,dummyl;
  Date td;
  Integer programmode;
  record ACPVc ACPr;
  record HotelBlock Hotelb;
  record JobVc Jobr;
  string 50 CRMid,campid,currebcode;
  val aznprice;
  
  
	logtext(0,"SendIVVisitToCRM");
	
	testf = true;
	if(left(IVr.CustCode,3)=="FOB")then begin
		testf = false;
	end;
	blockload(WRChb);		
	if(WRChb.WEBCheck==1 and testf)then begin
	
  	host = "192.168.3.11";
		page = "/api/Visit/Create";
		port = 8088;
		logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
		if(fileexists("demoserver"))then begin
			port = 8087;
 	logtext(0,"newport 8087");
		end;

		
		if(IVr.CustCode!="NONAME" and IVr.CustCode!="NOFULLNAME" and left(IVr.CustCode,3)!="FOB")then begin
			CUr.Code = IVr.CustCode;
			readfirstmain(CUr,1,true);
			if(blank(CUr.CRMid) or CUr.CRMid=="null")then begin
				SendWebRequest(host,port,-1,false,"GET","/api/Contact/GetCrmId?hansaId=" & UrlEncode(CUr.Code),"application/json","",false,req,reply,5);
				jsresponse = ParseJSONArea(reply);
				if(nonblank(MyJSGet(jsresponse,"result")))then begin
					CUr.CRMid = MyJSGet(jsresponse,"result");
					logtext(0,"SendUpdateLoyaltyCardToCRM CUr.CRMid " & CUr.CRMid);
					recordstore(CUr,true);
				end;
			end;
		end;
  	
  	GSr.Code = IVr.Location;
  	if(currentcompany==9)then begin
  		GSr.Code = "CS1";
  	end;
  	if(currentcompany==28)then begin
  		GSr.Code = "1002100";
  	end;
  	
  	readfirstmain(GSr,1,true);
  	if(blank(GSr.CRMid) or GSr.CRMid=="null")then begin
  		SendWebRequest(host,port,-1,false,"GET","/api/Shop/GetCrmId?hansaId=" & UrlEncode(GSr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			logtext(0,"/api/Shop/GetCrmId?hansaId  " & MyJSGet(jsresponse,"result"));
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				GSr.CRMid = MyJSGet(jsresponse,"result");
				recordstore(GSr,true);
			end else begin
				Locr.Code = GSr.Code;
				if(readfirstmain(Locr,1,true))then begin
					SendShopToCRM(Locr);
					if(NONBLANK(Locr.CRMid))then begin
						recordstore(Locr,true);
						GSr.CRMid = Locr.CRMid;
						recordstore(GSr,true);
					END;
				end;
			end;
  	end;
  	
  	User.Code = IVr.SalesMan;
  	if(readfirstmain(User,1,true))then begin
  		if(User.IsSalesMan==1)then begin
				if(blank(User.CRMid) or User.CRMid=="null")then begin
					logtext(0,"SednConsultantToCRM shopid " & User.Code);
					SendWebRequest(host,port,-1,false,"GET","/api/Consultant/GetCrmId?hansaId=" & UrlEncode(User.Code),"application/json","",false,req,reply,5);
					jsresponse = ParseJSONArea(reply);
					if(nonblank(MyJSGet(jsresponse,"result")))then begin
						User.CRMid = MyJSGet(jsresponse,"result");
					
						recordstore(User,true);
						logtext(0,"SednConsultantToCRM shopid " & MyJSGet(jsresponse,"result"));
					end;
				end;
  		end;
  	end;
  	
  	
  	if(nonblank(IVr.LoyaltyCardNr))then begin
  		LCr.SerNr = IVr.LoyaltyCardNr;
  		if(readfirstmain(LCr,1,true))then begin
  			if(blank(LCr.CRMid) or LCr.CRMid=="null")then begin
					if(blank(LCr.CRMid) or LCr.CRMid=="null")then begin
						SendWebRequest(host,port,-1,false,"GET","/api/LoyaltyCard/GetCrmId?hansaId=" & UrlEncode(LCr.SerNr),"application/json","",false,req,reply,5);
						jsresponse = ParseJSONArea(reply);
						if(nonblank(MyJSGet(jsresponse,"result")))then begin
							LCr.CRMid = MyJSGet(jsresponse,"result");
							logtext(0,"SendUpdateLoyaltyCardToCRM LCr.CRMid " & LCr.CRMid);
							recordstore(LCr,true);
						end;
					end;
				end;
			end;
		end;
  			
		addtexttoarea("{" & chr(13) & chr(10),req);
		if(IVr.CustCode!="NONAME" and IVr.CustCode!="NOFULLNAME" and left(IVr.CustCode,3)!="FOB" and nonblank(CUr.CRMid))then begin
			addtexttoarea("\"contactCrmId\":\"" & NormalizeStrToJson(CUr.CRMid) & "\"," & chr(13) & chr(10),req);
		end;
		if(nonblank(LCr.CRMid) and LCr.CRMid!="null")then begin
			addtexttoarea("\"loyaltyCardId\":\"" & NormalizeStrToJson(LCr.CRMid) & "\"," & chr(13) & chr(10),req);
		end;
		addtexttoarea("\"checkNumber\":\"" & NormalizeStrToJson(IVr.SerNr) & "\"," & chr(13) & chr(10),req);
		if(nonblank(GSr.CRMid)) then begin
		addtexttoarea("\"shopId\":\"" & NormalizeStrToJson(GSr.CRMid) & "\"," & chr(13) & chr(10),req);
		end;
		if(nonblank(User.CRMid))then begin
			addtexttoarea("\"consultantId\":\"" & NormalizeStrToJson(User.CRMid) & "\"," & chr(13) & chr(10),req);
		end;
		addtexttoarea("\"purchaseAmount\":\"" & valtostring(IVr.Sum4,M45Val,"",".",0) & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"invDate\":\"" & datetostring(IVr.InvDate,"YYYY-MM-DD") & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"hansaId\":" & "\"" & currentcompany & "_" & IVr.SerNr & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"taxfree\":" & "" & IVr.TaxFree & "," & chr(13) & chr(10),req);
		if(true)then begin
			addtexttoarea("\"visitProducts\":[" & chr(13) & chr(10),req);
			cnt=0;
			for (i=0;i<matrowcnt(IVr);i=i+1) begin
				matrowget(IVr,i,IVrw);
				if(IVrw.stp==1) then begin
					INr.Code = IVrw.ArtCode;
					if(Readfirstmain(INr,1,true)) then begin
						if(cnt>0) then begin 
							addtexttoarea(",",req);
						end;	
						addtexttoarea("{" & chr(13) & chr(10),req);
						addtexttoarea("\"productDetail\":{" & chr(13) & chr(10),req);
						addtexttoarea("\"name\":\"" & NormalizeStrToJson(INr.Name) & "\"," & chr(13) & chr(10) ,req);
						if(nonblank(INr.BPIBrand))then begin
							addtexttoarea("\"brand\":{" & chr(13) & chr(10) ,req);
							addtexttoarea("\"brand\":\"" &  NormalizeStrToJson(BPICodeToName(INr.BPIBrand)) & "\"," & chr(13) & chr(10) ,req);
							addtexttoarea("\"hansaid\":\"" & INr.BPIBrand & "\"" & chr(13) & chr(10) ,req);
							addtexttoarea("}," & chr(13) & chr(10),req);
						end;
						if(nonblank(INr.BPIGroup))then begin
								addtexttoarea("\"group\":\"" & NormalizeStrToJson(BPICodeToName(INr.BPIGroup)) & "\"," & chr(13) & chr(10) ,req);
						end;
						if(nonblank(INr.BPICollection))then begin
							addtexttoarea("\"collection\":\"" & NormalizeStrToJson(BPICodeToName(INr.BPICollection)) & "\"," & chr(13) & chr(10) ,req);
						end;
						if(nonblank(INr.BPICategory))then begin
							addtexttoarea("\"category\":\"" & NormalizeStrToJson(BPICodeToName(INr.BPICategory)) & "\"," & chr(13) & chr(10) ,req);
						end;
						if(nonblank(INr.BPISubGroup))then begin
							addtexttoarea("\"subGroup\":\"" & NormalizeStrToJson(BPICodeToName(INr.BPISubGroup)) & "\"," & chr(13) & chr(10) ,req);
						end;
						addtexttoarea("\"hansaid\":\"" & INr.Code & "\"" & chr(13) & chr(10) ,req);
						addtexttoarea("}," & chr(13) & chr(10),req);
						CRMid = "";
						if (GetItemPriceDiscount3CRM(IVrw.ArtCode,IVrw.Quant,INr,IVr.CurncyCode,
                              IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,
                              IVr.LangCode,IVr.CustCat,User.MinPLCode,IVr.RebCode,
                              price,curitemname,vreb,vatcode,baseprice,salesacc,
                              0,calcpricef,IVr.TransDate,IVr.TransTime,IVr.CustCode,true,dummyf,IVr.PayDeal,tax2code,tax2prc,IVr.Region,location,taxtemplatecode,CRMid,MCr)) then begin
							campid = CRMid;
							logtext(0,"CRMid " & CRMid);
						end else begin
							CRMid = "";
							campid = "";
							if(blank(MCr.CRMID) and nonblank(MCr.Code))then begin
								setareazerosize(idreq);
								addtexttoarea("{" & chr(13) & chr(10),idreq);
									addtexttoarea("\"proposedStartDate\":\"" & datetostring(MCr.sDate,"YYYY-MM-DD") & "\"," & chr(13) & chr(10) ,idreq);
									addtexttoarea("\"hansaId\":\"" & MCr.Code & "\"," & chr(13) & chr(10) ,idreq);
								addtexttoarea("}",idreq);
								SendWebRequest(host,port,-1,false,"POST","/api/MarketingCampaign/GetCampaignId","application/json","",false,idreq,reply,5);
								addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,idreq);
								writeareatofile(idreq,"CRMRequest.txt",1);

								addtexttoarea(" MarketingCampaign " & MCr.Code & " " & currentcompany & " ",reply);
								addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
								writeareatofile(reply,"CRMResponse.txt",1);
								jsresponse = ParseJSONArea(reply);
								CRMid = MyJSGet(jsresponse,"result");
								if(nonblank(CRMid))then begin
									MCr.CRMID = CRMid;
									campid = CRMid;
									logtext(0,"MarketingCampaign MCr.CRMid " & MCr.CRMID);
									recordstore(MCr,true);
								end else begin
									SednMarcCampVcToCRM(MCr);
									if(nonblank(MCr.CRMID))then begin
										campid = MCr.CRMID;
										recordstore(MCr,true);
									end;
								end;
							end;
							
							
						end;	
						if(nonblank(campid))then begin
							addtexttoarea("\"campaign\":\"" & campid & "\"," & chr(13) & chr(10) ,req);
						end;
						addtexttoarea("\"count\":" &  stringtoint(IVrw.Quant) & "," & chr(13) & chr(10) ,req);
						
						aznprice = IVrw.Price;
						if(nonblank(IVr.CurncyCode) and IVr.CurncyCode!="AZN" and IVr.FrRate!=0 and IVr.ToRateB1!=0)then begin
							aznprice = aznprice / IVr.FrRate * IVr.ToRateB1;// Edit ************************** BPI Ukraine - KramarAlexandr - 03, 11 09 2019 y. at 11:50:29 AM
						end;
						aznprice = round(aznprice,SetRoundModeD(2));
						//addtexttoarea("\"salesPrice\":" &  valtostring(IVrw.Price,M45Val,"",".",0) & "," & chr(13) & chr(10) ,req);// Edit ************************** BPI Ukraine - KramarAlexandr - 03, 11 09 2019 y. at 11:48:58 AM
						
						if(aznprice==blankval)then begin
							aznprice = 0;
						end;
						addtexttoarea("\"salesPrice\":" &  valtostring(aznprice,M45Val,"",".",0) & "," & chr(13) & chr(10) ,req);// Edit ************************** BPI Ukraine - KramarAlexandr - 03, 11 09 2019 y. at 11:48:58 AM
						
						if(IVrw.vRebate==blankval)then begin
							IVrw.vRebate = 0;
						end;
						addtexttoarea("\"salesDiscount\":" &  stringtoint(IVrw.vRebate) & "" & chr(13) & chr(10) ,req);
						addtexttoarea("}" & chr(13) & chr(10),req);
						cnt = cnt + 1;
					end;	
				end;	
			end;
			addtexttoarea("]" & chr(13) & chr(10),req);
		end;
		addtexttoarea("}" & chr(13) & chr(10),req);
		
		if(fileexists("demoserver")==false)then begin
			SendIVVisitToCRMAsync(req,IVr.SerNr);
			addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,req);
			writeareatofile(req,"CRMRequest.txt",1);
		end else begin
			writeareatofile(req,"CRMRequest.txt",1);
			SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,10);
			if(getarealength(reply)>0)then begin
				jsresponse = ParseJSONArea(reply);
				if(nonblank(MyJSGet(jsresponse,"result")))then begin
					IVr.CRMid = MyJSGet(jsresponse,"result");
					Logtext(0,"SendIVVisitToCRM" & MyJSGet(jsresponse,"result"));
				end;
			end;
			addtexttoarea(" SendIVVisitToCRM " & IVr.SerNr & " " & currentcompany & " ",reply);
			addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
			writeareatofile(reply,"CRMResponse.txt",1);
		end;
	end;
return;
end;

global updating procedure SendUpdateIVVisitToCRM(record IVVc IVr) // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger11:38 11.09.2018
begin
	integer err,noErr;
  string 255 host,tstr,nonce,opaque,page;
  LongInt port,pos,mtrw;
  Area req,reply,idreq;
  string 255 ha1,ha2;
  record MarcCampVc MCr;
  row MarcCampVc MCrw;
  integer i,cnt;
	record LoyaltyCardVc LCr;
  json jsresponse;
	record WebReportChBlock WRChb;
	record CUVc CUr;
	record LocationVc Locr;
	record GlobalStoresVc GSr;
	record UserVc User;
	boolean testf;
	row IVVc IVrw;
	record INVc INr;
	LongInt res;  
  record CreditLimitBlock CLb; 
  record MainStockBlock MSb;  
  record AccBlock ARAccRec;  
  record SRBlock SRb;  
  record CashierDefBlock CDb;
  record CYBlock CYb;
  record ItemStatusVc ISr;  
  record SHVc recSHr;
  record AccVc Accr;
  record LegalInvNrBlock LINrb;
  row LegalInvNrBlock LINrbrw;
  row SHVc SHrw2;
  row IVCashVc IVCashrw;
  row IVCashVc IVCash2rw;  
  record IVCashVc locIVCashr;
  Integer rwcnt,j,rwcnt2; 
  LongInt newnr,oldnr;
  Boolean gentrans,transf,unokf;
  val limit,bal,quant,prev,cash;
  string 255 tstr2,errstr,oldOfficialSerNr,c;
  string 10 location;
  Boolean isstruct;  
  Boolean check;
  Integer insertmode,updatemode;
  Integer errcode;
  LongInt sernr;
  record LocalOffLineNrBlock LastRecNr;
  Integer positivef;
  val discountprice,price,vreb,baseprice,tax2prc;
  string 255 curitemname,salesacc,vatcode,tax2code,taxtemplatecode;
  Boolean calcpricef,dummyf;
  Boolean test2f,remoteconnection;
  LongInt l,dummyl;
  Date td;
  Integer programmode;
  record ACPVc ACPr;
  record HotelBlock Hotelb;
  record JobVc Jobr;
  string 50 CRMid,campid,currebcode;
  
  
	logtext(0,"SendUpdateIVVisitToCRM");
	
	testf = true;
	// if(left(IVr.CustCode,3)=="FOB")then begin
		// testf = false;
	// end;
	if(blank(IVr.CRMid))then begin
		testf = false;
	end;
	blockload(WRChb);		
	logtext(0,WRChb.WEBCheck);
	if(WRChb.WEBCheck==1 and testf)then begin
	
  	host = "192.168.3.11";
		page = "/api/Visit/Update";
		port = 8088;
		logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
		if(fileexists("demoserver"))then begin
			port = 8087;
			logtext(0,"newport 8087");
		end;

		
		if(IVr.CustCode!="NONAME" and IVr.CustCode!="NOFULLNAME" and left(IVr.CustCode,3)!="FOB")then begin
			CUr.Code = IVr.CustCode;
			readfirstmain(CUr,1,true);
			if(blank(CUr.CRMid) or CUr.CRMid=="null")then begin
				SendWebRequest(host,port,-1,false,"GET","/api/Contact/GetCrmId?hansaId=" & UrlEncode(CUr.Code),"application/json","",false,req,reply,5);
				jsresponse = ParseJSONArea(reply);
				if(nonblank(MyJSGet(jsresponse,"result")))then begin
					CUr.CRMid = MyJSGet(jsresponse,"result");
					logtext(0,"SendUpdateLoyaltyCardToCRM CUr.CRMid " & CUr.CRMid);
					recordstore(CUr,true);
				end;
			end;
		end;
  	
  	GSr.Code = IVr.Location;
  	if(currentcompany==9)then begin
  		GSr.Code = "CS1";
  	end;
  	readfirstmain(GSr,1,true);
  	if(blank(GSr.CRMid) or GSr.CRMid=="null")then begin
  		SendWebRequest(host,port,-1,false,"GET","/api/Shop/GetCrmId?hansaId=" & UrlEncode(GSr.Code),"application/json","",false,req,reply,5);
			jsresponse = ParseJSONArea(reply);
			logtext(0,"/api/Shop/GetCrmId?hansaId  " & MyJSGet(jsresponse,"result"));
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				GSr.CRMid = MyJSGet(jsresponse,"result");
				recordstore(GSr,true);
			end else begin
				Locr.Code = GSr.Code;
				if(readfirstmain(Locr,1,true))then begin
					SendShopToCRM(Locr);
					if(NONBLANK(Locr.CRMid))then begin
						recordstore(Locr,true);
						GSr.CRMid = Locr.CRMid;
						recordstore(GSr,true);
					END;
				end;
			end;
  	end;
  	
  	User.Code = IVr.SalesMan;
  	if(readfirstmain(User,1,true))then begin
  		if(User.IsSalesMan==1)then begin
				if(blank(User.CRMid) or User.CRMid=="null")then begin
					logtext(0,"SednConsultantToCRM shopid " & User.Code);
					SendWebRequest(host,port,-1,false,"GET","/api/Consultant/GetCrmId?hansaId=" & UrlEncode(User.Code),"application/json","",false,req,reply,5);
					jsresponse = ParseJSONArea(reply);
					if(nonblank(MyJSGet(jsresponse,"result")))then begin
						User.CRMid = MyJSGet(jsresponse,"result");
					
						recordstore(User,true);
						logtext(0,"SednConsultantToCRM shopid " & MyJSGet(jsresponse,"result"));
					end;
				end;
  		end;
  	end;
  	
  	
  	if(nonblank(IVr.LoyaltyCardNr))then begin
  		LCr.SerNr = IVr.LoyaltyCardNr;
  		if(readfirstmain(LCr,1,true))then begin
  			if(blank(LCr.CRMid) or LCr.CRMid=="null")then begin
					if(blank(LCr.CRMid) or LCr.CRMid=="null")then begin
						SendWebRequest(host,port,-1,false,"GET","/api/LoyaltyCard/GetCrmId?hansaId=" & UrlEncode(LCr.SerNr),"application/json","",false,req,reply,5);
						jsresponse = ParseJSONArea(reply);
						if(nonblank(MyJSGet(jsresponse,"result")))then begin
							LCr.CRMid = MyJSGet(jsresponse,"result");
							logtext(0,"SendUpdateLoyaltyCardToCRM LCr.CRMid " & LCr.CRMid);
							recordstore(LCr,true);
						end;
					end;
				end;
			end;
		end;
  			
		addtexttoarea("{" & chr(13) & chr(10),req);
		if(IVr.CustCode!="NONAME" and IVr.CustCode!="NOFULLNAME" and left(IVr.CustCode,3)!="FOB" and nonblank(CUr.CRMid))then begin
			addtexttoarea("\"contactCrmId\":\"" & NormalizeStrToJson(CUr.CRMid) & "\"," & chr(13) & chr(10),req);
		end;
		if(nonblank(LCr.CRMid) and LCr.CRMid!="null")then begin
			addtexttoarea("\"loyaltyCardId\":\"" & NormalizeStrToJson(LCr.CRMid) & "\"," & chr(13) & chr(10),req);
		end;
		//addtexttoarea("\"MobilePhone1\":\"" & IVr.SerNr & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"checkNumber\":\"" & NormalizeStrToJson(IVr.SerNr) & "\"," & chr(13) & chr(10),req);
		if(nonblank(GSr.CRMid)) then begin
		addtexttoarea("\"shopId\":\"" & NormalizeStrToJson(GSr.CRMid) & "\"," & chr(13) & chr(10),req);
		end;
		if(nonblank(User.CRMid))then begin
			addtexttoarea("\"consultantId\":\"" & NormalizeStrToJson(User.CRMid) & "\"," & chr(13) & chr(10),req);
		end;
		addtexttoarea("\"purchaseAmount\":\"" & valtostring(IVr.Sum4,M45Val,"",".",0) & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"invDate\":\"" & datetostring(IVr.InvDate,"YYYY-MM-DD") & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"hansaId\":" & "\"" & currentcompany & "_" & IVr.SerNr & "\"," & chr(13) & chr(10),req);
		addtexttoarea("\"taxfree\":" & "" & IVr.TaxFree & "," & chr(13) & chr(10),req);
		addtexttoarea("\"id\":" & "" & IVr.CRMid & "," & chr(13) & chr(10),req);
		if(/*fileexists("demoserver")*/true)then begin
			addtexttoarea("\"visitProducts\":[" & chr(13) & chr(10),req);
			cnt=0;
			for (i=0;i<matrowcnt(IVr);i=i+1) begin
				matrowget(IVr,i,IVrw);
				if(IVrw.stp==1) then begin
					INr.Code = IVrw.ArtCode;
					if(Readfirstmain(INr,1,true)) then begin
						if(cnt>0) then begin 
							addtexttoarea(",",req);
						end;	
						addtexttoarea("{" & chr(13) & chr(10),req);
						addtexttoarea("\"productDetail\":{" & chr(13) & chr(10),req);
						addtexttoarea("\"name\":\"" & NormalizeStrToJson(INr.Name) & "\"," & chr(13) & chr(10) ,req);
						addtexttoarea("\"brand\":{" & chr(13) & chr(10) ,req);
						addtexttoarea("\"brand\":\"" &  NormalizeStrToJson(BPICodeToName(INr.BPIBrand)) & "\"," & chr(13) & chr(10) ,req);
						addtexttoarea("\"hansaid\":\"" & INr.BPIBrand & "\"" & chr(13) & chr(10) ,req);
						addtexttoarea("}," & chr(13) & chr(10),req);
						addtexttoarea("\"group\":\"" & INr.BPISubGroup & "\"," & chr(13) & chr(10) ,req);
						addtexttoarea("\"collection\":\"" & INr.BPICollection & "\"," & chr(13) & chr(10) ,req);
						addtexttoarea("\"category\":\"" & INr.BPICategory & "\"," & chr(13) & chr(10) ,req);
						addtexttoarea("\"subGroup\":\"" & INr.BPISubGroup & "\"," & chr(13) & chr(10) ,req);
						addtexttoarea("\"hansaid\":\"" & INr.Code & "\"" & chr(13) & chr(10) ,req);
						addtexttoarea("}," & chr(13) & chr(10),req);
						CRMid = "";
						if (GetItemPriceDiscount3CRM(IVrw.ArtCode,IVrw.Quant,INr,IVr.CurncyCode,
                              IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,
                              IVr.LangCode,IVr.CustCat,User.MinPLCode,IVr.RebCode,
                              price,curitemname,vreb,vatcode,baseprice,salesacc,
                              0,calcpricef,IVr.TransDate,IVr.TransTime,IVr.CustCode,true,dummyf,IVr.PayDeal,tax2code,tax2prc,IVr.Region,location,taxtemplatecode,CRMid,MCr)) then begin
							campid = CRMid;
							logtext(0,"CRMid " & CRMid);
						end else begin
							CRMid = "";
							campid = "";
							if(blank(MCr.CRMID) and nonblank(MCr.Code))then begin
								setareazerosize(idreq);
								addtexttoarea("{" & chr(13) & chr(10),idreq);
									addtexttoarea("\"proposedStartDate\":\"" & datetostring(MCr.sDate,"YYYY-MM-DD") & "\"," & chr(13) & chr(10) ,idreq);
									addtexttoarea("\"hansaId\":\"" & MCr.Code & "\"," & chr(13) & chr(10) ,idreq);
								addtexttoarea("}",idreq);
								SendWebRequest(host,port,-1,false,"POST","/api/MarketingCampaign/GetCampaignId","application/json","",false,idreq,reply,5);
								addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,idreq);
								writeareatofile(idreq,"CRMRequest.txt",1);
								
								addtexttoarea(" MarketingCampaign " & MCr.Code & " " & currentcompany & " ",reply);
								addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
								writeareatofile(reply,"CRMResponse.txt",1);
								jsresponse = ParseJSONArea(reply);
								CRMid = MyJSGet(jsresponse,"result");
								if(nonblank(CRMid))then begin
									MCr.CRMID = CRMid;
									campid = CRMid;
									logtext(0,"MarketingCampaign MCr.CRMid " & MCr.CRMID);
									recordstore(MCr,true);
								end else begin
									SednMarcCampVcToCRM(MCr);
									if(nonblank(MCr.CRMID))then begin
										campid = MCr.CRMID;
										recordstore(MCr,true);
									end;
								end;
							end;
							
							
						end;	
						if(nonblank(campid))then begin
							addtexttoarea("\"campaign\":\"" & campid & "\"," & chr(13) & chr(10) ,req);
						end;
						addtexttoarea("\"count\":" &  stringtoint(IVrw.Quant) & "," & chr(13) & chr(10) ,req);
						addtexttoarea("\"salesPrice\":" &  valtostring(IVrw.Price,M45Val,"",".",0) & "," & chr(13) & chr(10) ,req);
						if(IVrw.vRebate==blankval)then begin
							IVrw.vRebate = 0;
						end;
						addtexttoarea("\"salesDiscount\":" &  stringtoint(IVrw.vRebate) & "" & chr(13) & chr(10) ,req);
						addtexttoarea("}" & chr(13) & chr(10),req);
						cnt = cnt + 1;
					end;	
				end;	
			end;
			addtexttoarea("]" & chr(13) & chr(10),req);
		end;
		addtexttoarea("}" & chr(13) & chr(10),req);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,req);
		writeareatofile(req,"CRMRequest.txt",1);
		SendWebRequest(host,port,-1,false,"POST",page,"application/json","",false,req,reply,5);
		if(getarealength(reply)>0)then begin
			jsresponse = ParseJSONArea(reply);
			if(nonblank(MyJSGet(jsresponse,"result")))then begin
				Logtext(0,"SendUpdateIVVisitToCRM" & MyJSGet(jsresponse,"result"));
			end;
		end;
		addtexttoarea(" SendUpdateIVVisitToCRM " & IVr.SerNr & " " & currentcompany & " ",reply);
		addtexttoarea(currentdate & ":" & currenttime & " " & chr(13) & chr(10) ,reply);
		writeareatofile(reply,"CRMResponse.txt",1);
	end;
return;
end;


global updating procedure SendVisitstoCRM()
begin
	integer i;
	record IVVc IVr;
	record CompaniesBlock CBb;
	boolean TrHs;
	string 150 oldid;
	date fromdate;
	
	logtext(0,"SendVisitstoCRM");
	
	blockload(CBb);
	
	for(i=1;i<=matrowcnt(CBb);i=i+1)begin
		setcompany(i,false);
		fromdate = addday(currentdate,-1);
		IVr.InvDate = fromdate;
		if(currenttime>=stringtotime("23:55:00") and currenttime<stringtotime("23:55:59"))then begin
			fromdate = addday(fromdate,-90);
		end;
		TrHs = true;
		if(currentdate>stringtodate("16/03/2019"))then begin
			while(loopkey("InvDate",IVr,1,TrHs))begin
				if(TrHs and IVr.InvDate>=fromdate)then begin
					oldid = IVr.CRMid;
					if(blank(oldid) and IVr.OKFlag==1)then begin
						SendIVVisitToCRM(IVr);
						if(nonblank(IVr.CRMid))then begin
							recordstore(IVr,true);
						end;
					end;
				end else begin
					TrHs = false;
				end;	
			end;
			resetloop(IVr);
		end;
	end;	

return;
end;

global webpublic updating procedure WebSendVisitstoCRM()
begin

	SendVisitstoCRM;
	
return;
end;


global
updating function LongInt MarcCampVcRecordCheck(var record MarcCampVc MCr,record MarcCampVc MC2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  date bldate;
  row MarcCampVc MCrw;
  integer i,rwcnt,mtrw;
  record GlobalItemVc GIr;
  
  logtext(0,"MarcCampVcRecordCheck");
  
  res = 0;
  
  if(stat==RS_insert)then begin
  	MCr.CompNr = currentcompany;
  end;
  if(MCr.CompNr==0)then begin
  	MCr.CompNr = currentcompany;
  end;
  
  mtrw = matrowcnt(MCr);
  for(i=0;i<mtrw;i=i+1)begin
  	matrowget(MCr,i,MCrw);
  	if(blank(MCrw.Name))then begin
  		GIr.Code = MCrw.ItemCode;
  		if(readfirstmain(GIr,1,true))then begin
  			MCrw.Name = GIr.HansaName;
  			if(nonblank(GIr.Name))then begin
  				MCrw.Name = GIr.Name;
  			end;
  			matrowput(MCr,i,MCrw);
  		end;
  	end;
  end;
  
  if(MCr.eDate<MCr.sDate)then begin
  	MCr.eDate = bldate;
  end;
  if(MCr.RealeDate<MCr.RealsDate)then begin
  	MCr.RealeDate = bldate;
  end;
  
  if(blankdate(MCr.sDate)) then begin
    RecordCheckError(1058,"",-1,"sDate");
    res = -1;
    goto LMarcCampVcRecordCheck;    
  end; 
  if(blankdate(MCr.eDate)) then begin
    RecordCheckError(1058,"",-1,"eDate");
    res = -1;
    goto LMarcCampVcRecordCheck;    
  end; 
  /*if(blankdate(MCr.RealsDate)) then begin
    RecordCheckError(1058,"",-1,"RealsDate");
    res = -1;
    goto LMarcCampVcRecordCheck;    
  end; 
  if(blankdate(MCr.RealeDate)) then begin
    RecordCheckError(1058,"",-1,"RealeDate");
    res = -1;
    goto LMarcCampVcRecordCheck;    
  end;*/
  logtext(0,"matrowcnt(MCr)1 " & matrowcnt(MCr));
  
  if(blank(MCr.CRMID))then begin
		SednMarcCampVcToCRM(MCr);
  end else begin
		SednUpdateMarcCampVcToCRM(MCr);
  end;
 	
 	if(MCr.SyncToCRM>0)then begin
		SednSyncReqMarcCampVcToCRM(MCr);
 	end;
 	
  LMarcCampVcRecordCheck:;
  logtext(0,"matrowcnt(MCr)2 " & matrowcnt(MCr));
  MarcCampVcRecordCheck = res;
  RETURN;
END;


global
updating function LongInt NewClassSetVcRecordCheck(var record NewClassSetVc NCSr,record NewClassSetVc NCS2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  date bldate;
  record DIVc DIr;
  record CTypeVc CTr;
  integer i,mtrw;
  row NewClassSetVc NCSrw;
	record BPIGroupVc Groupr;
	record BPISubGroupVc SGroupr;
  
  logtext(0,"NewClassSetVcRecordCheck");
  
  res = 0;
	
	if(blankdate(NCSr.Group)) then begin
    RecordCheckError(1058,"",-1,"Group");
    res = -1;
    goto LNewClassSetVcRecordCheck;    
  end; 
  if(blankdate(NCSr.Type)) then begin
    RecordCheckError(1058,"",-1,"Type");
    res = -1;
    goto LNewClassSetVcRecordCheck;    
  end; 
  
  if(nonblank(NCSr.Group))then begin
  	Groupr.Code = NCSr.Group;
  	if(readfirstmain(Groupr,1,true)==false)then begin
  		RecordCheckError(1290,"",-1,"Group");
			res = -1;
			goto LNewClassSetVcRecordCheck;  
  	end;
  end;
  if(nonblank(NCSr.Type))then begin
  	SGroupr.Code = NCSr.Type;
  	if(readfirstmain(SGroupr,1,true)==false)then begin
  		RecordCheckError(1290,"",-1,"Type");
			res = -1;
			goto LNewClassSetVcRecordCheck;  
  	end;
  end;
  
  
  mtrw = matrowcnt(NCSr);
  For(i=0;i<mtrw;i=i+1) begin
	  matrowget(NCSr,i,NCSrw);
	  if(blank(NCSrw.CType))then begin
	  	RecordCheckError(1058,"",i,"CType");
			res = -1;
			goto LNewClassSetVcRecordCheck;  
	  end;
	  CTr.Code = NCSrw.CType;
	  if(readfirstmain(CTr,1,true)==false)then begin
	  	RecordCheckError(1290,"",i,"CType");
			res = -1;
			goto LNewClassSetVcRecordCheck; 
	  end;
	  if(blank(NCSrw.CCode))then begin
	  	RecordCheckError(1058,"",i,"CCode");
			res = -1;
			goto LNewClassSetVcRecordCheck;  
	  end;
		/*
	  if(nonblank(NCSrw.CCode))then begin
			DIr.Code = NCSrw.CCode;
			if(readfirstmain(DIr,1,true)==false)then begin
				RecordCheckError(1290,"",i,"CCode");
				res = -1;
				goto LNewClassSetVcRecordCheck;  
			end;
			if(DIr.CType!=NCSrw.CType)then begin
				RecordCheckError(1008,"",i,"CCode");
				res = -1;
				goto LNewClassSetVcRecordCheck; 
			end;
		end;*/
	end; 
	
  LNewClassSetVcRecordCheck:;
  
  NewClassSetVcRecordCheck = res;
  RETURN;
END;





global
updating function LongInt BTRxClassSetVcRecordCheck(var record BTRxClassSetVc BCSr,record BTRxClassSetVc BCS2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  date bldate;
  record DIVc DIr;
  record CTypeVc CTr;
  integer i,mtrw;
  row BTRxClassSetVc BCSrw;
	record BtrxProductNameVc BtrxProductNamer;
	boolean standBnchmrkf;
  
  logtext(0,"NewClassSetVcRecordCheck");
  
  res = 0;
	
  if(blankdate(BCSr.Type)) then begin
    RecordCheckError(1058,"",-1,"Type");
    res = -1;
    goto LBTRxClassSetVcRecordCheck;    
  end; 
  

  if(nonblank(BCSr.Type))then begin
  	BtrxProductNamer.Code = BCSr.Type;
  	if(readfirstmain(BtrxProductNamer,1,true)==false)then begin
  		RecordCheckError(1290,"",-1,"Type");
			res = -1;
			goto LBTRxClassSetVcRecordCheck;  
  	end;
  end;
  
  
  mtrw = matrowcnt(BCSr);
  For(i=0;i<mtrw;i=i+1) begin
	  matrowget(BCSr,i,BCSrw);
	  if(blank(BCSrw.CType))then begin
	  	RecordCheckError(1058,"",i,"CType");
			res = -1;
			goto LBTRxClassSetVcRecordCheck;  
	  end;
	  CTr.Code = BCSrw.CType;
	  if(readfirstmain(CTr,1,true)==false)then begin
	  	RecordCheckError(1290,"",i,"CType");
			res = -1;
			goto LBTRxClassSetVcRecordCheck; 
	  end;
		CTr.Code = BCSrw.CType;
		if (ReadFirstMain(CTr,1,true)) then begin
			if(blank(BCSrw.CCode) and CTr.Relatedf==1)then begin
				RecordCheckError(1058,"",i,"CCode");
				res = -1;
				goto LBTRxClassSetVcRecordCheck;  
			end;
		end;
		
		switch (BCSrw.CType) begin
			case "BRAND": standBnchmrkf = true;
			case "COLLECTION": standBnchmrkf = true;
			case "CATEGORY": standBnchmrkf = true;
			case "CLARITY": standBnchmrkf = true;
			case "COLOR":  standBnchmrkf = true;
			case "CUT":  standBnchmrkf = true;
			case "GROUP":  standBnchmrkf = true;
			case "MATERIAL":  standBnchmrkf = true;
			case "PLATING": standBnchmrkf = true;
			case "SEX":  standBnchmrkf = true;
			case "SHAPE":  standBnchmrkf = true;
			case "SIZE": standBnchmrkf = true;
			case "STONE": standBnchmrkf = true;
			case "STRAP":  standBnchmrkf = true;
			case "SUBGROUP":  standBnchmrkf = true;
			case "USE":  standBnchmrkf = true;
			case "WEIGHT": standBnchmrkf = true;
			case "ODOUR": standBnchmrkf = true;
		end;
		
		
		if (false) then begin
			RecordCheckError(36381,"",i,"CCode");
			res = -1;
			goto LBTRxClassSetVcRecordCheck;  
		end;
		
		/*
	  if(nonblank(BCSrw.CCode))then begin
			DIr.Code = BCSrw.CCode;
			if(readfirstmain(DIr,1,true)==false)then begin
				RecordCheckError(1290,"",i,"CCode");
				res = -1;
				goto LBTRxClassSetVcRecordCheck;  
			end;
			if(DIr.CType!=BCSrw.CType)then begin
				RecordCheckError(1008,"",i,"CCode");
				res = -1;
				goto LBTRxClassSetVcRecordCheck; 
			end;
		end;*/
	end; 
	
  LBTRxClassSetVcRecordCheck:;
  
  BTRxClassSetVcRecordCheck = res;
  RETURN;
END;








global
updating function LongInt BTRxGroupClassSetVcRecordCheck(var record BTRxGroupClassSetVc BGSr,record BTRxGroupClassSetVc BGS2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  date bldate;
  record DIVc DIr;
  record CTypeVc CTr;
  integer i,mtrw;
  row BTRxGroupClassSetVc BGSrw;
	record BtrxGroupsVc BtrxGroupr;
	boolean standBnchmrkf;
  
  logtext(0,"NewClassSetVcRecordCheck");
  
  res = 0;
	
  if(blankdate(BGSr.Type)) then begin
    RecordCheckError(1058,"",-1,"Type");
    res = -1;
    goto LBTRxGroupClassSetVcRecordCheck;    
  end; 
  

  if(nonblank(BGSr.Type))then begin
  	BtrxGroupr.Code = BGSr.Type;
  	if(!readfirstmain(BtrxGroupr,1,true))then begin
  		RecordCheckError(1290,"",-1,"Type");
			res = -1;
			goto LBTRxGroupClassSetVcRecordCheck;  
  	end;
  end;
  
  
  mtrw = matrowcnt(BGSr);
  For(i=0;i<mtrw;i=i+1) begin
	  matrowget(BGSr,i,BGSrw);
	  if(blank(BGSrw.CType))then begin
	  	RecordCheckError(1058,"",i,"CType");
			res = -1;
			goto LBTRxGroupClassSetVcRecordCheck;  
	  end;
	  CTr.Code = BGSrw.CType;
	  if(readfirstmain(CTr,1,true)==false)then begin
	  	RecordCheckError(1290,"",i,"CType");
			res = -1;
			goto LBTRxGroupClassSetVcRecordCheck; 
	  end;
		CTr.Code = BGSrw.CType;
		if (ReadFirstMain(CTr,1,true)) then begin
			if(blank(BGSrw.CCode) and CTr.Relatedf==1)then begin
				RecordCheckError(1058,"",i,"CCode");
				res = -1;
				goto LBTRxGroupClassSetVcRecordCheck;  
			end;
		end;
		
		switch (BGSrw.CType) begin
			case "BRAND": standBnchmrkf = true;
			case "COLLECTION": standBnchmrkf = true;
			case "CATEGORY": standBnchmrkf = true;
			case "CLARITY": standBnchmrkf = true;
			case "CUT":  standBnchmrkf = true;
			case "GROUP":  standBnchmrkf = true;
			case "SHAPE":  standBnchmrkf = true;
			case "SIZE": standBnchmrkf = true;
			case "SUBGROUP":  standBnchmrkf = true;
			case "USE":  standBnchmrkf = true;
			case "WEIGHT": standBnchmrkf = true;
		end;
		
		
		if (standBnchmrkf) then begin
			RecordCheckError(36381,"",i,"CCode");
			res = -1;
			goto LBTRxGroupClassSetVcRecordCheck;  
		end;
		
	end; 
	
  LBTRxGroupClassSetVcRecordCheck:;
  
  BTRxGroupClassSetVcRecordCheck = res;
  RETURN;
END;









global updating procedure UpdateWrongCRMID(record RcVc RepSpec)
begin
	record UserVc USr;
	record LocationVc Locr;
	record LoyaltyCardVc LCr;
	record CUVc CUr;
	integer i;
	json jsresponse;
	area req,reply;
	record GlobalStoresVc GSr;
	record RebVc Rebr;
	
	while(loopmain(CUr,1,true))begin
		if(nonblank(CUr.CRMid))then begin
			CUr.CRMid = "";
			recordstore(CUr,true);
		end;
	end;
	
	while(loopmain(LCr,1,true))begin
		if(nonblank(LCr.CRMid))then begin
			LCr.CRMid = "";
			recordstore(LCr,true);
		end;
	end;
	
	while(loopmain(GSr,1,true))begin
		if(nonblank(GSr.CRMid))then begin
			GSr.CRMid = "";
			recordstore(GSr,true);
		end;
	end;
	
	
	For(i=0;i<=29;i=i+1) begin
		setcompany(i,false);
	  resetloop(USr);
	  USr.Code = "";
	  while(loopmain(USr,1,true))begin
			if(nonblank(USr.CRMid))then begin
				USr.CRMid = "";
				recordstore(USr,true);
			end;
	  end;
	  
	  resetloop(Locr);
	  Locr.Code = "";
	  while(loopmain(Locr,1,true))begin
			if(nonblank(Locr.CRMid))then begin
				Locr.CRMid = "";
				recordstore(Locr,true);
			end;
		end;
		
		resetloop(Rebr);
	  Rebr.Code = "";
	  while(loopmain(Rebr,1,true))begin
			if(nonblank(Rebr.CRMid))then begin
				Rebr.CRMid = "";
				recordstore(Rebr,true);
			end;
		end;
	  
	end; 	
return;
end;


global
updating function longint StockTakeVcRecordCheck(var record StockTakeVc STp,record StockTakeVc ST2p,Longint stat,longint long4)
begin
longint res;

logtext(0,"StockTakeVcRecordCheck");

res=0;

if(blank(STp.Location)) then begin
	RecordCheckError(36208,"",-1,"Location");
	res=-1;
	goto ENDStockTakeVcRecordCheck;
end;	

ENDStockTakeVcRecordCheck:;
StockTakeVcRecordCheck = res;
return;
end;

//  /api/Brand/Create - SendBrandToCRM
//  /api/Brand/Update - SendUpdateBrandToCRM
//  /api/Brand/GetCrmId

//  WebCreateConsultant
//  WebUpdateConsultant
//  /api/Consultant/Create - SednConsultantToCRM
//  /api/Consultant/Update - SednUpdateConsultantToCRM
//  /api/Consultant/Delete - SednDelConsultantToCRM 

//  WebCreateCustomer
//  WebUpdateCustomer
//  /api/Contact/Create - SendContactToCRM????????????
//  /api/Contact/Update - SendUpdateContactToCRM

//  /api/LoyaltyCard/Create - SendLoyaltyCardToCRM
//  /api/LoyaltyCard/Update - SendUpdateLoyaltyCardToCRM
//  /api/LoyaltyCard/GetCrmId

//  /api/LoyaltyProgram/Create - SendLoyaltyProgramToCRM
//  /api/LoyaltyProgram/Update - SendUpdateLoyaltyProgramToCRM
//  /api/LoyaltyProgram/GetCrmId

//  WebGetMarcCamp
//  WebCreateMarcCamp
//	/api/MarketingCampaign/Create
//  /api/MarketingCampaign/Update
//  /api/MarketingCampaign/GetCrmId

//  /api/ProductCategory/Create
//  /api/ProductCategory/Update
//  /api/ProductCategory/Update

//  /api/Shop/Create
//  /api/Shop/Update
//  /api/Shop/GetCrmId

//  /api/Visit/Create
//  /api/Visit/Update


//************************ E-COMMERCE



global webpublic procedure WebGetBTRxAllOrdersForMobileCheckuot()  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:18 25.03.2021
begin
	record ORVc ORr;
	row ORVc ORrw;
	integer i;
	boolean Comletedf, firstOR, TrHs;
	record INVc INr;
	record GlobalItemVc GIr;
	record SHVc SHr;
	row SHVc SHrw;
	vector val ItemQTY;
	
	SetCompany(29,false);
	
	ORr.OrdDate = AddDay(CurrentDate,-7);
	weboutstring("{\"orders\":[");
	firstOR = true;
	while (LoopKey("OrdDate",ORr,1,true)) begin
		Comletedf = true;
		if (ORr.Closed==1) then begin
			Comletedf = false;
		end;
		TrHs = true;
		SHr.OrderNr = ORr.SerNr;
		while (LoopKey("OrderKey",SHr,1,TrHs)) begin
			if (SHr.OrderNr!=ORr.SerNr) then begin TrHs = false; end;
			if (TrHs and SHr.OKFlag==1) then begin
				for (i=0;i<matrowcnt(SHr);i=i+1) begin
					matrowget(SHr,i,SHrw);
					ItemQTY[SHrw.SerialNr] = ItemQTY[SHrw.SerialNr] + SHrw.Ship;
				end;
			end;
		end;
		resetloop(SHr);
		for (i=0;i<matrowcnt(ORr);i=i+1) begin
			matrowget(ORr,i,ORrw);
			if (ORrw.Quant!=ORrw.ECReceived) then begin
				Comletedf = false;
			end;
			if (ORrw.Quant==ItemQTY[ORrw.SerialNr]) then begin
				Comletedf = false;
			end;
			
		end;
		if (Comletedf) then begin
			if (firstOR) then begin
				weboutstring("{" & chr(13) & chr(10));
				firstOR = false;
			end else begin
				weboutstring("," & chr(13) & chr(10));
				weboutstring("{" & chr(13) & chr(10));
			end;
			weboutstring("\"orderNo\":\"" & ORr.SerNr & "\"," & chr(13) & chr(10));
			weboutstring("\"payDeal\":\"" & ORr.PayDeal & "\"," & chr(13) & chr(10));
			weboutstring("\"loyCard\":\"" & ORr.ECLoyaltyCard & "\"," & chr(13) & chr(10));
			weboutstring("\"custCode\":\"" & ORr.CustCode & "\"," & chr(13) & chr(10));
			weboutstring("\"custName\":\"" & ORr.Addr0 & "\"," & chr(13) & chr(10));
			weboutstring("\"sum\":\"" & ORr.Sum4 & "\"," & chr(13) & chr(10));
			if (ORr.PayDeal=="O") then begin
				weboutstring("\"prepaymentSum\":\"" & ORr.Sum4 & "\"," & chr(13) & chr(10));
			end else begin
				weboutstring("\"prepaymentSum\":\"" & "0" & "\"," & chr(13) & chr(10));
			end;
			if (ORr.PayDeal!="O") then begin
				weboutstring("\"creditSum\":\"" & ORr.Sum4 & "\"," & chr(13) & chr(10));
			end else begin
				weboutstring("\"creditSum\":\"" & "0" & "\"," & chr(13) & chr(10));
			end;
			weboutstring("\"bonusSum\":\"" & "0" & "\"," & chr(13) & chr(10));
			weboutstring("\"items\":");
			weboutstring("[");
			if (matrowcnt(ORr)>0) then begin
				weboutstring("{" & chr(13) & chr(10));
			end;
			for (i=0;i<matrowcnt(ORr);i=i+1) begin
				matrowget(ORr,i,ORrw);
				if (i>0) then begin weboutstring("{" & chr(13) & chr(10)); end;
				weboutstring("\"itemQuantityType\":\"" & "0" & "\"," & chr(13) & chr(10));
				weboutstring("\"itemQuantity\":\"" & ORrw.Quant & "\"," & chr(13) & chr(10));
				weboutstring("\"itemPrice\":\"" & ORrw.Price & "\"," & chr(13) & chr(10));
				weboutstring("\"rebate\":\"" & ORrw.vRebate & "\"," & chr(13) & chr(10));
				weboutstring("\"itemSum\":\"" & ORrw.Sum & "\"," & chr(13) & chr(10));
				weboutstring("\"itemVatPercent\":\"" & round(ORrw.Sum * 18 / 118, defaultcurroundoff) & "\"," & chr(13) & chr(10));
				weboutstring("\"itemCodeType\":\"" & "0" & "\"," & chr(13) & chr(10));
				weboutstring("\"itemCode\":\"" & ORrw.GlobalItemArtCode & "\"," & chr(13) & chr(10));
				weboutstring("\"itemName\":\"" & ORrw.Spec & "\"" & chr(13) & chr(10));
				if (i<matrowcnt(ORr)-1) then begin weboutstring("}," & chr(13) & chr(10)); end;
			end;
			if (matrowcnt(ORr)>0) then begin
				weboutstring("}");
			end;
			weboutstring("]" & chr(13) & chr(10));
			weboutstring("}");
		end;
	end;
	weboutstring("]" & chr(13) & chr(10));
	weboutstring("}");
	ResetLoop(ORr);

return;
end; // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:18 25.03.2021






global webpublic procedure WebGetBTRxCurrentOrderForMobileCheckuot()  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:18 25.03.2021
begin
	record ORVc ORr;
	row ORVc ORrw;
	integer i;
	boolean Comletedf, firstOR, TrHs;
	record INVc INr;
	record GlobalItemVc GIr;
	record SHVc SHr;
	row SHVc SHrw;
	vector val ItemQTY;
	longint ORSerNr;
	
	SetCompany(29,false);
	
	ORSerNr = StringToLongInt(webgetarg("orderNo"));
	
	ORr.OrdDate = AddDay(CurrentDate,-7);
	weboutstring("{\"orders\":[");
	firstOR = true;
	while (LoopKey("OrdDate",ORr,1,true)) begin
		Comletedf = true;
		if (ORr.Closed==1) then begin
			Comletedf = false;
		end;
		TrHs = true;
		SHr.OrderNr = ORr.SerNr;
		while (LoopKey("OrderKey",SHr,1,TrHs)) begin
			if (SHr.OrderNr!=ORr.SerNr) then begin TrHs = false; end;
			if (TrHs and SHr.OKFlag==1) then begin
				for (i=0;i<matrowcnt(SHr);i=i+1) begin
					matrowget(SHr,i,SHrw);
					ItemQTY[SHrw.SerialNr] = ItemQTY[SHrw.SerialNr] + SHrw.Ship;
				end;
			end;
		end;
		resetloop(SHr);
		for (i=0;i<matrowcnt(ORr);i=i+1) begin
			matrowget(ORr,i,ORrw);
			if (ORrw.Quant!=ORrw.ECReceived) then begin
				Comletedf = false;
			end;
			if (ORrw.Quant==ItemQTY[ORrw.SerialNr]) then begin
				Comletedf = false;
			end;
			
		end;
		if (Comletedf) then begin
			if (firstOR) then begin
				weboutstring("{" & chr(13) & chr(10));
				firstOR = false;
			end else begin
				weboutstring("," & chr(13) & chr(10));
				weboutstring("{" & chr(13) & chr(10));
			end;
			weboutstring("\"orderNo\":\"" & ORr.SerNr & "\"," & chr(13) & chr(10));
			weboutstring("\"payDeal\":\"" & ORr.PayDeal & "\"," & chr(13) & chr(10));
			weboutstring("\"loyCard\":\"" & ORr.ECLoyaltyCard & "\"," & chr(13) & chr(10));
			weboutstring("\"custCode\":\"" & ORr.CustCode & "\"," & chr(13) & chr(10));
			weboutstring("\"custName\":\"" & ORr.Addr0 & "\"," & chr(13) & chr(10));
			weboutstring("\"sum\":\"" & ORr.Sum4 & "\"," & chr(13) & chr(10));
			if (ORr.PayDeal=="O") then begin
				weboutstring("\"prepaymentSum\":\"" & ORr.Sum4 & "\"," & chr(13) & chr(10));
			end else begin
				weboutstring("\"prepaymentSum\":\"" & "0" & "\"," & chr(13) & chr(10));
			end;
			if (ORr.PayDeal!="O") then begin
				weboutstring("\"creditSum\":\"" & ORr.Sum4 & "\"," & chr(13) & chr(10));
			end else begin
				weboutstring("\"creditSum\":\"" & "0" & "\"," & chr(13) & chr(10));
			end;
			weboutstring("\"bonusSum\":\"" & "0" & "\"," & chr(13) & chr(10));
			weboutstring("\"items\":");
			weboutstring("[");
			if (matrowcnt(ORr)>0) then begin
				weboutstring("{" & chr(13) & chr(10));
			end;
			for (i=0;i<matrowcnt(ORr);i=i+1) begin
				matrowget(ORr,i,ORrw);
				if (i>0) then begin weboutstring("{" & chr(13) & chr(10)); end;
				weboutstring("\"itemQuantityType\":\"" & "0" & "\"," & chr(13) & chr(10));
				weboutstring("\"itemQuantity\":\"" & ORrw.Quant & "\"," & chr(13) & chr(10));
				weboutstring("\"itemPrice\":\"" & ORrw.Price & "\"," & chr(13) & chr(10));
				weboutstring("\"rebate\":\"" & ORrw.vRebate & "\"," & chr(13) & chr(10));
				weboutstring("\"itemSum\":\"" & ORrw.Sum & "\"," & chr(13) & chr(10));
				weboutstring("\"itemVatPercent\":\"" & round(ORrw.Sum * 18 / 118, defaultcurroundoff) & "\"," & chr(13) & chr(10));
				weboutstring("\"itemCodeType\":\"" & "0" & "\"," & chr(13) & chr(10));
				weboutstring("\"itemCode\":\"" & ORrw.GlobalItemArtCode & "\"," & chr(13) & chr(10));
				weboutstring("\"itemName\":\"" & ORrw.Spec & "\"" & chr(13) & chr(10));
				if (i<matrowcnt(ORr)-1) then begin weboutstring("}," & chr(13) & chr(10)); end;
			end;
			if (matrowcnt(ORr)>0) then begin
				weboutstring("}");
			end;
			weboutstring("]" & chr(13) & chr(10));
			weboutstring("}");
		end;
	end;
	weboutstring("]" & chr(13) & chr(10));
	weboutstring("}");
	ResetLoop(ORr);

return;
end; // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 13:18 25.03.2021








global webpublic updating procedure WebCreateOrder()
begin
	area getpost;
	string 255 filename;
	json datajson;
	record ORVc ORr,OldORr;
	row ORVc ORrw,OldORrw;
	string 255 uname,pn,ph,em,sn,bitrono,pay,stat,city,street,house,apart;
	string 155 id,sum;
	array string 255 prod,prodn,quant,suma,code;
	integer i,j,wn,y;
	longint a;
	string 255 hex,out,warning,errstr,loyaltycard,namesname;
	boolean UPDf,chsum, TrHs, IdentClientf,TrHs2;
	record AccBlock ARb;
	record CUVc CUr;
	record ItemDuplicatesVc IDr;
	record GlobalItemVc GIr, DupGIr;
	row GlobalItemVc GIrw, DupGIrw;
	record LoyaltyCardVc LoyCardr;
	record GlobalItemSetVc GISr;

	
	BlockLoad(ARb);
	
	SetCompany(29,false);
	logtext(0,"WebCreateOrder");
	webgetpostdata(getpost);
	//AddfiletoArea("C:/Users/Anton/Desktop/BitrixOrderlast.txt",getpost,false);
	if (!fileexists("getpost.txt")) then begin
		CreateFile("getpost.txt");
	end;
	WriteAreaToFile(getpost,"getpost.txt",0);
	CloseFile;
	a = GetArealength(getpost);
	datajson = ParseJsonArea(getpost);
	filename = "Orders/Order" & datetostring(currentdate,"YYYYMMDD") & TimeToString(currenttime,"HHMMSS",false) & ".txt";
	writeareatofile(getpost,filename,0);
	WebOutString("{\"result\":\"ok\"}");
	uname = JSONGet(datajson,"user[0]/name");
	pn = JSONGet(datajson,"user[0]/profile_name");
	ph = JSONGet(datajson,"user[0]/phone");
	em = JSONGet(datajson,"user[0]/email");
	sn = JSONGet(datajson,"user[0]/surname");
	city = JSONGet(datajson,"user[0]/city");
	street = JSONGet(datajson,"user[0]/street");
	house = JSONGet(datajson,"user[0]/house");
	apart = JSONGet(datajson,"user[0]/apart");
	
	bitrono = JSONGet(datajson,"order[0]/id");
	uname = ParseHEX(uname);
	sn = ParseHEX(sn);
	pn = ParseHEX(pn);
	city = ParseHEX(city);
	street = ParseHEX(street);
	house = ParseHEX(house);
	apart = ParseHEX(apart);
	namesname = uname & " " & sn;
	id = JSONGet(datajson,"order[0]/id");
	sum = JSONGet(datajson,"order[0]/summ");
	pay = JSONGet(datajson,"order[0]/pay");
	stat = JSONGet(datajson,"order[0]/status");
	loyaltycard = JSONGet(datajson,"loyaltycard");
	stat = ParseHEX(stat);
	logtext(0,stat);
	if(nonblank(id))then begin
		for(i=0;i<JSONCountChildren(datajson,"basket_items");i=i+1) begin
			prod[i] = JSONGet(datajson,"basket_items[0]/["  & i & "]/product_id");
			code[i] = JSONGet(datajson,"basket_items[0]/["  & i & "]/code");
			prodn[i] = JSONGet(datajson,"basket_items[0]/["  & i & "]/name");
			prodn[i] = UrlDecode(prodn[i]);
			prodn[i] = ParseHEX(prodn[i]);
			quant[i] = JSONGet(datajson,"basket_items[0]/["  & i & "]/quantity");
			suma[i] = JSONGet(datajson,"basket_items[0]/["  & i & "]/sum");
		end;
		ORr.SerNr = bitrono;
		if(!ReadFirstMain(ORr,1,true))then begin
			RecordNew(ORr);
			//ORr.SerNr = NextSerNr("ORVc",CurrentDate,-1,false,"");	 // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger11:27 15.02.2019	
			ORr.SerNr = bitrono; // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger11:27 15.02.2019
			ORr.Phone = ph;
			ORr.eMail = em;
			y = 0;
			for(i=0;i<JSONCountChildren(datajson,"basket_items");i=i+1) begin
				GISr.SetGlCode = code[i];
				if (ReadFirstMain(GISr,1,true)) then begin
					TrHs2 = true;
					GISr.SetGlCode = code[i];
					while (loopmain(GISr,1,TrHs2)) begin
						if (GISr.SetGlCode!=code[i]) then begin TrHs2 = false; end;
						if (TrHs2) then begin
							ORrw.stp = 1;
							if (left(GISr.SetUnitGlCode,3)=="CP_")then begin
								ORrw.GlobalItemArtCode = right(GISr.SetUnitGlCode,(len(GISr.SetUnitGlCode) - 3));
							end else begin
								GIr.Code = GISr.SetUnitGlCode;
								if (ReadFirstMain(GIr,1,true)) then begin
									TrHs = true;
									IDr.OrigCode = GIr.HansaCode;
									while(loopkey("OrigCode",IDr,1,TrHs)) begin
										if (IDr.OrigCode!=GIr.HansaCode) then begin TrHs = false; end;
										if (TrHs and IDr.OrigBrandCode==GIr.BPIBrand) then begin
											DupGIr.Code = IDr.DupBrandCode  & "_" & IDr.DupCode;
											if (ReadFirstMain(DupGIr,1,true)) then begin
												for (j=0;j<matrowcnt(DupGIr);j=j+1) begin
													matrowget(DupGIr,j,DupGIrw);
													if (DupGIrw.Instock>0) then begin
														j = matrowcnt(DupGIr);
														TrHs = false;
														GISr.SetUnitGlCode = DupGIr.Code;
													end;
												end;
											end;
										end;
									end;
									ResetLoop(IDr);
								end;
								ORrw.GlobalItemArtCode = GISr.SetUnitGlCode;
							end;
							ORrw.Quant = GISr.SUQuant * StringToVal(quant[i],M4Val);
							ORrw.Price = GIr.Price - GIr.Price / 100 * GIr.Rebate;
							ORrw.Sum = ORrw.Price * ORrw.Quant;
							ORrw.SalesAcc = ARb.DomSalesAcc;
							MatRowPut(ORr,i + y,ORrw);
							y = y + 1;
						end;
					end;
					resetloop(GISr);
				end else begin
					ORrw.stp = 1;
					if (left(code[i],3)=="CP_")then begin
						ORrw.GlobalItemArtCode = right(code[i],(len(code[i]) - 3));
					end else begin
						GIr.Code = code[i];
						if (ReadFirstMain(GIr,1,true)) then begin
							TrHs = true;
							IDr.OrigCode = GIr.HansaCode;
							while(loopkey("OrigCode",IDr,1,TrHs)) begin
								if (IDr.OrigCode!=GIr.HansaCode) then begin TrHs = false; end;
								if (TrHs and IDr.OrigBrandCode==GIr.BPIBrand) then begin
									DupGIr.Code = IDr.DupBrandCode  & "_" & IDr.DupCode;
									if (ReadFirstMain(DupGIr,1,true)) then begin
										for (j=0;j<matrowcnt(DupGIr);j=j+1) begin
											matrowget(DupGIr,j,DupGIrw);
											if (DupGIrw.Instock>0) then begin
												j = matrowcnt(DupGIr);
												TrHs = false;
												code[i] = DupGIr.Code;
											end;
										end;
									end;
								end;
							end;
							ResetLoop(IDr);
						end;
						ORrw.GlobalItemArtCode = code[i];
					end;
					ORrw.Quant = StringToVal(quant[i],M4Val);
					ORrw.Sum = StringToVal(suma[i],M4Val);
					ORrw.Price = ORrw.Sum/ORrw.Quant;
					ORrw.SalesAcc = ARb.DomSalesAcc;
					MatRowPut(ORr,i + y,ORrw);
				end;
			end;
			IdentClientf = false;
			if (blank(ORr.ECLoyaltyCard) and nonblank(loyaltycard)) then begin
				LoyCardr.CustCode = loyaltycard;
				if (ReadFirstKey("CustCode",LoyCardr,1,true)) then begin
					ORr.ECLoyaltyCard = LoyCardr.SerNr;
					ORr.ECCUCode = LoyCardr.CustCode;
					IdentClientf = true;
				end else begin
					LoyCardr.SerNr = loyaltycard;
					if (ReadFirstMain(LoyCardr,1,true)) then begin
						ORr.ECLoyaltyCard = LoyCardr.SerNr;
						ORr.ECCUCode = LoyCardr.CustCode;
						IdentClientf = true;
					end;
				end;	
			end;
			
			if (!IdentClientf) then begin
				CUr.Code = "EC_" & ph;
				if (ReadFirstMain(CUr,1,true)) then begin
					if (CUr.blockedFlag==0) then begin
						ORr.ECCUCode = CUr.Code;
						IdentClientf = true;
					end else begin
						CUr.Code = "EC_" & ph;
						TrHs2 = true;
						while (loopmain(CUr,1,TrHs2)) begin
							if (CUr.Code!="EC_" & ph) then begin TrHs2 = false; end;
							if (TrHs2 and CUr.blockedFlag==0) then begin
								ORr.ECCUCode = CUr.Code;
								IdentClientf = true;
								TrHs2 = false;
							end;
						end;
						ResetLoop(CUr);
					end;
				end;
			end;
			if (!IdentClientf) then begin
				if (left(ph,6)=="+99412") then begin
					CUr.Phone = ph;
					if (ReadFirstKey("Phone",CUr,1,true)) then begin
						if (CUr.blockedFlag==0) then begin
							ORr.ECCUCode = CUr.Code;
							IdentClientf = true;
						end else begin
							CUr.Phone = ph;
							TrHs2 = true;
							while (loopkey("Phone",CUr,1,TrHs2)) begin
								if (CUr.Phone!=ph) then begin TrHs2 = false; end;
								if (TrHs2 and CUr.blockedFlag==0) then begin
									ORr.ECCUCode = CUr.Code;
									IdentClientf = true;
									TrHs2 = false;
								end;
							end;
							ResetLoop(CUr);
						end;
					end;
				end;
			end;
			if (!IdentClientf) then begin
				if (left(ph,6)=="+99450" or left(ph,6)=="+99451" or left(ph,6)=="+99455" or left(ph,6)=="+99470" or left(ph,6)=="+99477") then begin
					CUr.Mobile = ph;
					if (ReadFirstKey("Mobile",CUr,1,true)) then begin
						if (CUr.blockedFlag==0) then begin
							ORr.ECCUCode = CUr.Code;
							IdentClientf = true;
						end else begin
							CUr.Mobile = ph;
							TrHs2 = true;
							while (loopkey("Mobile",CUr,1,TrHs2)) begin
								if (CUr.Mobile!=ph) then begin TrHs2 = false; end;
								if (TrHs2 and CUr.blockedFlag==0) then begin
									ORr.ECCUCode = CUr.Code;
									IdentClientf = true;
									TrHs2 = false;
								end;
							end;
							ResetLoop(CUr);
						end;
					end;
				end;
			end;
			if (!IdentClientf) then begin
				if (left(ph,6)=="+99450" or left(ph,6)=="+99451" or left(ph,6)=="+99455" or left(ph,6)=="+99470" or left(ph,6)=="+99477") then begin
					CUr.AltPhone = ph;
					if (ReadFirstKey("AltPhone",CUr,1,true)) then begin
						if (CUr.blockedFlag==0) then begin
							ORr.ECCUCode = CUr.Code;
							IdentClientf = true;
						end else begin
							CUr.AltPhone = ph;
							TrHs2 = true;
							while (loopkey("AltPhone",CUr,1,TrHs2)) begin
								if (CUr.AltPhone!=ph) then begin TrHs2 = false; end;
								if (TrHs2 and CUr.blockedFlag==0) then begin
									ORr.ECCUCode = CUr.Code;
									IdentClientf = true;
									TrHs2 = false;
								end;
							end;
							ResetLoop(CUr);
						end;
					end;
				end;
			end;
			if (!IdentClientf) then begin
				CUr.eMail = em;
				if (ReadFirstKey("eMail",CUr,1,true)) begin
					if (CUr.blockedFlag==0) then begin
						ORr.ECCUCode = CUr.Code;
						IdentClientf = true;
					end else begin
						CUr.eMail = em;
						TrHs2 = true;
						while (loopkey("eMail",CUr,1,TrHs2)) begin
							if (CUr.eMail!=em) then begin TrHs2 = false; end;
							if (TrHs2 and CUr.blockedFlag==0) then begin
								ORr.ECCUCode = CUr.Code;
								IdentClientf = true;
								TrHs2 = false;
							end;
						end;
						ResetLoop(CUr);
					end;
				end;
			end;
			if (!IdentClientf) then begin
				recordNew(CUr);
				CUr.Code =  "EC_" & ph;
				CUr.Name = namesname;
				if (left(ph,6)=="+99412") then begin
					CUr.Phone = ph;
				end;
				if (left(ph,6)=="+99450" or left(ph,6)=="+99451" or left(ph,6)=="+99455" or left(ph,6)=="+99470" or left(ph,6)=="+99477") then begin
					CUr.Mobile = ph;
				end;
				CUr.eMail = em;
				CUr.CRMLName = sn;
				CUr.CRMName = uname;
				CUr.DelAddr0 = city;
				CUr.DelAddr1 = street;
				CUr.DelAddr2 = house;
				CUr.DelAddr3 = apart;
				CUr.CreateLocation = "MAIN";
				CUr.PLCode = "RRP";
				CUr.PayDeal = "PP";
				CUr.RebCode = "0%";
				recordStore(CUr,true);
				ORr.ECCUCode = CUr.Code;
			end;
			
		
			ORr.CustCode = "NOFULLNAME";
			ORr.Addr0 = pn & " " & sn;
			if(pay=="false")then begin
				ORr.PayDeal = "PP";
			end else begin
				ORr.PayDeal = "O";
			end;
			ORr.InvBeforeShip = 1;
			ORr.SalesMan = "ECOMMERCE";
			ORr.CustOrdNr = bitrono;
			RecordInsert(ORr,true);
		end;
		RecordCopy(OldORr,ORr);
		ORr.Comment = stat;
		switch(stat) begin
			case "CA": ORr.Comment = "Отменен";
			case "CN": ORr.Comment = "Подтвержден";
			case "DF": ORr.Comment = "Доставлен";
			case "DN": ORr.Comment = "В обработке";
			case "F": ORr.Comment = "Выполнен";
			case "N": ORr.Comment = "Новый";
			case "P": ORr.Comment = "Оплачен, формируется к отправке";
			case "PP": ORr.Comment = "Выкуплен частично";
		end;
		ORr.WEBReservOnStock = 1;
		if(stat==USetStr(36214))then begin
			if(pay=="false")then begin
				ORr.PayDeal = "PP";
				ORr.OrderConfirmed = 1;
			end else begin
				ORr.PayDeal = "O";
				ORVc_PastePayDeal(ORr);
				ORr.OrderConfirmed = 1;
			end;
		end;
		if(stat==USetStr(36215))then begin
			ORr.Closed = 1;
		end;
		ORSumup(ORr);
		RecordUpdate(OldORr,ORr,true);
		//CreateGlobalIVFromWebOR(ORr);
		WebOutString("{\"result\":\"ok\"}");
	end else begin
		WebOutString("{\"result\":\"error: blank order id\"}");
	end;
return;
end;


global webpublic updating procedure WebUpdateOrder()
begin
	area getpost;
	string 255 filename;
	
	logtext(0,"WebUpdateOrder");
	webgetpostdata(getpost);
	filename = "OrdersUpd/Order" & datetostring(currentdate,"YYYYMMDD") & TimeToString(currenttime,"HHMMSS",false) & ".txt";
	writeareatofile(getpost,filename,0);
	logtext(0,filename);
	WebOutString("{\"result\":\"ok\"}");
	
return;
end;


global webpublic updating procedure WebCheckRebsMarcCamp()
begin
	record RebVc Rebr,oldRebr;
	record MarcCampVc MCr;
	record MyRebVc MyRebr,oldMyRebr;
	integer i,CompQty;
	record CompaniesBlock Compb;
	row CompaniesBlock Comprw;
	boolean TrHs;
	record RLinkVc RLr;
	
	SetCompany(1,false);
	BlockLoad(Compb);
	
	
	CompQty = matrowcnt(Compb);
	
	for (i=0;i<CompQty;i=i+1)begin
		matrowget(Compb,i,Comprw);
		if(Comprw.ActiveStatus==0 and (!CompanyIsJWLikeCompany(i+1) or i+1==3) and i+1!=10)then begin
			SetCompany(i+1,false);
			resetloop(Rebr);
			Rebr.Code = "0%";
			Rebr.FromDate = stringtodate("1/1/2019");
			TrHs = true;
			while(loopmain(Rebr,2,TrHs))begin
				if(Rebr.Code!="0%")then begin TrHs = false; end;
				
				if(TrHs)then begin
					recordnew(MCr);
					ReadRecordLink(Rebr,1,MCr,RLr);
					logtext(0,"Compnr " & i+1);
					logtext(0,Rebr.Code & "  " & Rebr.FromDate & "-" & Rebr.ToDate & " -> " & MCr.Code & "  " & MCr.CRMID);
					if(blank(MCr.Code))then begin
						recordcopy(oldRebr,Rebr);
						recordupdate(oldRebr,Rebr,true);
					end;
				end;
			end;
			
			resetloop(MyRebr);
			TrHs = true;
			MyRebr.Code = "";
			while(loopmain(MyRebr,2,TrHs))begin
				if(MyRebr.FromDate>stringtodate("1/1/2019"))then begin
					recordnew(MCr);
					ReadRecordLink(MyRebr,1,MCr,RLr);
					logtext(0,"Compnr " & i+1);
					logtext(0,MyRebr.Code & "  " & MyRebr.FromDate & "-" & MyRebr.ToDate & " -> " & MCr.Code & "  " & MCr.CRMID);
					if(blank(MCr.Code))then begin
						recordcopy(oldMyRebr,MyRebr);
						recordupdate(oldMyRebr,MyRebr,true);
					end;
				end;
			end;
			
			
			
		end;
	end;
	
return;
end;

global
 webpublic updating procedure WebSyncCustomerSales()
 begin
 record CUVc CUr;
 record IVVc IVr;
 integer i,CompQty;
 string 100 CustCode;
 record CompaniesBlock Compb;
 row CompaniesBlock Comprw;
 boolean TrHs,TrHsCU,testf;
 string 255 host,tstr,nonce,opaque,page;
LongInt port,pos,mtrw,cnter;
	record WebReportChBlock WRChb;
	Area req,reply;
	json jsresponse;
 	
 	blockload(WRChb);		
 	BlockLoad(Compb);
	SetCompany(1,false);
	CompQty = matrowcnt(Compb);
	CustCode = WebGetArg("CustCode");
	TrHsCU = true;
	CUr.Code = CustCode;
	while(loopmain(CUr,1,TrHsCU))begin
		if(CUr.Code!=CustCode)then begin TrHsCU = false; end;
		testf = true;
		if(cnter>5000)then begin TrHsCU = false; testf = false; end;
		if(CUr.CUType==0)then begin testf = false; end;
		
		if(testf)then begin
		
			/*if(blank(CUr.CRMid) or CUr.CRMid=="null")then begin
				SendWebRequest(host,port,-1,false,"GET","/api/Contact/GetCrmId?hansaId=" & UrlEncode(CUr.Code),"application/json","",false,req,reply,5);
				jsresponse = ParseJSONArea(reply);
				if(nonblank(MyJSGet(jsresponse,"result")))then begin
					CUr.CRMid = MyJSGet(jsresponse,"result");
					logtext(0,"Updated CUr.CRMid " & CUr.CRMid);
					recordstore(CUr,true);
					cnter = cnter + 1;
				end;
			end;
		
			logtext(0,"Export to CRM Customer" & CUr.Code);*/
			if(CUr.Code!="NONAME" and CUr.Code!="NOFULLNAME")then begin
				for (i=0;i<CompQty;i=i+1)begin
					matrowget(Compb,i,Comprw);
					if(Comprw.ActiveStatus==0)then begin
						SetCompany(i+1,false)
						IVr.CustCode = CUr.Code;
						IVr.InvDate = stringtodate("01/08/2018");
						TrHs = true;
						while(LoopKey("CustDate",IVr,2,TrHs)) begin
							if(IVr.CustCode!=CUr.Code) then begin TrHs = false; end;
							If(IVr.OKFlag!=0 and TrHs and IVr.Invalid==0) then begin
								//if(fileexists("demoserver"))then begin
									if(blank(IVr.CRMid))then begin
										logtext(0,IVr.InvDate & "SerNr - " & IVr.SerNr & " Company-" & CurrentCompany);
										SendIVVisitToCRM(IVr);
										if(nonblank(IVr.CRMid))then begin
											recordstore(IVr,true);
										end;
									end else begin
										logtext(0,IVr.InvDate & "SerNr - " & IVr.SerNr & " Company-" & CurrentCompany);
										SendUpdateIVVisitToCRM(IVr);
									end;
								//end;						
							end;	
						end;
						ResetLoop(IVr);
					end;	
				end;
			end;
		end;
	end;
 return;
 end;
 
global
 updating procedure SyncAllIVtoCRM()
 begin
	record CUVc CUr;
	record IVVc IVr;
	integer i,CompQty;
	string 100 CustCode;
	record CompaniesBlock Compb;
	row CompaniesBlock Comprw;
	boolean TrHs,TrHsCU,testf;
	string 255 host,tstr,nonce,opaque,page;
	LongInt port,pos,mtrw,cnter,LastComp,LastIVVc,StartComp,StartIV,keys;
	record WebReportChBlock WRChb;
	Area req,reply;
	json jsresponse;
	area Ar, OldAr;
 	
 	blockload(WRChb);		
 	BlockLoad(Compb);
	
	host = "192.168.3.11";
	page = "/api/LoyaltyCard/Update";
	port = 8088;
	logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
	if(fileexists("demoserver"))then begin
		port = 8087;
		logtext(0,"newport 8087");
		testf = true;
	end;
	if (true) then begin
		addfiletoarea("LASTSYNCCRMPROCESS.txt",OldAr,0);
		StartComp = StringToLongInt(GetLineFromArea(OldAr,0));
		logtext(0,"StartComp " & StartComp);
		if (StartComp<1) then begin StartComp = 1; end;
		StartIV = StringToLongInt(GetLineFromArea(OldAr,1));
		logtext(0,"StartIV " & StartIV);
		createfile("SYNCCRMPROCESS");
		
		TrHsCU = true;
		CompQty = matrowcnt(Compb);
		for(i=StartComp-1;i<CompQty;i=i+1) begin
			matrowget(Compb,i,Comprw);
			if(Comprw.ActiveStatus==0 and (i+1)!=10)then begin
				SetCompany(i+1,false);
				IVr.InvDate = stringtodate("30/03/2019");
				keys = 1;
				if (CurrentCompany==StartComp and fileexists("LASTSYNCCRMPROCESS.txt")) then begin
					IVr.SerNr = StartIV;
					keys = 2;
				end;
				TrHsCU = true;
				while(loopBackkey("InvDate",IVr,keys,TrHsCU))begin
					logtext(0,IVr.SerNr);
					testf = true;
					If(IVr.OKFlag==0 or IVr.Invalid>0 or (IVr.SerNr>StartIV and CurrentCompany==StartComp)) then begin  testf = false; end;
					if(fileexists("stop"))then begin  TrHsCU = false; testf = false; end;
					if(IVr.InvDate < stringtodate("01/01/2018"))then begin  TrHsCU = false; testf = false; end;
					if (gethour(currenttime)==0 and getminute(currenttime)>=25) then begin TrHsCU = false; testf = false; end;
					if(testf)then begin
						if(nonblank(IVr.CRMid))then begin
							logtext(0,IVr.InvDate & "SerNr - " & IVr.SerNr & " Company-" & CurrentCompany);
							LastComp = i+1;
							LastIVVc = IVr.SerNr;
							SendUpdateIVVisitToCRM(IVr);
							if(nonblank(IVr.CRMid))then begin
								recordstore(IVr,true);
								LastComp = i+1;
								LastIVVc = IVr.SerNr;
								cnter = cnter + 1;
							end;
						end else begin
							logtext(0,IVr.InvDate & "SerNr - " & IVr.SerNr & " Company-" & CurrentCompany);
							LastComp = i+1;
							LastIVVc = IVr.SerNr;
							SendUpdateIVVisitToCRM(IVr);
							if(nonblank(IVr.CRMid))then begin
								recordstore(IVr,true);
								LastComp = i+1;
								LastIVVc = IVr.SerNr;
								cnter = cnter + 1;
							end;
						end;
					end;
				end;
				resetloop(IVr);
			end;
		end;
		AddTextToArea	(LastComp & chr(10) & LastIVVc,Ar);
		Delete_File("LASTSYNCCRMPROCESS.txt");
		Delete_File("SYNCCRMPROCESS");
		createfile("LASTSYNCCRMPROCESS.txt");
		WriteAreaToFile	(Ar,"LASTSYNCCRMPROCESS.txt",0);
		runprogram("chmod","-R a+rw LASTSYNCCRMPROCESS.txt");
	end;
 return;
 end;
 
 global
 webpublic updating procedure WebSyncAllIVtoCRM()
 begin
 record CUVc CUr;
 record IVVc IVr;
 integer i,CompQty;
 string 100 CustCode;
 record CompaniesBlock Compb;
 row CompaniesBlock Comprw;
 boolean TrHs,TrHsCU,testf;
 string 255 host,tstr,nonce,opaque,page;
LongInt port,pos,mtrw,cnter;
	record WebReportChBlock WRChb;
	Area req,reply;
	json jsresponse;
 	
 	blockload(WRChb);		
 	BlockLoad(Compb);

	logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
	if(fileexists("demoserver"))then begin
	 port = 8087;
		logtext(0,"newport 8087");
	end;
	
	TrHsCU = true;
	CompQty = matrowcnt(Compb);
	for(i=0;i<CompQty;i=i+1) begin
			matrowget(Compb,i,Comprw);
			if(Comprw.ActiveStatus==0 and (i+1)!=10)then begin
				SetCompany(i+1,false);
				IVr.InvDate = stringtodate("01/02/2019");
				while(loopkey("InvDate",IVr,1,TrHsCU))begin
					logtext(0,IVr.SerNr);
					testf = true;
					If(IVr.OKFlag==0 or IVr.Invalid>0) then begin logtext(0,"4"); testf = false; end;
					if(fileexists("stop"))then begin logtext(0,"5");  TrHsCU = false; testf = false; end;
					if(IVr.InvDate > stringtodate("01/03/2019"))then begin  TrHsCU = false; testf = false; end;
					if(testf)then begin
						if(nonblank(IVr.CRMid))then begin
							logtext(0,IVr.InvDate & "SerNr - " & IVr.SerNr & " Company-" & CurrentCompany);
							SendUpdateIVVisitToCRM(IVr);
							if(nonblank(IVr.CRMid))then begin
								recordstore(IVr,true);
								cnter = cnter + 1;
							end;
						end else begin
							logtext(0,IVr.InvDate & "SerNr - " & IVr.SerNr & " Company-" & CurrentCompany);
							SendUpdateIVVisitToCRM(IVr);
							if(nonblank(IVr.CRMid))then begin
								recordstore(IVr,true);
								cnter = cnter + 1;
							end;
						end;
					end;
				end;
				resetloop(IVr);
			end;
	end;
 return;
 end;
 
 global
 webpublic updating procedure WebSyncUsersToCRM()
 begin
 record CUVc CUr;
 record IVVc IVr;
 integer i,CompQty;
 string 100 CustCode;
 record CompaniesBlock Compb;
 row CompaniesBlock Comprw;
 boolean TrHs,TrHsCU,testf;
 string 255 host,tstr,nonce,opaque,page;
LongInt port,pos,mtrw,cnter;
	record WebReportChBlock WRChb;
	Area req,reply;
	json jsresponse;
	record UserVc USr;
 	
 	blockload(WRChb);		
 	BlockLoad(Compb);
	
	host = "192.168.3.11";
	page = "/api/LoyaltyCard/Update";
	port = 8088;
	logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
	if(fileexists("demoserver"))then begin
	 port = 8087;
		logtext(0,"newport 8087");
	end;
	SetCompany(1,false);
	logtext(0,"WebSyncUsersToCRM");
	TrHsCU = true;
	CompQty = matrowcnt(Compb);
	for (i=0;i<CompQty;i=i+1)begin
		matrowget(Compb,i,Comprw);
		if(Comprw.ActiveStatus==0 and (i+1)!=10)then begin
			SetCompany(i+1,false);
			if(true)then begin
				TrHs = true;
				USr.Code = "";
				while(LoopMain(USr,2,TrHs)) begin
					logtext(0,"WebSyncUsersToCRM " & USr.Code);
					if(blank(USr.CRMid) and USr.IsSalesMan>0)then begin
						if(blank(USr.CRMid))then begin
							logtext(0,USr.Code & "SerNr - " & CurrentCompany);
							SednUpdateConsultantToCRM(USr);
							if(nonblank(USr.CRMid))then begin
								recordstore(USr,true);
							end;
						end;
					end;
				end;
				ResetLoop(USr);
			end;
		end;	
	end;
	
 return;
 end;
 
  
global
procedure RDBCheckAllDataMn()
begin
  Integer wn,i,rwcnt;
  record RDBRegsBlock RDBr;
  row RDBRegsBlock RDBrw;
  boolean mailed;
  area RDBStatus,a_req,request,text,replyPr;
  string 100 host,page;
  integer port;
  
  BlockLoad(RDBr);
  rwcnt = MatRowCnt(RDBr);
  
  addtexttoarea("Регистр",RDBStatus);
  addtexttoarea(chr(9),RDBStatus);
  addtexttoarea("Статус",RDBStatus);
  addtexttoarea(chr(13) & chr(10),RDBStatus);
  
  for (i = 0; i<rwcnt; i = i + 1) begin
  	matrowget(RDBr,i,RDBrw);
  	if(RDBrw.Valid==0)then begin
  		mailed = true;
  	end;
  	logtext(0,"RDBCheckAllDataMn i " & i);
  	logtext(0,"RDBrw.RegCode " & RDBrw.RegCode);
  	logtext(0,"RDBrw.Valid " & RDBrw.Valid);
  	//logtext(0,StringFromStringSet(-3,RDBrw.RegCode));
  	addtexttoarea(RDBrw.RegCode,RDBStatus);
		addtexttoarea(chr(9),RDBStatus);
		if(RDBrw.Valid==0)then begin
			addtexttoarea(chr(9) & chr(9) & chr(9) & "Не синхронизирован",RDBStatus);
		end else begin
			addtexttoarea(chr(9) & chr(9) & chr(9) & "Ок",RDBStatus);
		end;
		addtexttoarea(chr(13) & chr(10),RDBStatus);
  	
  	
  end;
	
	writeareatofile(RDBStatus,"RDBStatus.txt",0);
	
	
	if(mailed)then begin
		setareazerosize(text);
		addtexttoarea("{",text);
		addtexttoarea("\"host\":\"smtp.gmail.com\",",text);
		addtexttoarea("\"port\":465,",text);
		addtexttoarea("\"secure\":true,",text);
		addtexttoarea("\"user\":\"IDReporSender@gmail.com\",",text);
		addtexttoarea("\"pass\":\"c2h5ohc2h5oh\",",text);
		addtexttoarea("\"from\":\"IDReportSender@gmail.com\",",text);
		addtexttoarea("\"to\":\"" & "kramar.alexandr@gmail.com,r.bocharov@italdizain.az,tohas1994@outlook.com,vadim.garkusha@bpi.in.ua,erp@italdizain.az" & "\",",text);
		addtexttoarea("\"subject\":\"" & "Hansa RDB Status problem." & "\",",text);
		addtexttoarea("\"plaintext\":\"notblank\",",text);			
		addtexttoarea("\"filename\":\"" & "RDBStatus.txt" & "\",",text);			
		addtexttoarea("\"path\":\"/usr/local/bin/StandardERPServer/" & "RDBStatus.txt" & "\"",text);
		addtexttoarea("}",text);
	
		SendWebRequest("127.0.0.1",1071,-1,false,"POST","/sendMail","application/json","",false,text,replyPr,5);
  end;
  return;
end;

global webpublic procedure WebRDBCheckAllDataMn()
begin
	
	logtext(0,"WebRDBCheckAllDataMn");
	setcompany(1,false);
	RDBCheckAllDataMn;

return;
end;

global
updating procedure RDBBuildAllDataMn()
begin
  Integer wn,i,rwcnt;
  record RDBRegsBlock RDBr;
  row RDBRegsBlock RDBrw;
  
  BlockLoad(RDBr);
  rwcnt = MatRowCnt(RDBr);
  
  for (i = 0; i<rwcnt; i = i + 1) begin
  	matrowget(RDBr,i,RDBrw);
  	Logtext(0,"RDBBuildAllDataMn " & RDBrw.RegCode);
  	if(fileexists("stop")==false)then begin
			RDBDoBuildData(i);
    end else begin
    	logtext(0,"stopfile exist");
    end;
  end;

  
  return;
end;


global webpublic updating procedure WebCheckUserID()
begin
	record CUVc CUr;
 record IVVc IVr;
 integer i,CompQty;
 string 100 CustCode;
 record CompaniesBlock Compb;
 row CompaniesBlock Comprw;
 boolean TrHs,TrHsCU,testf;
 string 255 host,tstr,nonce,opaque,page;
LongInt port,pos,mtrw,cnter;
	record WebReportChBlock WRChb;
	Area req,reply;
	json jsresponse;
	record UserVc USr;
	vector boolean crmifflag;
	vector string 50 crmiduser;
	array string 100 acrmid;
 	
 	blockload(WRChb);		
 	BlockLoad(Compb);
	
	host = "192.168.3.11";
	page = "/api/LoyaltyCard/Update";
	port = 8088;
	logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
	if(fileexists("demoserver"))then begin
	 port = 8087;
		logtext(0,"newport 8087");
	end;
	logtext(0,"WebSyncUsersToCRM");
	TrHsCU = true;
	CompQty = matrowcnt(Compb);
	for (i=0;i<CompQty;i=i+1)begin
		matrowget(Compb,i,Comprw);
		if(Comprw.ActiveStatus==0 and (i+1)!=10)then begin
			SetCompany(i+1,false);
			if(true)then begin
				TrHs = true;
				USr.Code = "";
				while(LoopMain(USr,1,TrHs)) begin
					if(nonblank(USr.CRMid))then begin
						if(crmifflag[USr.CRMid]==false)then begin
							crmifflag[USr.CRMid] = true;
							acrmid[acrmid.length] = USr.CRMid;
						end;
						if(blank(crmiduser[USr.CRMid]))then begin
							crmiduser[USr.CRMid] = USr.Code;
						end else begin
							if(crmiduser[USr.CRMid]!=USr.Code)then begin
								logtext(0,"Error CRM ID " & crmiduser[USr.CRMid] & " exist in " & USr.Code & " in company " & Comprw.CompName);
								if(Comprw.CompName=="Idea")then begin
									USr.CRMid = "";
									recordstore(USr,true);
								end;
							end;
						end;
					end;
				end;
				ResetLoop(USr);
			end;
		end;	
	end;

return;
end;

global webpublic updating procedure WebCheckCUID()
begin
	record CUVc CUr;
 record IVVc IVr;
 integer i,CompQty;
 string 100 CustCode;
 record CompaniesBlock Compb;
 row CompaniesBlock Comprw;
 boolean TrHs,TrHsCU,testf;
 string 255 host,tstr,nonce,opaque,page;
LongInt port,pos,mtrw,cnter;
	record WebReportChBlock WRChb;
	Area req,reply;
	json jsresponse;
	record UserVc USr;
	vector boolean crmifflag;
	vector string 50 crmiduser;
	array string 100 acrmid;
 	
 	blockload(WRChb);		
 	BlockLoad(Compb);
	
	host = "192.168.3.11";
	page = "/api/LoyaltyCard/Update";
	port = 8088;
	logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
	if(fileexists("demoserver"))then begin
	 port = 8087;
		logtext(0,"newport 8087");
	end;
	logtext(0,"WebSyncUsersToCRM");
	TrHsCU = true;
	CompQty = matrowcnt(Compb);
	matrowget(Compb,i,Comprw);
	if(true)then begin
		SetCompany(1,false);
		if(true)then begin
			TrHs = true;
			CUr.Code = "";
			while(LoopMain(CUr,1,TrHs)) begin
				if(nonblank(CUr.CRMid))then begin
					if(blank(crmiduser[CUr.CRMid]))then begin
						crmiduser[CUr.CRMid] = CUr.Code;
					end else begin
						if(crmiduser[CUr.CRMid]!=CUr.Code)then begin
							logtext(0,"Error CRM ID " & crmiduser[CUr.CRMid] & " exist in " & CUr.Code);
						end;
					end;
				end;
			end;
			ResetLoop(USr);
		end;
	end;	

return;
end;


global webpublic updating procedure WebDelVECUID()
begin
	record CUVc CUr;
 record IVVc IVr;
 integer i,CompQty;
 string 100 CustCode;
 record CompaniesBlock Compb;
 row CompaniesBlock Comprw;
 boolean TrHs,TrHsCU,testf;
 string 255 host,tstr,nonce,opaque,page;
	LongInt port,pos,mtrw,cnter;
	record WebReportChBlock WRChb;
	Area req,reply;
	json jsresponse;
	record UserVc USr;
	vector boolean crmifflag;
	vector string 50 crmiduser;
	array string 100 acrmid;
 	
 	blockload(WRChb);		
 	BlockLoad(Compb);
	
	host = "192.168.3.11";
	page = "/api/Contact/Delete";
	port = 8088;
	logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
	if(fileexists("demoserver"))then begin
	 port = 8087;
		logtext(0,"newport 8087");
	end;
	logtext(0,"WebSyncUsersToCRM");
	TrHsCU = true;
	CompQty = matrowcnt(Compb);
	matrowget(Compb,i,Comprw);
	if(true)then begin
		SetCompany(1,false);
		if(true)then begin
			TrHs = true;
			CUr.Code = "";
			cnter = 0;
			while(LoopMain(CUr,1,TrHs)) begin
				if(CUr.VEType==1 and CUr.CUType==0 and nonblank(CUr.CRMid))then begin
					SendWebRequest(host,port,-1,false,"DELETE",page & "?id=" & CUr.CRMid,"application/json","id",false,req,reply,5);
					CUr.CRMid = "";
					recordstore(CUr,true);
					logtext(0,"needdelete " & CUr.Code);
					cnter = cnter + 1;
					if(cnter>5)THEN BEGIN
						GOTO lWebDelVECUID;
					END;
				end;
				if(CUr.VEType==1 and CUr.CUType==1 and nonblank(CUr.CRMid))then begin
					CUr.CRMid = "";
					recordstore(CUr,true);
					logtext(0,"needdelete " & CUr.Code);
				end;
			end;
		end;
	end;	

lWebDelVECUID:;
logtext(0,"WebSyncUsersToCRM end");
return;
end;

global webpublic procedure WebFillArIVCRMID()
begin
	record CUVc CUr;
	record IVVc IVr;
	integer i,CompQty;
	string 100 CustCode;
	record CompaniesBlock Compb;
	row CompaniesBlock Comprw;
	boolean TrHs,TrHsCU,testf;
	string 255 host,tstr,nonce,opaque,page;
	LongInt port,pos,mtrw,cnter;
	record WebReportChBlock WRChb;
	Area req,reply;
	json jsresponse;
 	
 	blockload(WRChb);		
 	BlockLoad(Compb);
	
	host = "192.168.3.11";
	page = "/api/LoyaltyCard/Update";
	port = 8088;
	logtext(0,"CURIPADDRESS" & CURIPADDRESS); 
	if(fileexists("demoserver"))then begin
	 port = 8087;
		logtext(0,"newport 8087");
	end;
	
	TrHsCU = true;
	CompQty = matrowcnt(Compb);
	for(i=0;i<CompQty;i=i+1)begin
			matrowget(Compb,i,Comprw);
			if(Comprw.ActiveStatus==0 and (i+1)!=10)then begin
				SetCompany(i+1,false);
				IVr.InvDate = stringtodate("18/10/2018");
				logtext(0,"WebFillArIVCRMID " & currentcompany);
				TrHsCU = true;
				while(loopkey("InvDate",IVr,1,TrHsCU))begin
					testf = true;
					if(blank(IVr.CRMid))then begin testf = false; end;
					if(IVr.InvDate>stringtodate("15/03/2019"))then begin
						TrHsCU = false;
						testf = false;
					end;
					
					if(testf)then begin
						addtexttoarea(IVr.CRMid & chr(13) & chr(10),req);
					end;
				end;
				resetloop(IVr);
			end;
	end;
	writeareatofile(req,"CRMIDforUpdate.txt",0);

return;
end;

global webpublic procedure WebGetItemInfo()
begin
	string 100 artcode,brand;
	record GlobalItemVc GIr;
	
	WebSetContentType("application/json");		
	
	artcode = webgetarg("code");
	brand = webgetarg("brand");
	setcompany(1,false);
	if(nonblank(artcode) and nonblank(brand))then begin
		GIr.Code = brand & "_" & artcode;
		if(readfirstmain(GIr,1,true))then begin
			weboutstring("{\"result\":");
				weboutstring("{" & chr(13) & chr(10));
				weboutstring("\"productDetail\":{" & chr(13) & chr(10));
				weboutstring("\"name\":\"" & NormalizeStrToJson(GIr.HansaName) & "\"," & chr(13) & chr(10));
				weboutstring("\"brand\":{" & chr(13) & chr(10));
				weboutstring("\"brand\":\"" &  NormalizeStrToJson(BPICodeToName(brand)) & "\"," & chr(13) & chr(10));
				weboutstring("\"hansaid\":\"" & NormalizeStrToJson(brand) & "\"" & chr(13) & chr(10));
				weboutstring("}," & chr(13) & chr(10));
				if(nonblank(GIr.BPIGroup))then begin
					weboutstring("\"group\":\"" & NormalizeStrToJson(BPICodeToName(GIr.BPIGroup)) & "\"," & chr(13) & chr(10));
				end;
				if(nonblank(GIr.BPICollection))then begin
					weboutstring("\"collection\":\"" & NormalizeStrToJson(BPICodeToName(GIr.BPICollection)) & "\"," & chr(13) & chr(10));
				end;
				if(nonblank(GIr.BPICategory))then begin
					weboutstring("\"category\":\"" & NormalizeStrToJson(BPICodeToName(GIr.BPICategory)) & "\"," & chr(13) & chr(10));
				end;
				if(nonblank(GIr.BPISubGroup))then begin
					weboutstring("\"subGroup\":\"" & NormalizeStrToJson(BPICodeToName(GIr.BPISubGroup)) & "\"," & chr(13) & chr(10));
				end;
				weboutstring("\"hansaid\":\"" & GIr.HansaCode & "\"" & chr(13) & chr(10));
				weboutstring("}" & chr(13) & chr(10));
				weboutstring("}" & chr(13) & chr(10));
			weboutstring("}");
		end else begin
			weboutstring("{\"result\":\"Item Not Found\"");
			
			weboutstring("}");
		end;
	end;
	
return;
end;
 