external  function string 100 BPICodeToName(string);
external procedure ExtractObj(string,var Integer,var string);
external procedure LogProcTime(string,longint);


SetLangMode(LangRussian,"RUS",0);

global procedure IdeaCURepRn(record RcVc RepSpec)
begin
	record CUVc CUr;
	boolean TrHs,testf;
	
	Startreportnoheaderjob("Отчет по клиентам");
	
	startformat(15);
		outstring(0,0,"Таблица Клиентов",false);
	endformat;
	startformat(15);
	endformat;
	startformat(15);
		outstring(0,0,"Client Code",false);
		outstring(100,0,"Client Name",false);
		outstring(200,0,"Telephone",false);
		outstring(300,0,"Address",false);
	endformat;
	if(RepSpec.flags[1]!=0) then begin
		CUr.CustCat = "";
	end else begin	
		CUr.CustCat = "IDEA";
	end;	
	TrHs = true;
	while(loopkey("Group",CUr,1,TrHs))begin
		testf = true;
		if(CUr.CustCat!="IDEA" and RepSpec.flags[1]==0)then begin TrHs = false; testf = false; end;
		if(CUr.blockedFlag>0)then begin testf = false; end;
		
		if(testf)then begin
			startformat(15);
				outstring(0,0,"'" & CUr.Code,false);
				outstring(100,0,"'" & CUr.Name,false);
				outstring(200,0,"'" & CUr.Phone,false);
				outstring(300,0,"'" & CUr.InvAddr0 & " " & CUr.InvAddr1 & " " & CUr.InvAddr2 & " " & CUr.InvAddr3 & " " & CUr.InvAddr4,false);
			endformat;
		end;
		
	end;
	
	endjob;
	
return;
end;

global procedure IdeaVERepRn(record RcVc RepSpec)
begin
	record CUVc CUr;
	boolean TrHs,testf;
	
	Startreportnoheaderjob("Отчет по поставщикам");
	
	startformat(15);
		outstring(0,0,"Таблица Поставщиков",false);
	endformat;
	startformat(15);
	endformat;
	startformat(15);
		outstring(0,0,"Supplier Code",false);
		outstring(100,0,"Supplier Name",false);
		outstring(150,0,"Supplier Address",false);
		outstring(200,0,"Contact Person",false);
		outstring(250,0,"Telephone",false);
		outstring(300,0,"E-mail",false);
		outstring(350,0,"Production Period",false);
	endformat;
	
	if(RepSpec.flags[1]==0)then begin
		CUr.VECat = "IDEA";
	end else begin
		CUr.VECat = "";
	end;
	TrHs = true;
	while(loopkey("VEActGroup",CUr,1,TrHs))begin
		testf = true;
		if(CUr.VECat!="IDEA" and RepSpec.flags[1]==0)then begin TrHs = false; testf = false; end;
		if(CUr.blockedFlag>0)then begin testf = false; end;
		
		if(testf)then begin
			startformat(15);
				outstring(0,0,"'" & CUr.Code,false);
				outstring(100,0,"'" & CUr.Name,false);
				outstring(150,0,"'" & CUr.InvAddr0 & " " & CUr.InvAddr1 & " " & CUr.InvAddr2 & " " & CUr.InvAddr3 & " " & CUr.InvAddr4,false);
				outstring(200,0,"'" & CUr.Person,false);
				outstring(250,0,"'" & CUr.Phone,false);
				outstring(300,0,"'" & CUr.eMail,false);
				outstring(350,0,"'" & CUr.PlanShipDays,false);
			endformat;
		end;
		
	end;
	
	endjob;
	
return;
end;






global procedure IdeaStckRepRn(record RcVc RepSpec)
begin
	record ItemStatusVc ISr, varISr;
	boolean TrHs,testf,testname, TrHs2, VarietyItemf;
	array integer tab;
	integer i,j,lccnt,mtrw,pos,lcsnt,namecnt,varcnt;
	record LocationVc Locr;
	array string 255 aLocationsSl, aLocCodesSl,aLocations, aLocCodes;
	record INVc INr;
	row INVc INrw;
	record CompaniesBlock CBb;
	row CompaniesBlock CBrw;
	string 250 vCompName,Position,clstr,namew,VarSpec;
	record PISVc PISr;
	vector val vPosit;
	integer vs, b, v;
	record DIVc DIr;
	vector string 255 vClassif;
	array val qty;
	val totqty;
	longint curtick;
	vector string 255 ItCodeVar;
	record VARVc VARr;
	boolean stockflag;
	
	curtick = getcurtick();
	tab[1] = 0;
  tab[2] = 20;
  tab[3] = 40;
  tab[4] = 60;
  tab[5] = 140;
  tab[6] = 160;
  tab[7] = 180;
  tab[8] = 200;
  tab[9] = 220;
  tab[10] = 240;
  tab[11] = 260;
  tab[12] = 310;
	vs = 30;
	
	lccnt = 0;
	Locr.Code = "";
	while (LoopMain(Locr,1,true))begin
		if(setinset("STOCK",Locr.Classification)) then begin
			testname=true;
			namew = "";
			for(namecnt=0;namecnt<len(Locr.Name);namecnt=namecnt+1) begin
				if(mid(Locr.Name,namecnt,1)==",") then begin
					testname = false;
				end;
				if(testname) then begin
					namew = namew & mid(Locr.Name,namecnt,1);
				end;	
			end;
			if(namew=="Bron") then begin 
				aLocations[lccnt] = namew;
			end else begin	
				aLocations[lccnt] = "STOCK " & namew;
			end;	
			aLocCodes[lccnt] = Locr.Code;
			lccnt=lccnt+1;
		end;	
	end;
	ResetLoop(Locr);
	Locr.Code = "";
	while (LoopMain(Locr,1,true))begin
		if(setinset("SALE",Locr.Classification)) then begin
			testname=true;
			namew = "";
			for(namecnt=0;namecnt<len(Locr.Name);namecnt=namecnt+1) begin
				if(mid(Locr.Name,namecnt,1)==",") then begin
					testname = false;
				end;
				if(testname) then begin
					namew = namew & mid(Locr.Name,namecnt,1);
				end;	
			end;
			if(namew=="Bron") then begin  
				aLocationsSl[lcsnt] = namew; 
			end else begin
				aLocationsSl[lcsnt] = "SOLD " & namew;
			end;	
			aLocCodesSl[lcsnt] = Locr.Code;
			lcsnt=lcsnt+1;
		end;	
	end;
	vs = (40/(lccnt-1)*2);
	
	
	Startreportnoheaderjob("Отчет по складам Idea");
	
	startformat(15);
	
	outstring(tab[1],0,"Project",false);
		outstring(tab[2],0,"MFR Name",false);
		outstring(tab[3],0,"SN",false);
		outstring(tab[4],0,"Description",false);
		outstring(tab[5],0,"Article",false);
		outstring(tab[6],0,"Short Nm.",false);
		outstring(tab[7],0,"Model",false);
		outstring(tab[8],0,"Colour",false);
		outstring(tab[8],0,"Size",false);
		outstring(tab[9],0,"UOM",false);
		outstring(tab[10],0,"Total Qty",false);
		for (i=0;i<lccnt;i=i+1)begin
			outstring(tab[11]+(vs*i),0,aLocations[i],false);
		end;
		for (i=0;i<lcsnt;i=i+1)begin
			outstring(tab[12]+(vs*i),0,aLocationsSl[i],false);
		end;
		outstring(tab[11]+(vs*i)+vs,0,"Bin Nr.",false);
		b=tab[11]+(vs*i)+vs;

	endformat;
	
	startformat(15);
		outstring(0,0,"",false);
		outstring(0,0,"",false);
		outstring(0,0,"",false);
		outstring(0,0,"",false);
		outstring(0,0,"",false);
		outstring(0,0,"",false);
		outstring(0,0,"",false);
		outstring(0,0,"",false);
		outstring(0,0,"",false);
		outstring(0,0,"",false);
		for (i=0;i<lccnt;i=i+1)begin
			outstring(0,0,"",false);
		end;
		outstring(0,0,"",false);
		for (i=0;i<lcsnt;i=i+1)begin
			outstring(0,0,"",false);
		end;
		for (i=0;i<lccnt;i=i+1)begin
			outstring(b+(vs*i),0,aLocations[i],false);
		end;
	endformat;
	
	
	blockload(CBb);
	mtrw = MatRowCnt(CBb);
	for (i=0;i<mtrw;i=i+1)begin
		matrowget(CBb,i,CBrw);
		if(i==CurrentCompany-1)then begin
			vCompName = CBrw.CompName;
		end;
	end;
	
	INr.Code = "";
	while (loopMain(INr,1,true))begin
		testf = true;
		VarietyItemf = false;
		varcnt = 0;
		ISr.Code = INr.Code;
		ISr.Location = ";;;";
		stockflag = false;
		v = 0;
		TrHs2 = true;
		while(LoopMain(ISr,2,TrHs2)) begin 
			if(ISr.Code!=INr.Code)then begin TrHs2 = false; end;
			if(TrHs2) then begin stockflag = false; end;
			if(ISr.Instock>0 and TrHs2)then begin stockflag = true; end;
			if(stockflag)then begin
				if(TrHs2 and nonblank(ISr.Variety))then begin
					VarietyItemf = true;
					ItCodeVar[ISr.Code & "_" & v] = ISr.Variety;
					v = v + 1;
				end;		
			end;
		end;	
		if(!VarietyItemf and !stockflag) then begin testf = false; end;
		varcnt = v;
		resetloop(ISr);
				/*varISr.Code = INr.Code;
		/*if(ReadFirstMain(ISr,2,true))then begin 
			if(ISr.Instock<1)then begin testf = false; end;
			if(testf)then begin
				varISr.Code = INr.Code;
				TrHs2 = true;
				v = 0;
				while (loopMain(varISr,1,TrHs2)) begin
					if(varISr.Code!=INr.Code)then begin TrHs2 = false; end;
					if(TrHs2 and nonblank(varISr.Variety))then begin
						VarietyItemf = true;
						ItCodeVar[varISr.Code & "_" & v] = varISr.Variety;
						v = v + 1;
					end;
				end;
				varcnt = v;
				resetloop(varISr);
			end;
		end else begin
			testf = false;
		end;*/
		if(nonblank(RepSpec.f1) and !setinset(RepSpec.f1,INr.DispGroups)/*INr.BPIBrand!=RepSpec.f1*/)then begin testf = false; end;
		if(nonblank(RepSpec.f2) and !setinset(RepSpec.f2,INr.DispGroups)/*INr.BPICollection!=RepSpec.f2*/)then begin testf = false; end;
		if(nonblank(RepSpec.f3) and left(RepSpec.f3,2)!="IS" and left(RepSpec.f3,2)!="CS" /*INr.BPICollection!=RepSpec.f2*/)then begin testf = false; end;
		// if(!VarietyItemf and left(INr.Category,2)!="IS" and left(INr.Category,2)!="CS" and left(INr.Category,2)!="CP")then begin testf = false; end;
		if(INr.CompletCode!="1" and INr.CompletCode!="2" and INr.CompletCode!="R") then begin testf = false; end;
		if(nonblank(RepSpec.f3) and left(INr.Category,3)!= left(RepSpec.f3,3)) then begin testf = false; end;
		if(INr.Code=="IPCA-00002-1")then begin
		end;
		totqty = 0;
		for (i=0;i<lccnt;i=i+1)begin
			ISr.Code = INr.Code;
			ISr.Location = aLocCodes[i];
			if(readFirstmain(ISr,2,true))then begin
				qty[i] = ISr.Instock - ISr.RsrvQty;
				totqty = totqty + ISr.Instock;
				vPosit[aLocCodes[i]] = ISr.Instock;
			end else begin
			end;
		end;
		if(testf and !VarietyItemf and totqty>0)then begin
			vClassif["BRAND"] = "";
			vClassif["MODEL"] = "";
			vClassif["COLOUR"] = "";
			pos = 0;
			ExtractObj(INr.DispGroups,pos,clstr);
			while (nonblank(clstr)) begin
				DIr.Code = clstr;
				if(ReadFirstMain(DIr,1,true))then begin
					if(DIr.CType=="BRAND")then begin
						vClassif["BRAND"] = DIr.Name;
					end;
					if(DIr.CType=="MODEL")then begin
						vClassif["MODEL"] = DIr.Name;
					end;
					if(DIr.CType=="COLOUR")then begin
						vClassif["COLOUR"] = DIr.Name;
					end;
					if(DIr.CType=="SIZE")then begin
						vClassif["SIZE"] = DIr.Name;
					end;
				end;
				ExtractObj(INr.DispGroups,pos,clstr);
			end;
			startformat(15);
			outstring(tab[1],0,left(INr.Category,3),false);
			outstring(tab[2],0,vClassif["BRAND"],false);
			outstring(tab[3],0,INr.SN,false);
			outstring(tab[4],0,INr.Name,false);
			outstring(tab[5],0,INr.AlternativeCode,false);
			MatRowGet(INr,0,INrw);
			outstring(tab[6],0,INrw.Text,false);
			outstring(tab[7],0,vClassif["MODEL"],false);
			outstring(tab[8],0,vClassif["COLOUR"],false);
			outstring(tab[8],0,INr.Size,false);
			outstring(tab[9],0,INr.Unittext,false);
			//if(Right(ValToString(totqty,M4Val,"","",1),2)!= "00") then begin // Edit ________________________________________ABR 04.02.2020 15:07
				// outstring(tab[10],0,totqty,false);
				OutVal(tab[10],0,totqty,M4Val,true);
			//end else begin	
				//outstring(tab[10],0,mid(ValToString(totqty,M4Val,"","",1),0,len(ValToString(totqty,M4Val,"","",1))-2),false);
			//end;	
			for (i=0;i<lccnt;i=i+1)begin
				ISr.Code = INr.Code;
				ISr.Location = aLocCodes[i];
				if(readFirstmain(ISr,2,true))then begin
					// outstring(tab[11]+(vs*i),0,mid(ValToString(qty[i],M4Val,"","",1),0,len(ValToString(qty[i],M4Val,"","",1))-2),false);// Edit ________________________________________ABR 04.02.2020 15:07
					//if(right(ValToString(qty[i],M4Val,"","",1),2)!= "00") then begin
						// outstring(tab[11]+(vs*i),0,qty[i],false);
						OutVal(tab[11]+(vs*i),0,qty[i],M4Val,true);
					//end else begin	
						//outstring(tab[11]+(vs*i),0,mid(ValToString(qty[i],M4Val,"","",1),0,len(ValToString(qty[i],M4Val,"","",1))-2),false);
					//end;	
					vPosit[aLocCodes[i]] = ISr.Instock;
				end else begin
					outstring(tab[11]+(vs*i),0,"0.00",false);
				end;
			end;
			for (i=0;i<lcsnt;i=i+1)begin
				ISr.Code = INr.Code;
				ISr.Location = aLocCodesSl[i];
				if(readFirstmain(ISr,2,true))then begin
					//if(right(ValToString(ISr.RsrvQty,M4Val,"","",1),2)!= "00") then begin// Edit ________________________________________ABR 04.02.2020 15:07
						// outstring(tab[12]+(vs*i),0,ISr.RsrvQty,false);
						OutVal(tab[12]+(vs*i),0,ISr.RsrvQty,M4Val,true);
					//end else begin	
						//outstring(tab[12]+(vs*i),0,mid(ValToString(ISr.RsrvQty,M4Val,"","",1),0,len(ValToString(ISr.RsrvQty,M4Val,"","",1))-2),false);
					//end;	
					vPosit[aLocCodesSl[i]] = ISr.RsrvQty;
				end else begin
					outstring(tab[11]+(vs*i),0,"0.00",false);
				end;
			end;
			b=tab[11]+(vs*i)+vs;
			for (i=0;i<lccnt;i=i+1)begin
				PISr.ArtCode = INr.Code;
				PISr.Location = aLocCodes[i];
				TrHs = true;
				while (loopkey("Instock",PISr,2,TrHs))begin
					testf = true;
					if(PISr.ArtCode!=INr.Code)then begin testf = false; end;
					if(PISr.Location!=aLocCodes[i])then begin testf = false; end;
					if(!testf)then begin TrHs = false; end;
					if(testf)then begin
						if(blank(Position))then begin 
							Position =  PISr.Position & " (" & mid(ValToString(PISr.Instock,M4Val,"","",1),0,len(ValToString(PISr.Instock,M4Val,"","",1))-2) & ")";
						end else begin
							Position = Position & "; "  &  PISr.Position & " (" & mid(ValToString(PISr.Instock,M4Val,"","",1),0,len(ValToString(PISr.Instock,M4Val,"","",1))-2) & ")";
						end;
					end;
				end;
				ResetLoop(PISr);
				outstring(b+(vs*i),0,Position,false);
				Position = "";
			end;
			endformat;
		end;
		totqty = 0;
		for (v=0;v<varcnt;v=v+1) begin 
			for (i=0;i<lccnt;i=i+1)begin
				ISr.Code = INr.Code;
				ISr.Location = aLocCodes[i];
				ISr.Variety = ItCodeVar[INr.Code & "_" & v];
				if(readFirstmain(ISr,3,true))then begin
					qty[i] = ISr.Instock - ISr.RsrvQty;
					totqty = totqty + ISr.Instock;
					vPosit[aLocCodes[i]] = ISr.Instock;
				end else begin
				end;
			end;
		end;	
		
		if(testf and VarietyItemf and totqty>0)then begin
			vClassif["BRAND"] = "";
			vClassif["MODEL"] = "";
			vClassif["COLOUR"] = "";
			pos = 0;
			ExtractObj(INr.DispGroups,pos,clstr);
			while (nonblank(clstr)) begin
				DIr.Code = clstr;
				if(ReadFirstMain(DIr,1,true))then begin
					if(DIr.CType=="BRAND")then begin
						vClassif["BRAND"] = DIr.Name;
					end;
					if(DIr.CType=="MODEL")then begin
						vClassif["MODEL"] = DIr.Name;
					end;
					if(DIr.CType=="COLOUR")then begin
						vClassif["COLOUR"] = DIr.Name;
					end;
					if(DIr.CType=="SIZE")then begin
						vClassif["SIZE"] = DIr.Name;
					end;
				end;
				ExtractObj(INr.DispGroups,pos,clstr);
			end;
			
			for (v=0;v<varcnt;v=v+1) begin 
				VarSpec = "";
				VARr.Code = right(ItCodeVar[INr.Code & "_" & v],len(ItCodeVar[INr.Code & "_" & v]) - 1);
				if(ReadFirstMain(VARr,1,true))then begin
					VarSpec = VARr.Comment;
				end;
				if (VARr.Code=="1" or VARr.Code=="2" or VARr.Code=="R") then begin
					startformat(15);
					outstring(tab[1],0,left(INr.Category,3),false);
					outstring(tab[2],0,vClassif["BRAND"],false);
					outstring(tab[3],0,INr.SN & ItCodeVar[INr.Code & "_" & v],false);
					outstring(tab[4],0,INr.Name & ", " & VarSpec,false);
					outstring(tab[5],0,INr.AlternativeCode,false);
					MatRowGet(INr,0,INrw);
					outstring(tab[6],0,INrw.Text,false);
					outstring(tab[7],0,vClassif["MODEL"],false);
					outstring(tab[8],0,vClassif["COLOUR"],false);
					outstring(tab[8],0,INr.Size,false);
					outstring(tab[9],0,INr.Unittext,false);
					//if(Right(ValToString(totqty,M4Val,"","",1),2)!= "00") then begin// Edit ________________________________________ABR 04.02.2020 15:07
						//outstring(tab[10],0,totqty,false);
						OutVal(tab[10],0,totqty,M4Val,true);
						
					//end else begin	
						//outstring(tab[10],0,mid(ValToString(totqty,M4Val,"","",1),0,len(ValToString(totqty,M4Val,"","",1))-2),false);
					//end;	
					for (i=0;i<lccnt;i=i+1)begin
						ISr.Code = INr.Code;
						ISr.Location = aLocCodes[i];
						ISr.Variety = ItCodeVar[INr.Code & "_" & v];
						if(readFirstmain(ISr,3,true))then begin
							//if(right(ValToString(qty[i],M4Val,"","",1),2)!= "00") then begin// Edit ________________________________________ABR 04.02.2020 15:07
								//outstring(tab[11]+(vs*i),0,qty[i],false);
								OutVal(tab[11]+(vs*i),0,qty[i],M4Val,true);
							//end else begin	
								//outstring(tab[11]+(vs*i),0,mid(ValToString(qty[i],M4Val,"","",1),0,len(ValToString(qty[i],M4Val,"","",1))-2),false);
							//end;	
							vPosit[aLocCodes[i]] = ISr.Instock;
						end else begin
							outstring(tab[11]+(vs*i),0,"0.00",false);
						end;
					end;
					for (i=0;i<lcsnt;i=i+1)begin
						ISr.Code = INr.Code;
						ISr.Location = aLocCodesSl[i];
						ISr.Variety = ItCodeVar[INr.Code & "_" & v];
						if(readFirstmain(ISr,3,true))then begin
							//if(right(ValToString(ISr.RsrvQty,M4Val,"","",1),2)!= "00") then begin // Edit ________________________________________ABR 04.02.2020 15:07
								//outstring(tab[12]+(vs*i),0,ISr.RsrvQty,false);
								OutVal(tab[12]+(vs*i),0,ISr.RsrvQty,M4Val,true);
							//end else begin	
								//outstring(tab[12]+(vs*i),0,mid(ValToString(ISr.RsrvQty,M4Val,"","",1),0,len(ValToString(ISr.RsrvQty,M4Val,"","",1))-2),false);
							//end;	
							vPosit[aLocCodesSl[i]] = ISr.RsrvQty;
						end else begin
							outstring(tab[11]+(vs*i),0,"0.00",false);
						end;
					end;
					b=tab[11]+(vs*i)+vs;
					for (i=0;i<lccnt;i=i+1)begin
						PISr.ArtCode = INr.Code;
						PISr.Variety = ItCodeVar[INr.Code & "_" & v];
						PISr.Location = aLocCodes[i];
						TrHs = true;
						while (loopkey("CodeVariety",PISr,3,TrHs))begin
							testf = true;
							if(PISr.ArtCode!=INr.Code)then begin testf = false; end;
							if(PISr.Variety!=ItCodeVar[INr.Code & "_" & v])then begin testf = false; end;
							if(PISr.Location!=aLocCodes[i])then begin testf = false; end;
							if(!testf)then begin TrHs = false; end;
							if(testf)then begin
								if(blank(Position))then begin 
									Position =  PISr.Position & " (" & mid(ValToString(PISr.Instock,M4Val,"","",1),0,len(ValToString(PISr.Instock,M4Val,"","",1))-2) & ")";
								end else begin
									Position = Position & "; "  &  PISr.Position & " (" & mid(ValToString(PISr.Instock,M4Val,"","",1),0,len(ValToString(PISr.Instock,M4Val,"","",1))-2) & ")";
								end;
							end;
						end;
						ResetLoop(PISr);
						outstring(b+(vs*i),0,Position,false);
						Position = "";
					end;
					endformat;
				end;
			end;
		end;
	end;
	resetloop(INr);
	endjob;
	LogProcTime("IdeaStckRepRn",getcurtick() - curtick);
return;
end;

global procedure DiffItTotandTotPORepRn(record RcVc RepSpec)
begin
	record POVc POr;
	boolean TrHs, testf;
	array integer tab;


	tab[1] = 0;
  tab[2] = 50;
  tab[3] = 100;
  tab[4] = 130;
  tab[5] = 180;
  tab[6] = 210;
  tab[7] = 250;
  tab[8] = 270;
  tab[9] = 300;
  tab[10] = 350;
  tab[11] = 390;
  tab[12] = 440;
	
	
	
	Startreportnoheaderjob("Отчет по разницам Item total и Total");
	startformat(15);
		outstring(tab[1],0,"PO Number",false);
		outstring(tab[4],0,"Item total",false);
		outstring(tab[8],0,"Total",false);
		outstring(tab[11],0,"Difference",false);
	endformat;
	 
	POr.TransDate = RepSpec.sStartDate;
	TrHs = true;
	while (loopkey("TransDate",POr,1,TrHs)) begin
		if(POr.TransDate>RepSpec.sEndDate)then begin TrHs = false; end;
		if(TrHs)then begin
			startformat(15);
				outstring(tab[1],0,POr.Reference,false);
				outstring(tab[4],0,POr.IDSum4,false);
				outstring(tab[8],0,POr.Sum4,false);
				outstring(tab[11],0,(POr.IDSum4-POr.Sum4),false);
			endformat;
		end;
	end;
	ResetLoop(POr);
	endjob;
	return;
end;
