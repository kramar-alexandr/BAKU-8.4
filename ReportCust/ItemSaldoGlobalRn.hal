//server-only
external  function string 100 BPICodeToName(string);


SetLangMode(LangRussian,"RUS",0);


global procedure ItemSaldoGlobalRn(record RcVc RepSpec)
begin
	integer curcomp;
	record INVc INr;
	boolean testf,TrHs,TrHs1,testf1;
	record ItemHistVc IHr;
	record ItemDuplicatesVc IDr;
	vector boolean itemHasDupl;
	vector string 255 itemDuplicates;
	array string 20 ItemCodes;
	longint k,i;
	record BPIBrandVc BPIBrandr;
	
	curcomp = currentcompany;
	
	if(curcomp!=18)then begin
		setcompany(18,false);
	end;
	
	k = 0;
	
	StartReportNoHeaderJob("Оборотно-сальдовая ведомость по товарам Глобальная");
		if(blank(RepSpec.f1))then begin
			startformat(15);
				outstring(0,0,"В отчете нжно указать бренд",false);
			endformat;
		end else begin
		
			//Калькуляция данных
			
			while(loopmain(INr,1,true))begin//Переделать на ключ BPIBrand
				testf = true;
				if(INr.BPIBrand!=RepSpec.f1)then begin testf = false; end;
				
				if(testf)then begin
					IDr.DupCode = INr.Code;
					TrHs1 = true;
					while (loopkey("DupCode",IDr,1,TrHs1)) begin
						testf1 = true;
						if (IDr.DupCode!=INr.Code) then begin TrHs1 = false; testf1 = false; end;
						if (IDr.DupBrandCode!=INr.BPIBrand) then begin  testf1 = false; end;
						if (testf1) then begin
							itemHasDupl[IDr.OrigCode] = true;
							
							itemDuplicates[IDr.OrigCode] = itemDuplicates[IDr.OrigCode] & INr.Code & ",";
							
							testf = false;
						end;
					end;
					resetloop(IDr);
					
					if(testf)then begin
						ItemCodes[k] = INr.Code;
						k=k+1;
						//collect data

					end;
				end;
			end;
		end;
		
		//вывод отчета
		//шапка
			startformat(15);
				outstring(0,0,"Период",false);
				outstring(70,0,RepSpec.sStartDate & ":" & RepSpec.sEndDate,false);
			endformat;
			BPIBrandr.Code = RepSpec.f1;
			readfirstmain(BPIBrandr,1,true);
			startformat(15);
				outstring(0,0,"Бренд",false);
				outstring(70,0,BPIBrandr.Name,false);
			endformat;
			
			startformat(15);
				outstring(20,0,"№",false);
				outstring(30,0,"Код",false);
				outstring(40,0,"Код КК",false);
				outstring(50,0,"Дубликаты",false);
				outstring(60,0,"Наименование",false);
				outstring(70,0,"Бренд",false);
				outstring(80,0,"CC Модель",false);
				outstring(90,0,"CC Колекция",false);
				outstring(100,0,"Коллекция",false);
				outstring(110,0,"Группа",false);
				outstring(120,0,"Подгруппа",false);
				outstring(130,0,"Категория",false);
				outstring(140,0,"",false);
				outstring(150,0,"",false);
				outstring(160,0,"",false);
				outstring(170,0,"",false);
				outstring(180,0,"",false);
				outstring(190,0,"",false);
				outstring(200,0,"",false);
				outstring(210,0,"",false);
				outstring(220,0,"",false);
				outstring(230,0,"",false);
				outstring(240,0,"",false);
				outstring(250,0,"",false);
			endformat;
			
			
		//товары
		for(i=0;i<k;i=i+1)begin
			INr.Code = ItemCodes[i];
			if(readfirstmain(INr,1,true))then begin
				startformat(15);
				outstring(20,0,i+1,false);
				outstring(30,0,INr.AlternativeCode,false);
				outstring(40,0,INr.Code,false);
				if(itemHasDupl[IDr.OrigCode])then begin
					outstring(50,0,itemDuplicates[INr.Code],false);
				end else begin
					outstring(50,0,"",false);
				end;
				outstring(60,0,INr.Name,false);
				outstring(70,0,BPICodeToName(INr.BPIBrand),false);
				outstring(80,0,INr.CCModelName,false);
				outstring(90,0,INr.CCCollectName,false);
				outstring(100,0,BPICodeToName(INr.BPICollection),false);
				outstring(110,0,BPICodeToName(INr.BPIGroup),false);
				outstring(120,0,BPICodeToName(INr.BPISubGroup),false);
				outstring(130,0,BPICodeToName(INr.BPICategory),false);
				outstring(140,0,"",false);
				outstring(150,0,"",false);
				outstring(160,0,"",false);
				outstring(170,0,"",false);
				outstring(180,0,"",false);
				outstring(190,0,"",false);
				outstring(200,0,"",false);
				outstring(210,0,"",false);
				outstring(220,0,"",false);
				outstring(230,0,"",false);
				outstring(240,0,"",false);
				outstring(250,0,"",false);
			endformat;
			
			end;
		end;
		
		
	endjob;
	
	if(curcomp!=18)then begin
		setcompany(curcomp,false);
	end;
	
return;
end;
