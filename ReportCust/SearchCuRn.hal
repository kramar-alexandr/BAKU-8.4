//server-only
external procedure GetCurUser(var record UserVc);
external procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);
external function roundmode SetRoundModeD(Integer);
external procedure CheckFlush(var Integer,Integer);
external function val DivWithRateToBase1(string,Date,val,roundmode);
external function val MulWithRateToBase1(var string,Date,val,roundmode);
external function Boolean GetPurchaseItem(string,string,var record PIVc);
remote function boolean CompanyIsJWLikeCompany(Integer);
external function Boolean FindStringInString(string,string);
external procedure LogProcTime(string,longint);
external procedure ToStrTRCode(var string,Integer,LongInt);

SetLangMode(LangRussian,"RUS",0);


global procedure ORReportRn(record RcVc RepSpec)  // by Ira
begin
	record ORVc ORr;
	record POVc POr;
	boolean isB, TrHs, TrHs2;
	
	StartReportNoHeaderJob("Отчет по счетам клиентов для магазинов");
	StartFormat(15);
	 OutString(0,0,"Local order #",false);
	 OutString(50,0,"Client Order date",false);
	 OutString(110,0,"Client number",false);
	 OutString(160,0,"Client name",false);
	 OutString(210,0,"Promised date",false);
	 OutString(270,0,"Project code",false);
	 OutString(320,0,"Designer",false);
	 OutString(350,0,"Po number",false);
	 OutString(385,0,"Manufacturer name",false);
	 OutString(450,0,"Mfr finish date",false);
	 OutString(510,0,"Order status",false);
	 OutString(580,0,"Comment",false);
	EndFormat;
	
	TrHs = true;
	ORr.OrdDate = RepSpec.sStartDate;
	while(LoopKey("OrdDate",ORr,1,TrHs))begin
	TrHs2 = true;
		if(ORr.OrdDate > RepSpec.sEndDate) then begin TrHs = false; end;
		if(TrHs) then begin
			if(currentcompany==28 and nonblank(ORr.CustOrdNr)) then begin
				POr.Reference = ORr.CustOrdNr;
			end else begin
				StartFormat(15);
					OutString(0,0,ORr.SerNr,false);
					OutDate(50,0,ORr.OrdDate,false);
					OutString(110,0,ORr.CustCode,false);
					OutString(160,0,ORr.Addr0,false);
					OutDate(210,0,ORr.PlanShipDate,false);
					OutString(270,0,ORr.AuthorizationCode,false);
					OutString(320,0,ORr.SalesMan,false);
				EndFormat;
				TrHs2 = false;
			end;
			
			isB = false;
			while(LoopKey("Reference",POr,1,TrHs2))begin
				if(POr.IDRefPRNum==ORr.CustOrdNr) then begin
				isB = true;
				StartFormat(15);
					OutString(0,0,ORr.CustOrdNr,false);
					OutDate(50,0,ORr.OrdDate,false);
					OutString(110,0,ORr.CustCode,false);
					OutString(160,0,ORr.Addr0,false);
					OutDate(210,0,ORr.PlanShipDate,false);
					OutString(270,0,ORr.AuthorizationCode,false);
					OutString(320,0,ORr.SalesMan,false);
					OutString(350,0,POr.Reference,false);
					OutString(385,0,POr.VECode,false);
					OutDate(450,0,POr.IDMfrFinDate,false);
					OutString(510,0,POr.IDStatus,false);
					OutString(580,0,ORr.Comment,false);
				EndFormat;
				end else begin
					TrHs2 = false;
				end;
			end;
			if(isB == false) then begin
			StartFormat(15);
				OutString(0,0,ORr.CustOrdNr,false);
				OutDate(50,0,ORr.OrdDate,false);
				OutString(110,0,ORr.CustCode,false);
				OutString(160,0,ORr.Addr0,false);
				OutDate(210,0,ORr.PlanShipDate,false);
				OutString(270,0,ORr.AuthorizationCode,false);
				OutString(320,0,ORr.SalesMan,false);
			EndFormat;
			end;
			resetloop(POr);
		end;
	end;
	
EndJob;
return;
end;

procedure SearchCuRnResults(record RcVc RepSpec,Boolean printf,Array string acontact,var Integer cnt)
begin
  record CUVc CUr;
  record LetVc Letr;
  boolean TrHs,testf,TrHs1,testf1;
  string 255 tstr,keystr;
  record UserVc Userr;
  LongInt pos;
  vector Boolean vfound;
  record PhoneVc Phoner; //Edit***************************Sasha2,13:40 28.04.2017
  integer chrcode,i;
  string 255 phone;
  string 1 char;
  record LoyaltyCardVc LoyaltyCardr; //Edit***************************Sasha2,13:40 28.08.2017

  cnt = 0;
  TrHs = true;
  if (nonblank(RepSpec.f2)) then begin
    keystr = "Classification:" & RepSpec.f2;
  end else begin
    switch (RepSpec.flags[0]) begin
      case 0:
        keystr = "Code";
      case 1:
        keystr = "VEActCode";
      case 3:
        keystr = "Code";
      otherwise
        keystr = "ActCode";
    end;
  end;
  LoyaltyCardr.SerNr = RepSpec.f1; //Edit***************************Sasha2,14:02 28.08.2017 {
  if (ReadFirstMain(LoyaltyCardr,1,true)) then begin
  end; //Edit***************************Sasha2,14:03 28.08.2017 }
  if (RepSpec.ArtMode == 0) or (RepSpec.ArtMode == 5) then begin //Edit***************************Sasha2,14:23 28.04.2017 {
    char = "";
    phone = "";
    for (i=0;i<len(RepSpec.f1);i=i+1) begin
      char = mid(RepSpec.f1,i,1);
      chrcode = asc(char);
      if ((chrcode>=48) and (chrcode<=57)) then begin
        phone = phone & char;
      end;
    end;
  end; //Edit***************************Sasha2,14:23 28.04.2017 }
  TrHs = true;
  while (LoopKey(keystr,CUr,1,TrHs)) begin
    if (TrHs) then begin
      testf = false;
      RecordClear(Letr);
      if (nonblank(LoyaltyCardr.CustCode) and CUr.Code==LoyaltyCardr.CustCode) then begin //Edit***************************Sasha2,14:06 28.08.2017 {
        AddToText(RepSpec.f1,Letr);
        AddToText(" ",Letr);
      end; //Edit***************************Sasha2,14:06 28.08.2017 }
      if (RepSpec.ArtMode == 0) or (RepSpec.ArtMode == 1) then begin
        AddToText(CUr.Code,Letr);
        AddToText(" ",Letr);
      end;
      if (RepSpec.ArtMode == 0) or (RepSpec.ArtMode == 2) then begin
        AddToText(CUr.Name,Letr);
        AddToText(" ",Letr);
      end;
      if (RepSpec.ArtMode == 0) or (RepSpec.ArtMode == 3) then begin
        AddToText(CUr.SearchKey,Letr);
        AddToText(" ",Letr);
      end;
      if (RepSpec.ArtMode == 0) or (RepSpec.ArtMode == 4) then begin
        AddToText(CUr.CustCat,Letr);
        AddToText(" ",Letr);
      end;     
      if (RepSpec.ArtMode == 0) or (RepSpec.ArtMode == 5) then begin
        AddToText(CUr.Phone,Letr);
        AddToText(" ",Letr);
        if (NonBlank(phone)) then begin //Edit***************************Sasha2,13:48 28.04.2017 {
          TrHs1 = true; 
          Phoner.CUCode = CUr.Code;
          while (LoopKey("CUCode",Phoner,1,TrHs1)) begin
            testf1 = true;
            if (Phoner.CUCode!=CUr.Code) then begin TrHs1 = false; testf1 = false; end;
            if (FindStringInString(Phoner.PhoneNum,phone)==false) then begin testf1 = false; end;
            if (testf1) then begin
              AddToText(RepSpec.f1,Letr);
              AddToText(" ",Letr);
              TrHs1 = false;
            end;
          end; RESETLOOP(Phoner);
        end; //Edit***************************Sasha2,13:48 28.04.2017 }
      end;
      if (RepSpec.ArtMode == 0) or (RepSpec.ArtMode == 6) then begin
        AddToText(CUr.Person,Letr);
        AddToText(" ",Letr);
      end;
      if (RepSpec.ArtMode == 0) or (RepSpec.ArtMode == 7) then begin
        AddToText(CUr.Department,Letr);
        AddToText(" ",Letr);
      end;    
      if (RepSpec.ArtMode == 0) or (RepSpec.ArtMode == 8) then begin
        AddToText(CUr.eMail,Letr);
        AddToText(" ",Letr);
      end; 
      if (RepSpec.ArtMode == 0) then begin 	//Edit----------------------Dima  13.04.2016
      		AddToText(CUr.VECat & " ",Letr);
      		AddToText(CUr.InvAddr0 & " ",Letr);
      		AddToText(CUr.InvAddr1 & " ",Letr);
      		AddToText(CUr.InvAddr2 & " ",Letr);
      		AddToText(CUr.InvAddr3 & " ",Letr);
      		AddToText(CUr.InvAddr4 & " ",Letr);
      		AddToText(CUr.DelAddr0 & " ",Letr);
      		AddToText(CUr.DelAddr1 & " ",Letr);      		
      		AddToText(CUr.Mobile & " ",Letr);
      		AddToText(CUr.SkypeName & " ",Letr);
      		AddToText(CUr.SIPCode & " ",Letr);
      		AddToText(CUr.Extension & " ",Letr);
      		AddToText(CUr.DelCountry & " ",Letr);
      		AddToText(CUr.DateCreated & " ",Letr);
      		AddToText(CUr.DateChanged & " ",Letr);
      		AddToText(CUr.CurncyCode & " ",Letr);
      		AddToText(CUr.VECurncyCode & " ",Letr);
      		AddToText(CUr.SalesGroup & " ",Letr);
      		AddToText(CUr.Comment & " ",Letr);
      		AddToText(CUr.WarnText1 & " ",Letr);
      		AddToText(CUr.OnAccAccAP & " ",Letr);
      		AddToText(CUr.VERebCode & " ",Letr);
      		AddToText(CUr.SalesMan & " ",Letr);
      		AddToText(CUr.Comment0 & " ",Letr);
      		AddToText(CUr.Comment1 & " ",Letr);
      		AddToText(CUr.Comment2 & " ",Letr);
      		AddToText(CUr.Title & " ",Letr);
      		AddToText(CUr.Salutation1 & " ",Letr);
      		AddToText(CUr.Salutation2 & " ",Letr);
      		AddToText(CUr.Salutation3 & " ",Letr);
      		AddToText(CUr.OtherInformationSource & " ",Letr);
      		AddToText(CUr.Profesion & " ",Letr);
      		AddToText(CUr.BirthDate & " ",Letr);
      		AddToText(CUr.SuprDate & " ",Letr);
      		AddToText(CUr.AddressBooks & " ",Letr);
      		AddToText(CUr.CreateCompany & " ",Letr);
      		AddToText(CUr.CreateLocation & " ",Letr);
      		AddToText(CUr.CreateComment & " ",Letr);
      		AddToText(CUr.eMail & " ",Letr);
      		AddToText(CUr.Classification & " ",Letr);
      end;   
      if (printf) then begin
        if (StringInText(RepSpec.f1,Letr)) then begin
          testf = true;
        end;
      end else begin
        pos = 0;
        while (GetNextSubstring(RepSpec.f1,pos,"+ ",tstr)) begin
          if (nonblank(tstr)) then begin vfound[tstr] = false; end;
        end;
        
        pos = 0;
        while (GetNextSubstring(RepSpec.f1,pos,"+ ",tstr)) begin
          if (nonblank(tstr) and StringInText(tstr,Letr)) then begin
            vfound[tstr] = true;
          end;
        end;
        
        pos = 0;
        testf = true;
        while (GetNextSubstring(RepSpec.f1,pos,"+ ",tstr)) begin
          if (nonblank(tstr)) then begin
            testf = testf and vfound[tstr];
          end;
        end;
      end;
      if (testf) then begin
        switch (Userr.limitedAccess) begin
          case 1: if (CUr.SalesMan!=Userr.Code) then begin testf = false; end; 
          case 2: if (CUr.SalesGroup!=Userr.SalesGroup) then begin testf = false; end; 
          case 0: testf = true;
        end;
        switch (RepSpec.flags[0]) begin
          case 0:
            if (testf) then begin
              testf = false;
              if (CUr.VEType!=0) then begin testf = true; end;
              if (CUr.CUType!=0) then begin testf = true; end;
              if (CUr.EmployeeType!=0) then begin testf = true; end;
              if (CUr.DealerType!=0) then begin testf = true; end;
              if ((CUr.CUType==0) and (CUr.VEType==0) and (CUr.GuestType==0) and (CUr.DealerType==0) and (CUr.EmployeeType==0)) then begin testf = true; end;
            end;
          case 1:
            if (CUr.VEType==0) then begin testf = false; end;
          case 2:
            if (CUr.GuestType==0) then begin testf = false; end;
          case 3:
            testf = false;
            if (CUr.VEType!=0) then begin testf = true; end;
            if (CUr.CUType!=0) then begin testf = true; end;
          otherwise
            if (CUr.VEType==0) then begin testf = false; end;
        end;
      end;
      if (testf) then begin
        if (printf) then begin
          StartFormat(15);
          OutString(0,"DblCUVc",CUr.Code,false);
          if (RepSpec.UsedOnly>0) then begin
            OutStringID(2,"DblPasteCUToJob",CUr.Name,false,CUr.Code);
          end else begin
            OutString(2,0,CUr.Name,false);
          end;
          OutString(3,0,CUr.Phone,false);
          EndFormat;
        end else begin
          if (cnt>100) then begin
            cnt = 0;
            acontact[cnt] = USetStr(24160);
            TrHs = false;
          end else begin
            acontact[cnt] = CUr.Code & "     " & CUr.Name;
          end;
        end;
        cnt = cnt + 1;
      end;  
    end;
  end;  
  if (cnt==0) then begin
    acontact[cnt] = USetStr(19391);
    cnt = cnt + 1;
  end;
  return;
end;

global
procedure SearchCuRn(record RcVc RepSpec)
begin
  record CUVc CUr;
  record LetVc Letr;
  boolean TrHs,testf;
  string 255 tstr;
  integer cnt, rw;
  record UserVc Userr;
  Array string 255 acontact;
  longint curtick;

	curtick = getcurtick();
  cnt = 0;
  rw = 1;
  switch (RepSpec.flags[0]) begin
    case 1:
      StartReportJob(USetStr(13538));
    otherwise
      StartReportJob(USetStr(13512));
  end;
  if (nonblank(RepSpec.f1)) then begin
    switch (RepSpec.ArtMode) begin
      case 0:tstr = USetStr(13513) & RepSpec.f1;
      case 1:tstr = USetStr(13514)  & RepSpec.f1;
      case 2:tstr = USetStr(13515)  & RepSpec.f1;
      case 3:tstr = USetStr(13516)  & RepSpec.f1;
      case 4:tstr = USetStr(13517)  & RepSpec.f1;
      case 5:tstr = USetStr(13518)  & RepSpec.f1;
      case 6:tstr = USetStr(13519)  & RepSpec.f1;
      case 7:tstr = USetStr(13520)  & RepSpec.f1;
      case 8:tstr = USetStr(12112)  & RepSpec.f1;
      otherwise tstr = "Not defined";
    end;
    Header(rw,tstr,1);
    rw = rw + 1;  
  end;
  EndHeader;
  if (blank(RepSpec.f1)) then begin
    goto LSearchCURn;
  end;
  GetCurUser(Userr);
  SetRepCol(2,120);
  SetRepCol(3,380);
  StartFormat(15);
  OutString(0,0,USetStr(13521),false);
  OutString(2,0,USetStr(13522),false);
  OutString(3,0,USetStr(13523),false);
  EndFormat;
  Gray_Divider(0,1);
  SearchCuRnResults(RepSpec,true,acontact,cnt);
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(0,0,USetStr(13524),false);
  OutVal(100,0,cnt,M40Val,true);
  EndFormat;
LSearchCURn:;
  EndJob;
	LogProcTime("SearchCuRn",getcurtick() - curtick);
  return;
end;

global
procedure CUNPTSSClassArrayOnOpen(record RcVc RepSpec,var Array string acontact,var Integer acnt)
begin
  SearchCuRnResults(RepSpec,false,acontact,acnt);
  return;
end;

global
procedure UserNPTSSClassArrayOnOpen(var Array string auser,var Integer acnt)
begin
  record UserVc Userr;
  Boolean found,testf;
  
  acnt = 0;
  found = true;
  while (LoopMain(Userr,1,found)) begin
    if (found) then begin
      testf = true;
      if (Userr.TerminatedFlag!=0) then begin testf = false; end;
      if (testf) then begin
        auser[acnt] = Userr.Code & "     " & Userr.Name;
        acnt = acnt + 1;
      end;
    end;
  end;
  return;
end;

global
procedure RestAccClassNPTSSClassArrayOnOpen(var Array string arestaccclass,var Integer acnt)
begin
  Boolean found;
  record RestAccClassVc RACr;
  
  found = true;
  while (LoopMain(RACr,1,found)) begin
    if (found) then begin
      arestaccclass[acnt] = RACr.Code & "     " & RACr.Comment;
      acnt = acnt + 1;
    end;
  end;
  return;
end;

procedure GetPurchItemPrice(string ItemCode,var val newprp)
begin
  record PIVc PIr;
  
  if (GetPurchaseItem(ItemCode,"",PIr)) then begin
    newprp = PIr.PurPrice;
    if (nonblank(PIr.CurncyCode)) then begin
      newprp = MulWithRateToBase1(PIr.CurncyCode,CurrentDate,newprp,DefaultCurRoundOff);
    end;
  end;
  return;
end;

function Boolean CalcItemPrice(record RcVc RepSpec,string plcode,var val exvatprice,record INVc INp,string formula,Integer roundof,var boolean AddPricef,date transdate)
begin
  record PFormVc PFr;
  record PLDefVc PLDr,PLDBaser;
  record PLVc PLr;
  Boolean res;
  Boolean pldfound;
  Boolean pricefoundf;
  val newpr,t;
  val t100;
  val frrate,to1,to2,br1,br2;
  Integer theroundof;
  string 20 plcurcode;
  roundmode rnd
  
  rnd = DefaultCurRoundoff;
  rnd.decimals = 0;
  rnd.step = kRoundingStep5;
  rnd.mode = kRoundingModeHalfDown;
  
  AddPricef = true;
  theroundof = roundof;
  res = false;
  pldfound = false;
  PLDr.Code = plcode;
  pldfound = ReadFirstMain(PLDr,1,true);
  newpr = BlankVal;
  t100 = 100;
  PFr.Code = formula;
  if (ReadFirstMain(PFr,1,true)) then begin
    switch (PFr.SelBase) begin
      case 0: 
        newpr = INp.InPrice;
      case 1: 
        newpr = INp.UPrice1;
      case 2: 
        newpr = INp.LastPurchPrice2;
      case 3: 
        newpr = INp.WeighedAvPrice;
      case 4: 
        GetPurchItemPrice(INp.Code,newpr);
      case 5:
        PLDBaser.Code = PFr.BasePriceList;
        pricefoundf = ReadFirstMain(PLDBaser,1,true);
        if (pricefoundf) then begin
          PLr.PLCode = PFr.BasePriceList;
          PLr.ArtCode = INp.Code;
          pricefoundf = ReadFirstMain(PLr,2,true);
          if pricefoundf then begin
            newpr = PLr.ExVatPrice;
          end;
        end;
    end;
    if (RepSpec.flags[1]<>0) then begin
      t = newpr * INp.Markup;
      t = t / t100;
      newpr = newpr + t;
    end;
    if (pldfound) then begin
    	if(nonblank(PLDr.CurncyCode))then begin
    		plcurcode = PLDr.CurncyCode;
    	end else begin
    		plcurcode = INp.LastPurchCurncyCode;
    	end;
      switch (PFr.SelBase) begin
        case 2:
          if (plcurcode<>INp.LastPurchCurncyCode) then begin
            if (nonblank(INp.LastPurchCurncyCode)) then begin
              newpr = DivWithRateToBase1(INp.LastPurchCurncyCode,transdate,newpr,DefaultCurRoundOff);
            end;
            if (nonblank(plcurcode)) then begin
              newpr = DivWithRateToBase1(plcurcode,transdate,newpr,DefaultCurRoundOff);
            end;
          end;
        case 5:
          if (plcurcode<>PLDBaser.CurncyCode) then begin
            if (nonblank(PLDBaser.CurncyCode)) then begin
              newpr = MulWithRateToBase1(PLDBaser.CurncyCode,transdate,newpr,DefaultCurRoundOff);
            end;
            if (nonblank(plcurcode)) then begin
              newpr = DivWithRateToBase1(plcurcode,transdate,newpr,DefaultCurRoundOff);
            end;
          end;
        otherwise
          if (nonblank(plcurcode)) then begin
            newpr = DivWithRateToBase1(plcurcode,transdate,newpr,DefaultCurRoundOff);
          end;
      end;
      if ((PFr.SelBase<>0) and (theroundof<>3)) then begin
        theroundof = 3;
      end;
    end;
    if (PFr.SelBase==5) and (pricefoundf==false) then begin
      switch (PFr.BasePriceListOption) begin
        case 0: //Don't add price
          AddPricef = false;
        case 1: //Add with zero price
          res = true;
          exvatprice = 0.00;
        case 2: //Use alternative price formula
          res = CalcItemPrice(RepSpec,plcode,exvatprice,INp,PFr.BasePriceListAltFormula,roundof,AddPricef,transdate);
      end;
      goto LCalcItemPrice;
    end;
    if(PFr.AddPerc>0)then begin// Edit ************************** BPI Ukraine - KramarAlexandr - 01, 18 05 2020 y. at 11:43:16 AM
    	if(newpr<=PFr.AddBeforeVal)then begin
    		PFr.Perc = PFr.AddPerc;
    	end;
    end;// Edit ************************** BPI Ukraine - KramarAlexandr - 01, 18 05 2020 y. at 11:43:18 AM
    newpr = newpr * PFr.Perc;
    newpr = newpr / 100;
    if (PFr.RndTo==-3) then begin
      PFr.RndTo = -4; //Edit***************************Sasha2,15:12 03.06.2015
    end;
    newpr = Round(newpr + PFr.Add1Val,SetRoundModeD(PFr.RndTo));
    
    
    if(CompanyIsJWLikeCompany(currentcompany))then begin
    	newpr = Round(newpr + PFr.Add2Val,rnd);// Edit ************************** Friday, 24 May 2013 14:08:31
    end else begin
			newpr = Round(newpr + PFr.Add2Val,SetRoundModeD(roundof));
    end;
    
    if (newpr<>exvatprice) then begin
      res = true;
      exvatprice = newpr;
    end;
  end;
LCalcItemPrice:;
  CalcItemPrice = res;
  return;
end;

global procedure CalcPricesFromPORn(record RcVc RepSpec)
begin
	integer i,mtrw,j,pldmtrw;
	record POVc POr;
	record PLVc PLr;
	row POVc POrw;
	record PLDefVc PLDefr;
	row PLDefVc PLDefrw;
	string 5 curcode,pldcur;
	record BaseCurBlock BCb;
	boolean res,AddPricef;
	val exvatprice;
	string 100 formula,infr,into,infr2,into2;
	record INVc INr;
	val fr,to1,to2,br1,br2;
	val frp,to1p,to2p,br1p,br2p;
	record PFormVc PFr;
	longint curtick;
	
	curtick = getcurtick();
	blockload(BCb);
	
	POr.SerNr = RepSpec.long1;
	readfirstmain(POr,1,true);
	curcode = BCb.BaseCur1;
	pldcur = curcode;
	mtrw = matrowcnt(POr);
	
	GetFullCurncyRate(POr.CurncyCode,POr.TransDate,fr,to1,to2,br1,br2);
	if(fr==0 or to1==0)then begin
		fr=1; to1=1;
	end;
	
	
	startreportnoheaderjob("Расчет розничных цен для товаров из заказа поставщику");
	
		startformat(15);
			outstring(0,0,"Артикул",false);
			outstring(100,0,"Наименование",false);
			outstring(200,0,"Валюта текущей розницы",false);
			outstring(300,0,"Текущая розница",false);
			outstring(400,0,"Валюта рассчитанной розницы",false);
			outstring(1,0,"Рассчитанная розница",true);
		endformat;
		
		PLDefr.Code = "RRP";
		readfirstmain(PLDefr,1,true);
		if(nonblank(PLDefr.CurncyCode))then begin
			curcode = PLDefr.CurncyCode;
			pldcur = PLDefr.CurncyCode;
		end;
		pldmtrw = matrowcnt(PLDefr);
		For(i=0;i<mtrw;i=i+1) begin
			matrowget(POr,i,POrw);	
			INr.Code = POrw.ArtCode;
			if(readfirstmain(INr,1,true))then begin
				RepSpec.f2 = INr.Code;
				RepSpec.f3 = INr.Group;
				For(j=0;j<pldmtrw;j=j+1) begin
					matrowget(PLDefr,j,PLDefrw)
					switch (PLDefrw.CodeType) begin
						case 0:
							if(blank(PLDefrw.DispGroups))then begin// Edit ************************** Thursday, 20 August 2015 14:38:54
								if (nonblank(RepSpec.f3)) then begin
									if (PLDefrw.ItemCode==RepSpec.f3) then begin
										formula = PLDefrw.Formula;
									end;
								end else begin
									if (PLDefrw.ItemCode==RepSpec.f3) then begin
										formula = PLDefrw.Formula;
									end;
								end;
							end else begin// Edit ************************** Thursday, 20 August 2015 14:39:35
								if(setinset(PLDefrw.DispGroups,INr.DispGroups))then begin// Edit ************************** Thursday, 20 August 2015 14:39:32
									if (nonblank(RepSpec.f3)) then begin
										if (PLDefrw.ItemCode==RepSpec.f3) then begin
											formula = PLDefrw.Formula;
										end;
									end else begin
										if (PLDefrw.ItemCode==RepSpec.f3) then begin
											formula = PLDefrw.Formula;
										end;
									end;
								end;
							end;
						case 1:
							if (nonblank(RepSpec.f2)) then begin
								infr = FirstInRange(RepSpec.f2,20);
								into = LastInRange(RepSpec.f2,20);
								infr2 = FirstInRange(PLDefrw.ItemCode,20);
								into2 = LastInRange(PLDefrw.ItemCode,20);
								if(blank(PLDefrw.ItemCode) and nonblank(RepSpec.f2))then begin
										PLDefrw.ItemCode = RepSpec.f2;// Edit ************************** Thursday, 21 February 2013 10:48:53
								end;
								if(nonblank(infr2) and nonblank(into2))then begin// Edit ************************** Thursday, 21 February 2013 10:14:59
									if (into>=infr2) then begin
										if (infr<=into2) then begin
											formula = PLDefrw.Formula;
										end;
									end;
								end else begin// Edit ************************** Thursday, 21 February 2013 10:15:00
										formula = PLDefrw.Formula;
								end;// Edit ************************** Thursday, 21 February 2013 10:15:01
							end else begin
								formula = PLDefrw.Formula;
							end;
					end;
				end; 
								
				startformat(15);
					outstring(0,0,POrw.ArtCode,false);
					outstring(100,0,POrw.Spec,false);
					curcode = pldcur;
					PLr.PLCode = "RRP";
					PLr.ArtCode = POrw.ArtCode;
					if(readfirstmain(PLr,2,true))then begin
						if(nonblank(PLr.CurncyCode))then begin
							curcode = PLr.CurncyCode;
						end;
						end else begin
							PLr.ExVatPrice = blankval;
					end;
					GetFullCurncyRate(curcode,POr.TransDate,frp,to1p,to2p,br1p,br2p);
					if(frp==0 or to1p==0)then begin
						frp=1; to1p=1;
					end;
					exvatprice = 0;
					
					res = CalcItemPrice(RepSpec,"RRP",exvatprice,INr,formula,3,AddPricef,POr.TransDate);
					
					outstring(200,0,curcode,false);
					outstring(300,0,PLr.ExVatPrice,false);
					outstring(400,0,INr.LastPurchCurncyCode,false);
					outstring(1,0,exvatprice,true);
				endformat; 
			end; 
		end; 
		
		
	endjob;
	LogProcTime("CalcPricesFromPORn",getcurtick() - curtick);
return;
end;

global procedure BlankObjInRn(record RcVc RepSpec)
begin
Array string 10 AccList;
record VIVc VIr;
record TRVc TRr,tempTRr;
row TRVc TRrw,tempTRrw;
record POVc POr;
record RetPUVc RetPUr;
record PUVc PUr;
record ORVc ORr;
record IVVc IVr;
record RetVc Retr;
integer i;
Boolean TrHs, TrHs1;
string 100 tstr;
longint curtick;	
	
	startreportnoheaderjob("Пустые объекты");
	
	curtick = getcurtick();
	startformat(15);
		outstring(0,0,"Номер заказа поставщика",false);
		outstring(110,0,"Номер транзакции",false);
		outstring(220,0,"Тип транзакции",false);
	endformat;	
	
	VIr.SerNr = "";
	while(loopmain(VIr,1,true))begin
		TRr.Number = VIr.SerNr;
		TRr.IntYc = VIYc;
		if (ReadFirstMain(TRr,2,true)) then begin
			RecordCopy(tempTRr,TRr);
			if(nonblank(VIr.POSerNr)) then begin
					POr.SerNr = VIr.POSerNr;
					if(ReadFIrstMain(POr,1,true)) then begin
						if(blank(POr.IDPrjNum)) then begin
							startformat(15);
								outstring(0,0,POr.SerNr,false);
								outstring(110,0,TRr.Number,false);
								ToStrTRCode(tstr,TRr.IntYc,TRr.Number);
								outstring(220,0,tstr,false);
							endformat;	
						end;
					end;
			end;
		end;	
	end;
	RetPUr.SerNr = "";
	while(loopmain(RetPUr,1,true))begin
		TRr.Number = RetPUr.SerNr;
		TRr.IntYc = RetPUYc;
		if (ReadFirstMain(TRr,2,true)) then begin
			RecordCopy(tempTRr,TRr);
			if(nonblank(RetPUr.PONr)) then begin
					POr.SerNr = RetPUr.PONr;
					if(ReadFIrstMain(POr,1,true)) then begin
						if(blank(POr.IDPrjNum)) then begin
							startformat(15);
								outstring(0,0,POr.SerNr,false);
								outstring(110,0,TRr.Number,false);
								ToStrTRCode(tstr,TRr.IntYc,TRr.Number);
								outstring(220,0,tstr,false);
							endformat;	
						end;
					end;
			end;
		end;	
	end;
	PUr.SerNr = "";
	while(loopmain(PUr,1,true))begin
		TRr.Number = PUr.SerNr;
		TRr.IntYc = PUYc;
		if (ReadFirstMain(TRr,2,true)) then begin
			RecordCopy(tempTRr,TRr);
			if(nonblank(PUr.PONr)) then begin
					POr.SerNr = PUr.PONr;
					if(ReadFIrstMain(POr,1,true)) then begin
						if(blank(POr.IDPrjNum)) then begin
							startformat(15);
								outstring(0,0,POr.SerNr,false);
								outstring(110,0,TRr.Number,false);
								ToStrTRCode(tstr,TRr.IntYc,TRr.Number);
								outstring(220,0,tstr,false);
							endformat;	
						end;
					end;
			end;
		end;	
	end;
	
	ORr.SerNr = "";
	while(loopmain(ORr,1,true))begin
		POr.OrdNr = ORr.SerNr;
		TrHs = true;
		if(ReadFIrstKey("OrdNr",POr,1,true)) then begin
			IVr.OrderNr = ORr.SerNr;
			while(LoopKey("OrderNr",IVr,1,TrHs)) begin	
				if(IVr.OrderNr!=ORr.SerNr) then begin TrHs = false; end;
				if(TrHs) begin
					TRr.Number = IVr.SerNr;
					TRr.IntYc = IVYc;
					if (ReadFirstMain(TRr,2,true)) then begin
						RecordCopy(tempTRr,TRr);
									if(blank(POr.IDPrjNum)) then begin
										startformat(15);
											outstring(0,0,POr.SerNr,false);
											outstring(110,0,TRr.Number,false);
											ToStrTRCode(tstr,TRr.IntYc,TRr.Number);
											outstring(220,0,tstr,false);
										endformat;	
									end;
					end;	
				end;	
			end;
			ResetLoop(IVr);
			Retr.OrdNr = ORr.SerNr;
			TrHs1 = true;
			while(LoopKey("OrdNr",Retr,1,TrHs1)) begin	
			if(Retr.OrdNr!=ORr.SerNr) then begin TrHs1 = false; end;
				if(TrHs1) begin
					TRr.Number = Retr.SerNr;
					TRr.IntYc = RetYc;
					if (ReadFirstMain(TRr,2,true)) then begin
						RecordCopy(tempTRr,TRr);
									if(blank(POr.IDPrjNum)) then begin
										startformat(15);
											outstring(0,0,POr.SerNr,false);
											outstring(110,0,TRr.Number,false);
											ToStrTRCode(tstr,TRr.IntYc,TRr.Number);
											outstring(220,0,tstr,false);
										endformat;	
									end;
					end;	
				end;	
			end;
			Resetloop(Retr);
		end;	
	end;

	endjob;
	LogProcTime("BlankObjInRn",getcurtick() - curtick);
return;
end;