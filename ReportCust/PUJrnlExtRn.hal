//server-only
external  function string 100 BPICodeToName(string);

SetLangMode(LangRussian,"RUS",0);

global procedure PUJrnlExtRn(record RcVc RepSpec)
begin
  record PUVc PUr;
  record INVc INr,dupINr;
  row PUVc PUrw;
  record CompaniesBlock Compb;
  row CompaniesBlock Comprw;
  integer rwcnt,i;
  boolean TrHs,testf,testf2,testf1;
  record ItemDuplicatesVc IDr;
  vector string 255 DubCodes;
  
  startreportnoheaderjob("Журнал Поступлений Расширенный");
  
  startformat(15);
    outstring(0,0,"Период",false);
    outstring(100,0,RepSpec.sStartDate & ":" & RepSpec.sEndDate,false);
  endformat;
  
  BlockLoad(Compb);
  matrowget(Compb,currentcompany-1,Comprw);
  startformat(15);
    outstring(0,0,"Компания",false);
    outstring(100,0,Comprw.CompName,false);
  endformat;
  
  startformat(15);
  
  outstring(0,0,USetStr(31042),false);
  outstring(0,0,USetStr(31043),false);
  outstring(0,0,USetStr(36287),false); // Orirginal item code
  outstring(0,0,"Коды дубликатов",false);
  outstring(0,0,USetStr(12815),false); //Sklad
  outstring(0,0,USetStr(31044),false); //Brand
  outstring(0,0,USetStr(12713),false); //Naimenovanie
  
  outstring(0,0,"Collection",false); 
  outstring(0,0,"Group",false); 
  outstring(0,0,"SubGroup",false);
  outstring(0,0,"Category",false);
  outstring(0,0,"Material",false); 		
  outstring(0,0,"Colour",false); 
  outstring(0,0,"Year",false); 
  outstring(0,0,"Life",false); 
  outstring(0,0,"Size",false); 
  outstring(0,0,"Use",false);
  outstring(0,0,"Sex",false);
  outstring(0,0,"Plating",false);	
  outstring(0,0,"CC Collection",false); 						
  outstring(0,0,"Clarity",false);
  outstring(0,0,"Weight",false); 
  outstring(0,0,"Cut",false); 
  outstring(0,0,"Shape",false);
  outstring(0,0,"Stone",false); 
  outstring(0,0,"Strap",false);
  outstring(0,0,"Odour",false);
  outstring(0,0,"Product Group",false);
  
  
  outstring(0,0,"Quant",false);
  outstring(0,0,"Price",false);
  outstring(0,0,"Curncy",false);
  outstring(0,0,"Cost",false);
  
  
  endformat;
  
  PUr.TransDate = RepSpec.sStartDate;
  TrHs = true;
  while(loopkey("TransDate",PUr,1,TrHs))begin
    testf = true;
    if(PUr.TransDate>RepSpec.sEndDate)then begin TrHs = false; testf = false; end;
    
    if(testf)then begin
      rwcnt = matrowcnt(PUr);
      for(i=0;i<rwcnt;i=i+1)begin
        matrowget(PUr,i,PUrw);
        startformat(15);
        
        
          INr.Code = PUrw.ArtCode;
          testf1 = true;
          testf2 = true;
          IDr.DupCode = PUrw.ArtCode;
          if(ReadFirstKey("DupCode",IDr,1,true) and testf1) then begin
            dupINr.Code = IDr.OrigCode;
            while(LoopMain(dupINr,1,testf2)) begin
              if(dupINr.Code!=IDr.OrigCode) then begin testf2 = false; end;
              if(dupINr.BPIBrand==IDr.OrigBrandCode and testf2) then begin
                INr.Code = IDr.OrigCode;
                DubCodes[IDr.OrigCode] = IDr.DupCode;
              end;
            end;
          end;
          readfirstmain(INr,1,true);
          
          if(Left(INr.Code,3)=="IN_") then begin
            outstring(0,0,INr.AlternativeCode,false);
            outstring(0,0,INr.Code,false);
          end else begin
            if (left(INr.Code,2)=="IN" and currentcompany==29) then begin
              outstring(0,0,Right(INr.GlobalArtCode,len(INr.GlobalArtCode)-9),false);
              outstring(0,0,INr.Code,false);
            end else begin
              outstring(0,0,INr.Code,false);
              outstring(0,0,INr.AlternativeCode,false);
            end;
          end;
          outstring(0,0,INr.OrigCode,false);  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 10:48 27.08.2019
					outstring(0,0,DubCodes[INr.Code],false);
          outstring(0,0,PUr.Location,false);
          outstring(0,0,BPICodeToName(INr.BPIBrand),false);
          outstring(0,0,INr.Name,false);
  
          outstring(0,0,BPICodeToName(INr.BPICollection),false);
          outstring(0,0,BPICodeToName(INr.BPIGroup),false); 
          outstring(0,0,BPICodeToName(INr.BPISubGroup),false); 
          outstring(0,0,BPICodeToName(INr.BPICategory),false); 
          outstring(0,0,BPICodeToName(INr.BPIMaterial),false);
          outstring(0,0,BPICodeToName(INr.BPIColor),false);//Edit_-_-_-_-_-_-_-_-Anton 13:26 07.05.2018	
          outstring(0,0,INr.High,false);
          outstring(0,0,INr.Life2,false);
          outstring(0,0,BPICodeToName(INr.BPISize),false);//Edit_-_-_-_-_-_-_-_-Anton 13:26 07.05.2018
          outstring(0,0,BPICodeToName(INr.BPIUse),false);
          outstring(0,0,BPICodeToName(INr.BPISex),false); 	
          outstring(0,0,BPICodeToName(INr.BPIPlating),false);
          if (INr.BPIBrand=="BRND0046") then begin
            outstring(0,0,INr.CCCollectName,false);
          end else begin
            outstring(0,0,"",false);
          end;				
          outstring(0,0,BPICodeToName(INr.BPIClarity),false);
          outstring(0,0,BPICodeToName(INr.BPIWeight),false);	
          outstring(0,0,BPICodeToName(INr.BPICut),false); 
          outstring(0,0,BPICodeToName(INr.BPIShape),false);    
          outstring(0,0,BPICodeToName(INr.BPIStone),false); 
          outstring(0,0,BPICodeToName(INr.BPIStrap),false); 
          outstring(0,0,BPICodeToName(INr.BPIOdour),false);
          if (CurrentCompany==25) then begin
            outstring(0,0,INr.SNOne,false);
          end else begin
            outstring(0,0,"",false);
          end;
          
          
          outstring(0,0,PUrw.Quant,false);
          outstring(0,0,PUrw.UPrice,false);
          outstring(0,0,PUr.CurncyCode,false);
          outstring(0,0,PUrw.CostPrice,false);

          
          
        endformat;
      end;
    end;
  end;
  
  endjob;

return;
end;