external  function string 100 BPICodeToName(string);

SetLangMode(LangRussian,"RUS",0);

global //  by Ira
updating procedure ItemRepRn(record RcVc RepSpec)
begin
	record INVc INr;
	record ItemStatusVc ISr;
	boolean trhs, trhs1, trhs2, trhs3, b;
	record PISVc PISr;
	array string 255 brands;
	record BPIBrandVc Brandr;
	record ITVc ITr;

	if(currentcompany==28)then begin
		while(loopmain(ITr,1,true))begin
			brands[ITr.Code] = ITr.Comment;
		end;
	end;
	
	while(loopMain(Brandr,1,true)) begin
		brands[Brandr.Code] = Brandr.Name;
 	end;
	
	startreportnoheaderjob("ItemRepRn");
	startformat(15);
		outstring(0,0,"Код",false);
		outstring(0,0,"Код поставщика",false);
		outstring(50,0,"Название",false);
		outstring(110,0,"Полка",false);
		outstring(150,0,"Ячейка",false);
		outstring(210,0,"Склад",false);
		outstring(280,0,"Кол-во",false);
		outstring(400,0,"Место",false);
		outstring(450,0,"Кол-во на месте",false);
		outstring(350,0,"Бренд",false);
		outstring(400,0,"Group",false);
		outstring(400,0,"SubGroup",false);
		outstring(400,0,"Collection",false);
		
		
	endformat;
	
	INr.BPIBrand = RepSpec.f1;

	while (loopmain(INr,1,true)) begin
		trhs = true;
		if(nonblank(RepSpec.f1) and INr.BPIBrand != RepSpec.f1) then begin trhs = false; end;
		if(nonblank(RepSpec.f2) and INr.Group != RepSpec.f2) then begin trhs = false; end;
		
		if(blank(INr.Department) and blank(INr.InvCode)) then begin trhs = false; end;
		
		if(trhs) then begin
			if(blank(INr.BPIBrand))then begin
				INr.BPIBrand = INr.Group;
			end;
			trhs2 = true;
			ISr.Code = INr.Code;
			b = false;
			While(loopMain(ISr,1,trhs2)) begin
				if(ISr.Code != INr.Code) then begin trhs2 = false; end;
				if(trhs2) then begin
					if(ISr.Location != ";;;") begin				
						PISr.ArtCode = INr.Code;
						trhs3 = true;
						While(loopMain(PISr,1,trhs3)) begin
							if(PISr.ArtCode!=INr.Code) then begin trhs3 = false; end;							
							if(trhs3 and PIsr.Location!=";;;" and PISr.Location==ISr.Location) then begin
								b = true;
								startformat(15);
									outstring(0,0,INr.Code,false);
									outstring(0,0,INr.AlternativeCode,false);
									outstring(50,0,INr.Name,false);
									outstring(110,0,INr.Department,false);
									outstring(150,0,INr.InvCode,false);
									outstring(210,0,ISr.Location,false);
									outstring(280,0,ISr.Instock,false);
									outstring(400,0,PISr.Position,false);
									outstring(450,0,PISr.Instock,false);
									outstring(350,0,brands[INr.BPIBrand],false);
									outstring(400,0,BPICodeToName(INr.BPIGroup),false);
									outstring(400,0,BPICodeToName(INr.BPISubGroup),false);
									outstring(400,0,BPICodeToName(INr.BPICollection),false);
								endformat;
							end;
						end;
						resetLoop(PISr);
						if(b==false) then begin
							b = true;
							startformat(15);
								outstring(0,0,INr.Code,false);
								outstring(0,0,INr.AlternativeCode,false);
								outstring(50,0,INr.Name,false);
								outstring(110,0,INr.Department,false);
								outstring(150,0,INr.InvCode,false);
								outstring(210,0,ISr.Location,false);
								outstring(280,0,ISr.Instock,false);
								outstring(400,0,"-",false);
								outstring(450,0,"-",false);
								outstring(350,0,brands[INr.BPIBrand],false);
								outstring(400,0,BPICodeToName(INr.BPIGroup),false);
								outstring(400,0,BPICodeToName(INr.BPISubGroup),false);
								outstring(400,0,BPICodeToName(INr.BPICollection),false);
							endformat;
						end;
					end;
				end;
			end;
			if(b==false) then begin
				b = true;
				startformat(15);
					outstring(0,0,INr.Code,false);
					outstring(0,0,INr.AlternativeCode,false);
					outstring(50,0,INr.Name,false);
					outstring(110,0,INr.Department,false);
					outstring(150,0,INr.InvCode,false);
					outstring(210,0,"",false);
					outstring(280,0,"",false);
					outstring(400,0,"-",false);
					outstring(450,0,"-",false);
					outstring(350,0,brands[INr.BPIBrand],false);
					outstring(400,0,BPICodeToName(INr.BPIGroup),false);
					outstring(400,0,BPICodeToName(INr.BPISubGroup),false);
					outstring(400,0,BPICodeToName(INr.BPICollection),false);
				endformat;
			end;
    end;
		resetLoop(ISr);
		
	end;
	
	endjob;

return;
end;
