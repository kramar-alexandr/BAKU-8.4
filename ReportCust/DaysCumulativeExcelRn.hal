//server-only
external function string 255 MonthName(Date);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external function val IVToBaseMy(record IVVc,row IVVc,val);
external function Boolean GetPMRow(string,var row PMBlock);
external procedure GetObjs(string,string,var string);
external function val AbsoluteVal(val);
external function roundmode SetRoundModeD(Integer);
external procedure GetFullCurncyRate(var string,Date,var val,var val,var val,var val,var val);
external function string 255 StrReplace(string,string,string);

external procedure XmlXlsxWorkBegin(string,string);
external procedure CreateSheetsXLSX(integer,array string,string,integer,boolean);
external procedure EndSheet(integer,string,integer);
external procedure SetSheetsCols(integer,array val,array integer,string);
external procedure BeginSheetData(integer,string);
external procedure EndSheetData(integer,string);
external procedure BeginRow(integer,string,integer,integer,val);
external procedure EndRow(integer,string,var integer);
external procedure StringCell(integer,string,var integer,integer,integer,string,var array string,var integer,var integer);
external procedure NumericCell(integer,string,var integer,integer,integer,val);
external procedure EmptyCell(integer,string,var integer,integer,integer,integer);
external procedure MergeCells(integer,string,array string,integer);
external procedure FillSharedStrings(string,array string,integer,integer,array string);
external procedure ConvertToXLSX(string,boolean);
external procedure LogProcTime(string,longint);

SetLangMode(LangRussian,"RUS",0);

procedure DaysCumulativeExcel(record RcVc RepSpec)
begin
  array string 255 LocArr,MonthArr,ConsultArr,NameArr;
  boolean TrHs,TrHs2,testf,testf2,emptyf,giftf,InvoiceRowTypeDownpaymentf;
  date startdate,enddate;
  record IVVc IVr,tIVr;
  record LocationVc Locr;// Склады
  record UserVc Userr; //Сотрудники
  record GCSVc GCSr; //Проданные подарочные ваучеры
  record ObjVc Objr; //Объекты для транзакций
  record IPVc IPr;//Платежи клиентов
  record TRVc TRr;//Транзакции
  record ORVc ORr;//Счета клиентов
  record ARPayHistVc ARPayHistr;//Служебный регистр - История платежей клиентов
  record CUVc CUr;//Edit-------------------Vitalii 15:57 13.11.2017 //Контакты
  record PDVc PDr;//Условия оплаты
  row IVVc IVrw,tIVrw;
  row IPVc IPrw;
  row PMBlock PMrw;
  row TRVc TRrw;
  row ORVc ORrw;
  string 255 tstr,month,store;
  integer rwcnt,rwcnt2,rwcnt3,LAi,MAi,CAi,i,j,k,artcnt,artqty;
  val sumoborot,sumvozvrat,recivedmoneybase,prepayment,gifted,giftsertpaym,loyaltypaym,percent,printedrmb,
      sumbase,fr,to1,to2,br1,br2,printedprepval,rmbpart;
  vector boolean LocInArr,MonthInArr,ConsultInArr,MonthLoc;//Тип данных vector - массив с доступом к элементу по строковому индексу
  vector string 100 LocName,ConsultName;
  vector val Oborot,Vozvrat;
  boolean f1,f2,curfound;
  record CompaniesBlock Compb;// Список компаний на сервере
  row CompaniesBlock Comprw;// row - матрица регистра - для SQL - запись в таблице CompaniesBlock.math
  
  array string 50 sheetNames;
	array val sheetColls;
	array string 21 mergeCell;
	string 255 fileToSave;
	integer qtyOfSheets,sheetnum,rownum,colnum,style,qtyOfEmpStr;
	array string 100 SharedStrings;
	integer numOfUniqueSharedStrings,numOfSharedStrings,qtyMergeCell;
	string 6 reportName;
  array string 255 mas;
  array integer lvlArray;
  longint curtick;
	
	curtick = getcurtick();
  setexportcodepage("UTF8");
  
  BlockLoad(Compb);//BlockLoad - Запрос из БД блока - всегда одна запись в базе
  MatRowGet(Compb,currentcompany-1,Comprw);
  Userr.Code = "";//Стартовая позиция для следующей функции LoopMain. Записи будут листаться начиная с той, в которой "Userr.Code = ""; "
  TrHs = true;
  while (LoopMain(Userr,1,TrHs)) begin//Сбор масива сотрудников // LoopMain - перебор записей одной таблицы. При каждой итерации запись таблицы передается в объект Userr
    if ((Userr.IsSalesMan!=0) and (Userr.Closed==0)) then begin
      ConsultInArr[Userr.Code] = true;
      ConsultArr[CAi] = Userr.Code;
      CAi = CAi + 1;
      if nonblank(Userr.Name) then begin
        ConsultName[Userr.Code] = Userr.Name;
      end else begin
        ConsultName[Userr.Code] = Userr.Code;
      end;
    end;
  end;
  if (nonblank(RepSpec.sStartDate)) then begin
    startdate = RepSpec.sStartDate;
    enddate = RepSpec.sEndDate;
  end else begin
    startdate = StringToDate("01/01/" & getyear(CurrentDate));
    enddate = StringToDate("31/12/" & getyear(CurrentDate));
  end;
  IVr.InvDate = startdate;
  TrHs = true;
  logtext(0,"DaysCumulativeExcel ConsultArr length " & CAi);
  while(loopkey("InvDate",IVr,1,TrHs))begin//Цикл по сч/ф отсортированым по дате//loopkey перебирает по одной записи по порядку и позвращает их в переменную IVr
    testf = true;
    if (IVr.InvDate>enddate) then begin TrHs = false; testf = false; end;
    if nonblank(RepSpec.ObjStr) then begin
      store = "";
      GetObjs("STORE",IVr.Objects,store);//Возвращает объект типа STORE из списка объектов сч/ф
      if (RepSpec.ObjStr!=store) then begin testf = false; end;
    end;
    if (IVr.OKFlag==0) then begin testf = false; end;
    if (IVr.Invalid==1) then begin testf = false; end;
    //if (IVr.CustCode=="FOB36") then begin testf = false; end;
    if (testf) then begin
      rwcnt = matrowcnt(IVr);//Счетчик записей в матрице объекта IVr
      for (i=0;i<rwcnt;i=i+1) begin
        matrowget(IVr,i,IVrw); //Выгрузка объекта i строки из IVr в объект IVrw
        if (IVrw.stp==kInvoiceRowTypeDownpayment) then begin//kInvoiceRowTypeDownpayment - тип строки сч/ф авансовый платеж
          i = rwcnt;
          testf = false;
        end;
      end;
    end;
    if (testf) then begin
      if (RepSpec.flags[1]==1) then begin
        store = Comprw.ShortName;//Название компании
        if (LocInArr[store]==false) then begin
          LocInArr[store] = true;
          LocArr[LAi] = store;
          LAi = LAi + 1;
          LocName[store] = Comprw.CompName;
        end;
      end else begin
        store = "";
        GetObjs("STORE",IVr.Objects,store);
        if (LocInArr[store]==false) then begin
          LocInArr[store] = true;
          LocArr[LAi] = store;
          LAi = LAi + 1;
          Locr.Code = store;
          if (ReadFirstMain(Locr,1,true)) then begin //Запрос одной записи из базы данных, в которой Locr.Code = store; (строка выше)
            LocName[store] = Locr.Name;
          end else begin
            Objr.Code = store;
            if (ReadFirstMain(Objr,1,true)) then begin
              LocName[store] = StrReplace(Objr.Comment,"&","_");
            end else begin
              LocName[store] = store;
            end;
          end;
        end;
      end;
      if (ConsultInArr[IVr.SalesMan]==false) then begin
        ConsultInArr[IVr.SalesMan] = true;
        ConsultArr[CAi] = IVr.SalesMan;
        CAi = CAi + 1;
        Userr.Code = IVr.SalesMan;
        if (ReadFirstMain(Userr,1,true)) then begin
          ConsultName[IVr.SalesMan] = Userr.Name;
        end else begin
          ConsultName[IVr.SalesMan] = IVr.SalesMan;
        end;
      end;
      month = getmonth(IVr.InvDate) & "_" & getyear(IVr.InvDate);///  & - оператор соединения строк
      if (MonthInArr[month]==false) then begin
        MonthInArr[month] = true;
        MonthArr[MAi] = month;
        MAi = MAi + 1;
      end;
      MonthLoc[month & ";" & store] = true;
      tstr = store & ";" & month & ";" & IVr.SalesMan & ";";
      /*if (IVr.CustCode=="FOB36") then begin
        tstr = store & ";" & month & ";FOB36;";
      end;*/
      if (left(IVr.CustCode,3)=="FOB") then begin//Edit-------------------Vitalii 15:52 13.11.2017
        CUr.Code = IVr.CustCode;
        readfirstmain(CUr,1,true);//readfirstmain - запрос в базу данных записи регистра CUr где условия совпадают с предыдущими несколькими строками. В данном слуучае  CUr.Code = IVr.CustCode;
        if (CUr.CustCat=="STORE") then begin
          tstr = store & ";" & month & ";FOB36;";
        end;
      end;
      if (IVr.PayDeal=="CN") then begin
        tIVr.SerNr = IVr.CredInv;
        readfirstmain(tIVr,1,true);
        testf2 = true;
        if (tIVr.OKFlag==0) then begin testf2 = false; end;
        if (tIVr.Invalid==1) then begin testf2 = false; end;
        if (tIVr.InvDate<startdate) then begin testf2 = false; end;
        if (tIVr.InvDate>enddate) then begin testf2 = false; end;
        if (testf2) then begin
					if(left(IVr.CustCode,3)=="FOB")then begin
          	//Vozvrat[tstr & "chek"] = Vozvrat[tstr & "chek"] + tIVr.BaseSum4/IVr.BaseSum4;
        	end else begin
          	Vozvrat[store & ";" & getmonth(tIVr.InvDate) & "_" & getyear(tIVr.InvDate) & ";" & getday(tIVr.InvDate) & ";" & "chek"] = Vozvrat[store & ";" & getmonth(tIVr.InvDate) & "_" & getyear(tIVr.InvDate) & ";" & getday(tIVr.InvDate) & ";" & "chek"] + tIVr.BaseSum4/IVr.BaseSum4;
        	end;
        end;
      end else begin
        sumvozvrat = 0;
        sumoborot = 0;
        recivedmoneybase = 0;
        prepayment = 0;
        gifted = 0;
        giftsertpaym = 0;
        loyaltypaym = 0;
        rwcnt = matrowcnt(IVr);
        for (i=0;i<rwcnt;i=i+1) begin
          matrowget(IVr,i,IVrw);
          if (IVrw.stp==kInvoiceRowTypeLoyaltyPointsPayment) then begin//тип строки Оплата баллами лояльности
            loyaltypaym = loyaltypaym + IVToBaseMy(IVr,IVrw,IVrw.Sum);
            recivedmoneybase = recivedmoneybase + IVToBaseMy(IVr,IVrw,IVrw.Sum);
          end;
          if (IVrw.stp==kInvoiceRowTypePrepayment) then begin//тип строки Использование предоплаты
            prepayment = prepayment + IVToBaseMy(IVr,IVrw,IVrw.Sum);
          end;
          if (IVrw.stp==kInvoiceRowTypeCashPayment) then begin//тип строки Оплата наличными
            recivedmoneybase = recivedmoneybase + IVToBaseMy(IVr,IVrw,IVrw.Sum);
          end;
          if (IVrw.stp==kInvoiceRowTypeCreditCardPayment) then begin//тип строки Оплата Кредитной картой
            if ((IVrw.PayMode=="G") or (IVrw.PayMode=="GS") or (IVrw.PayMode=="D")) then begin
              gifted = gifted + IVToBaseMy(IVr,IVrw,IVrw.Sum);
            end else begin
            	if(IVrw.Comment=="FIRST" and nonblank(IVrw.SerialNr))then begin// Edit ************************** BPI Ukraine - KramarAlexandr - 04, 26 12 2019 y. at 4:02:07 PM
            		gifted = gifted + IVToBaseMy(IVr,IVrw,IVrw.Sum);
            	end;
            end;
            recivedmoneybase = recivedmoneybase + IVToBaseMy(IVr,IVrw,IVrw.Sum);
          end;
          if (IVrw.stp==kInvoiceRowTypeGiftVoucherPayment) then begin//тип строки Оплата подарочным ваучером
            //giftsertpaym = giftsertpaym + IVToBaseMy(IVr,IVrw,IVrw.Sum);
            recivedmoneybase = recivedmoneybase + IVToBaseMy(IVr,IVrw,IVrw.Sum);
          end;
        end;
        if ((currentcompany==9) and (IVr.PayDeal=="F")) then begin
          recivedmoneybase = 0;
        end;
        recivedmoneybase = recivedmoneybase - gifted - giftsertpaym - loyaltypaym;
        PDr.Code = IVr.PayDeal;
        readfirstmain(PDr,1,true);
        if (PDr.PDType==kInvoiceTypeCash) then begin
          percent = recivedmoneybase/(recivedmoneybase + giftsertpaym + prepayment + loyaltypaym);
        end else begin
          percent = recivedmoneybase/(recivedmoneybase + giftsertpaym + prepayment + loyaltypaym - IVr.RetValue);
        end;
        if (recivedmoneybase!=0) then begin
          printedrmb = 0;
          artqty = 0;
          for (i=0;i<rwcnt;i=i+1) begin
            matrowget(IVr,i,IVrw);
            if ((IVrw.stp==kInvoiceRowTypeNormal) or (IVrw.stp==kInvoiceRowTypeGiftVoucherSold)) then begin//тип строки Продажа подарочного ваучера
              artqty = artqty + 1;
            end;
          end;
          artcnt = 0;
          for (i=0;i<rwcnt;i=i+1) begin
            matrowget(IVr,i,IVrw);
            if (IVrw.stp==kInvoiceRowTypeNormal) then begin
              artcnt = artcnt + 1;
              if (artcnt==artqty) then begin
                sumbase = recivedmoneybase - printedrmb;
              end else begin
                sumbase = round(IVrw.Sum/IVr.Sum4*recivedmoneybase,SetRoundModeD(2));
                printedrmb = printedrmb + sumbase;
              end;
              if (IVrw.Quant<0) then begin
                Vozvrat[tstr & "naim"] = Vozvrat[tstr & "naim"] - IVrw.Quant*percent;
                sumvozvrat = sumvozvrat + sumbase;
              end else begin
                Oborot[tstr & "naim"] = Oborot[tstr & "naim"] + IVrw.Quant*percent;
                sumoborot = sumoborot + sumbase;
              end;
            end;
            if (IVrw.stp==kInvoiceRowTypeGiftVoucherSold) then begin
              artcnt = artcnt + 1;
              giftf = false;
              for (j=0;j<rwcnt;j=j+1) begin
                matrowget(IVr,j,tIVrw);
                if (((tIVrw.PayMode=="G") or (tIVrw.PayMode=="GS")) and (tIVrw.stp==kInvoiceRowTypeCreditCardPayment)) then begin
                  giftf = true;
                  j = rwcnt;
                end;
              end;
              if (!giftf) then begin
                if (artcnt==artqty) then begin
                  sumbase = recivedmoneybase - printedrmb;
                end else begin
                  sumbase = round(IVrw.Sum/IVr.Sum4*recivedmoneybase,SetRoundModeD(2));
                  printedrmb = printedrmb + sumbase;
                end;
                Oborot[tstr & "naim"] = Oborot[tstr & "naim"] + 1*percent;
                sumoborot = sumoborot + sumbase;
              end;
            end;
            if (IVrw.stp==kInvoiceRowTypeGiftVoucherPayment) then begin
              GCSr.SerNr = IVrw.GCNr;
              readfirstmain(GCSr,1,true);
              tIVr.SerNr = GCSr.InvSerNr;
              readfirstmain(tIVr,1,true);
              rwcnt2 = matrowcnt(tIVr);
              giftf = false;
              for (j=0;j<rwcnt2;j=j+1) begin
                matrowget(tIVr,j,tIVrw);
                if (((tIVrw.PayMode=="G") or (tIVrw.PayMode=="GS")) and (tIVrw.stp==kInvoiceRowTypeCreditCardPayment)) then begin
                  giftf = true;
                  j = rwcnt2;
                end;
              end;
              if (!giftf) then begin
                Vozvrat[tstr & "naim"] = Vozvrat[tstr & "naim"] + 1*percent;
                sumvozvrat = sumvozvrat - IVrw.Sum;
              end else begin
                sumoborot = sumoborot - IVrw.Sum;
              end;
            end;
          end;
          if (sumvozvrat!=0) then begin
          	logtext(0,"Vozvrat 01 + " & 1*percent);
            Vozvrat[tstr & "chek"] = Vozvrat[tstr & "chek"] + 1*percent;
            Vozvrat[tstr & "sum"] = Vozvrat[tstr & "sum"] + sumvozvrat;
          end;
          if (sumoborot!=0) then begin
            Oborot[tstr & "chek"] = Oborot[tstr & "chek"] + 1*percent;
            Oborot[tstr & "sum"] = Oborot[tstr & "sum"] + sumoborot;
          end;
        end;
      end;
    end;
  end;
  
  logtext(0,"DaysCumulativeExcel Locations length " & LAi);
  
  
  IPr.TransDate = startdate;
  TrHs = true;
  while (loopkey("TransDate",IPr,1,TrHs)) begin
    testf = true;
    if (IPr.TransDate>enddate) then begin  TrHs = false; testf = false; end;
    if (IPr.OKFlag==0) then begin testf = false; end;
    if (testf) then begin
      recivedmoneybase = 0;
      GetPMRow(IPr.PayMode,PMrw);
      if (left(PMrw.AccNr,1)=="5") or (IPr.PayMode=="Z1") then begin
        rwcnt = matrowcnt(IPr);
        for (i=0;i<rwcnt;i=i+1) begin
          sumvozvrat = 0;
          sumoborot = 0;
          sumbase = 0;
          matrowget(IPr,i,IPrw);
          if nonblank(RepSpec.ObjStr) then begin
            store = "";
            GetObjs("STORE",IPrw.Objects,store);
            if (RepSpec.ObjStr!=store) then begin testf = false; end;
          end;
          if (testf) then begin
            if (RepSpec.flags[1]==1) then begin
              store = Comprw.ShortName;
              if (LocInArr[store]==false) then begin
                LocInArr[store] = true;
                LocArr[LAi] = store;
                LAi = LAi + 1;
                LocName[store] = Comprw.CompName;
              end;
            end else begin
              store = "";
              GetObjs("STORE",IPrw.Objects,store);
              if (LocInArr[store]==false) then begin
                LocInArr[store] = true;
                LocArr[LAi] = store;
                LAi = LAi + 1;
                Locr.Code = store;
                if (ReadFirstMain(Locr,1,true)) then begin
                  LocName[store] = Locr.Name;
                end else begin
                  Objr.Code = store;
                  if (ReadFirstMain(Objr,1,true)) then begin
                    LocName[store] = StrReplace(Objr.Comment,"&","_");
                  end else begin
                    LocName[store] = store;
                  end;
                end;
              end;
            end;
            month = getmonth(IPr.TransDate) & "_" & getyear(IPr.TransDate);
            if (MonthInArr[month]==false) then begin
              MonthInArr[month] = true;
              MonthArr[MAi] = month;
              MAi = MAi + 1;
            end;
            MonthLoc[month & ";" & store] = true;
            TRr.Number = IPr.SerNr;
            TRr.IntYc = IPYc;
            curfound = false;
            if (ReadFirstMain(TRr,2,true)) then begin
              fr = 1;
              rwcnt2 = MatRowCnt(TRr);
              for(j=0;j<rwcnt2;j=j+1) begin
                MatRowGet(TRr,j,TRrw);
                if ((left(TRrw.AccNumber,1) == "5") and (TRrw.ovst <> 1) and TRrw.Curncy==IPrw.BankCurncy and (IPrw.BankVal==TRrw.CurCredVal or IPrw.BankVal==TRrw.CurDebVal)) then begin
                  curfound = true;
                  to1 = TRrw.DebVal/TRrw.CurDebVal;
                  if (to1==0) then begin
                    to1 = TRrw.CredVal/TRrw.CurCredVal;
                  end;
                  j = rwcnt2;
                end;
              end;
              
              if(curfound==false)then begin
              	fr = 1;
								rwcnt2 = MatRowCnt(TRr);
								for(j=0;j<rwcnt2;j=j+1) begin
									MatRowGet(TRr,j,TRrw);
									if ((left(TRrw.AccNumber,1) == "5") and (TRrw.ovst <> 1) and TRrw.Curncy==IPrw.BankCurncy) then begin
										curfound = true;
										to1 = TRrw.DebVal/TRrw.CurDebVal;
										if (to1==0) then begin
											to1 = TRrw.CredVal/TRrw.CurCredVal;
										end;
										j = rwcnt2;
									end;
								end;
              end;
              
            end else begin
              GetFullCurncyRate(IPrw.BankCurncy,IPr.TransDate,fr,to1,to2,br1,br2);
            end;
            if (fr==0 or to1==0) then begin
              fr = 1; to1 = 1;
            end;
            recivedmoneybase = MulRateToBase1(IPrw.BankCurncy,IPrw.BankVal,fr,to1,to2,br1,br2,DefaultCurRoundOff);
            if (IPrw.InvoiceNr!=-1) then begin
              IVr.SerNr = IPrw.InvoiceNr;
              ReadFirstMain(IVr,1,true);
              if (ConsultInArr[IVr.SalesMan]==false) then begin
                ConsultInArr[IVr.SalesMan] = true;
                ConsultArr[CAi] = IVr.SalesMan;
                CAi = CAi + 1;
                Userr.Code = IVr.SalesMan;
                if (ReadFirstMain(Userr,1,true)) then begin
                  ConsultName[IVr.SalesMan] = Userr.Name;
                end else begin
                  ConsultName[IVr.SalesMan] = IVr.SalesMan;
                end;
              end;
              tstr = store & ";" & month & ";" & IVr.SalesMan & ";";
              /*if (IPrw.CustCode=="FOB36") then begin
                tstr = store & ";" & month & ";FOB36;";
              end;*/
              if (left(IPrw.CustCode,3)=="FOB") then begin//Edit-------------------Vitalii 15:52 13.11.2017
                CUr.Code = IPrw.CustCode;
                readfirstmain(CUr,1,true);
                if (CUr.CustCat=="STORE") then begin
                  tstr = store & ";" & month & ";FOB36;";
                end;
              end;
              percent = IPrw.RecVal/IVr.Sum4;
              printedrmb = 0;
              rwcnt2 = matrowcnt(IVr);
              InvoiceRowTypeDownpaymentf = false;
              // Edit Start ---------------------------------------------- Edit Start
	//Thursday, 14 September 2017 15:16:35
	
              if(recivedmoneybase<0)then begin// Edit ************************** Thursday, 14 September 2017 15:15:38
              	for (j=0;j<rwcnt2;j=j+1) begin
              		matrowget(IVr,j,IVrw);
									if(IVrw.stp==kInvoiceRowTypeDownpayment)then begin
										sumbase = recivedmoneybase;
										sumvozvrat = sumvozvrat + sumbase;
										Vozvrat[tstr & "sum"] = Vozvrat[tstr & "sum"] + sumbase;
										InvoiceRowTypeDownpaymentf = true;
										goto LDownpaymentFoundRet;
									end;
              	end;
              end;
              f1 = false;
              f2 = false;
              if(recivedmoneybase>0)then begin// Edit ************************** Thursday, 14 September 2017 15:15:38
              	for (j=0;j<rwcnt2;j=j+1) begin
              		matrowget(IVr,j,IVrw);
									if(IVrw.stp==kInvoiceRowTypeDownpayment and IVrw.Sum>0)then begin
										f1 = true;
									end;
									if(IVrw.stp==kInvoiceRowTypeNormal)then begin
										f2 = true;
									end;
              	end;
              	if(f1 and f2)then begin
              		sumbase = recivedmoneybase;
              		Oborot[tstr & "chek"] = Oborot[tstr & "chek"] + 1;
              		sumoborot = sumoborot + sumbase;
                  Oborot[tstr & "sum"] = Oborot[tstr & "sum"] + sumoborot;
                  InvoiceRowTypeDownpaymentf = true;
                  goto LDownpaymentFoundRet;
              	end;
              end;
              
	// Edit End ---------------------------------------------- Edit End
              artqty = 0;
              for (j=0;j<rwcnt2;j=j+1) begin
                matrowget(IVr,j,IVrw);
                if ((IVrw.stp==kInvoiceRowTypeNormal) or (IVrw.stp==kInvoiceRowTypeGiftVoucherSold)) then begin
                  artqty = artqty + 1;
                end;
              end;
              artcnt = 0;
              for (j=0;j<rwcnt2;j=j+1) begin
                matrowget(IVr,j,IVrw);
                sumbase = 0;
                if (IVrw.stp==kInvoiceRowTypeDownpayment) then begin
                  InvoiceRowTypeDownpaymentf = true;
                  ORr.SerNr = IVrw.Spec;
                  ReadFirstMain(ORr,1,true);
                  printedrmb = 0;
                  rwcnt3 = matrowcnt(ORr);
                  for (k=0;k<rwcnt3;k=k+1) begin
                    matrowget(ORr,k,ORrw);
                    sumbase = 0;
                    if (k==rwcnt3-1) then begin
                      sumbase = recivedmoneybase - printedrmb;
                    end else begin
                      //sumbase = round(ORrw.Sum/ORr.Sum4*recivedmoneybase,SetRoundModeD(2));
                      sumbase = round(ORrw.Sum*recivedmoneybase/IPrw.RecVal,SetRoundModeD(2));
                      printedrmb = printedrmb + sumbase;
                    end;
                    Oborot[tstr & "naim"] = Oborot[tstr & "naim"] + ORrw.Quant*percent;
                    sumoborot = sumoborot + sumbase;
                  end;
                  if (sumvozvrat!=0) then begin
                  	logtext(0,"Vozvrat 02 + " & 1*percent);
                    Vozvrat[tstr & "chek"] = Vozvrat[tstr & "chek"] + 1*percent;
                    Vozvrat[tstr & "sum"] = Vozvrat[tstr & "sum"] + sumvozvrat;
                  end;
                  if (sumoborot!=0) then begin
                    Oborot[tstr & "chek"] = Oborot[tstr & "chek"] + 1*percent;
                    Oborot[tstr & "sum"] = Oborot[tstr & "sum"] + sumoborot;
                  end;
                  j = rwcnt2;
                end;
                if (IVrw.stp==kInvoiceRowTypeNormal) then begin
                  artcnt = artcnt + 1;
                  if (artcnt==artqty) then begin
                    sumbase = recivedmoneybase - printedrmb;
                  end else begin
                    //sumbase = round(IVrw.Sum/IVr.Sum4*recivedmoneybase,SetRoundModeD(2));
                    sumbase = round(IVrw.Sum*recivedmoneybase/IPrw.RecVal,SetRoundModeD(2));
                    printedrmb = printedrmb + sumbase;
                  end;
                  if (IVrw.Quant<0) then begin
                    Vozvrat[tstr & "naim"] = Vozvrat[tstr & "naim"] - IVrw.Quant*percent;
                    sumvozvrat = sumvozvrat + sumbase;
                  end else begin
                    Oborot[tstr & "naim"] = Oborot[tstr & "naim"] + IVrw.Quant*percent;
                    sumoborot = sumoborot + sumbase;
                  end;
                end;
                if (IVrw.stp==kInvoiceRowTypeGiftVoucherSold) then begin
                  artcnt = artcnt + 1;
                  giftf = false;
                  for (k=0;k<rwcnt2;k=k+1) begin
                    matrowget(IVr,k,tIVrw);
                    if (((tIVrw.PayMode=="G") or (tIVrw.PayMode=="GS")) and (tIVrw.stp==kInvoiceRowTypeCreditCardPayment)) then begin
                      giftf = true;
                      k = rwcnt2;
                    end;
                  end;
                  if (!giftf) then begin
                    if (artcnt==artqty) then begin
                      sumbase = recivedmoneybase - printedrmb;
                    end else begin
                      sumbase = round(IVrw.Sum/IVr.Sum4*recivedmoneybase,SetRoundModeD(2));
                      printedrmb = printedrmb + sumbase;
                    end;
                    Oborot[tstr & "naim"] = Oborot[tstr & "naim"] + 1*percent;
                    sumoborot = sumoborot + sumbase;
                  end;
                end;
              end;
LDownpaymentFoundRet:;
              if (!InvoiceRowTypeDownpaymentf) then begin
                if (sumvozvrat!=0) then begin
                	logtext(0,"Vozvrat 03 + " & 1*percent);
                  Vozvrat[tstr & "chek"] = Vozvrat[tstr & "chek"] + 1*percent;
                  Vozvrat[tstr & "sum"] = Vozvrat[tstr & "sum"] + sumvozvrat;
                end;
                if (sumoborot!=0) then begin
                  Oborot[tstr & "chek"] = Oborot[tstr & "chek"] + 1*percent;
                  Oborot[tstr & "sum"] = Oborot[tstr & "sum"] + sumoborot;
                end;
              end;
            end else begin
              if (IPrw.OrderNr!=-1) then begin
                ORr.SerNr = IPrw.OrderNr;
                ReadFirstMain(ORr,1,true);
                percent = IPrw.RecVal/ORr.Sum4;
                if (ConsultInArr[ORr.SalesMan]==false) then begin
                  ConsultInArr[ORr.SalesMan] = true;
                  ConsultArr[CAi] = ORr.SalesMan;
                  CAi = CAi + 1;
                  Userr.Code = ORr.SalesMan;
                  if (ReadFirstMain(Userr,1,true)) then begin
                    ConsultName[ORr.SalesMan] = Userr.Name;
                  end else begin
                    ConsultName[ORr.SalesMan] = ORr.SalesMan;
                  end;
                end;
                tstr = store & ";" & month & ";" & ORr.SalesMan & ";";
                /*if (IPrw.CustCode=="FOB36") then begin
                  tstr = store & ";" & month & ";FOB36;";
                end;*/
                if (left(IPrw.CustCode,3)=="FOB") then begin//Edit-------------------Vitalii 15:52 13.11.2017
                  CUr.Code = IPrw.CustCode;
                  readfirstmain(CUr,1,true);
                  if (CUr.CustCat=="STORE") then begin
                    tstr = store & ";" & month & ";FOB36;";
                  end;
                end;
                printedrmb = 0;
                rwcnt3 = matrowcnt(ORr);
                for (k=0;k<rwcnt3;k=k+1) begin
                  matrowget(ORr,k,ORrw);
                  if (k==rwcnt3-1) then begin
                    sumbase = recivedmoneybase - printedrmb;
                  end else begin
                    //sumbase = round(ORrw.Sum/ORr.Sum4*recivedmoneybase,SetRoundModeD(2));
                    sumbase = round(ORrw.Sum*recivedmoneybase/IPrw.RecVal,SetRoundModeD(2));
                    printedrmb = printedrmb + sumbase;
                  end;
                  Oborot[tstr & "naim"] = Oborot[tstr & "naim"] + ORrw.Quant*percent;
                  sumoborot = sumoborot + sumbase;
                end;
                if (sumvozvrat!=0) then begin
                	logtext(0,"Vozvrat 04 + " & 1*percent);
                  Vozvrat[tstr & "chek"] = Vozvrat[tstr & "chek"] + 1*percent;
                  Vozvrat[tstr & "sum"] = Vozvrat[tstr & "sum"] + sumvozvrat;
                end;
                if (sumoborot!=0) then begin
                  Oborot[tstr & "chek"] = Oborot[tstr & "chek"] + 1*percent;
                  Oborot[tstr & "sum"] = Oborot[tstr & "sum"] + sumoborot;
                end;
              end else begin
                if (IPrw.CUPNr!=-1) then begin
                  printedprepval = 0;
                  if (recivedmoneybase>0) then begin
                    ARPayHistr.FileName = "IVVc";
                    ARPayHistr.CUPNr = IPrw.CUPNr;
                    TrHs2 = true;
                    resetloop(ARPayHistr);
                    while (loopmain(ARPayHistr,2,TrHs2)) begin
                      if (ARPayHistr.FileName!="IVVc") then begin TrHs2=false; end;
                      if (ARPayHistr.CUPNr!=IPrw.CUPNr) then begin TrHs2=false; end;
                      if (TrHs2) then begin
                        sumoborot = 0;
                        sumvozvrat = 0;
                        //rmbpart = ARPayHistr.BookVal;
                        rmbpart = ARPayHistr.Val*recivedmoneybase/IPrw.RecVal;
                        IVr.SerNr = ARPayHistr.SerNr;
                        ReadFirstMain(IVr,1,true);
                        if (ConsultInArr[IVr.SalesMan]==false) then begin
                          ConsultInArr[IVr.SalesMan] = true;
                          ConsultArr[CAi] = IVr.SalesMan;
                          CAi = CAi + 1;
                          Userr.Code = IVr.SalesMan;
                          if (ReadFirstMain(Userr,1,true)) then begin
                            ConsultName[IVr.SalesMan] = Userr.Name;
                          end else begin
                            ConsultName[IVr.SalesMan] = IVr.SalesMan;
                          end;
                        end;
                        tstr = store & ";" & month & ";" & IVr.SalesMan & ";";
                        /*if (IPrw.CustCode=="FOB36") then begin
                          tstr = store & ";" & month & ";FOB36;";
                        end;*/
                        if (left(IPrw.CustCode,3)=="FOB") then begin//Edit-------------------Vitalii 15:52 13.11.2017
                          CUr.Code = IPrw.CustCode;
                          readfirstmain(CUr,1,true);
                          if (CUr.CustCat=="STORE") then begin
                            tstr = store & ";" & month & ";FOB36;";
                          end;
                        end;
                        percent = rmbpart/IVr.BaseSum4;
                        printedrmb = 0;
                        rwcnt2 = matrowcnt(IVr);
                        InvoiceRowTypeDownpaymentf = false;
                        artqty = 0;
                        for (j=0;j<rwcnt2;j=j+1) begin
                          matrowget(IVr,j,IVrw);
                          if ((IVrw.stp==kInvoiceRowTypeNormal) or (IVrw.stp==kInvoiceRowTypeGiftVoucherSold)) then begin
                            artqty = artqty + 1;
                          end;
                        end;
                        artcnt = 0;
                        for (j=0;j<rwcnt2;j=j+1) begin
                          matrowget(IVr,j,IVrw);
                          sumbase = 0;
                          if (IVrw.stp==kInvoiceRowTypeDownpayment) then begin
                            InvoiceRowTypeDownpaymentf = true;
                            ORr.SerNr = IVrw.Spec;
                            ReadFirstMain(ORr,1,true);
                            printedrmb = 0;
                            rwcnt3 = matrowcnt(ORr);
                            for (k=0;k<rwcnt3;k=k+1) begin
                              matrowget(ORr,k,ORrw);
                              sumbase = 0;
                              if (k==rwcnt3-1) then begin
                                sumbase = rmbpart - printedrmb;
                              end else begin
                                //sumbase = round(ORrw.Sum/ORr.Sum4*recivedmoneybase,SetRoundModeD(2));
                                sumbase = round(ORrw.Sum*recivedmoneybase/IPrw.RecVal,SetRoundModeD(2));
                                printedrmb = printedrmb + sumbase;
                              end;
                              Oborot[tstr & "naim"] = Oborot[tstr & "naim"] + ORrw.Quant*percent;
                              sumoborot = sumoborot + sumbase;
                            end;
                            if (sumvozvrat!=0) then begin
                            	logtext(0,"Vozvrat 05 + " & 1*percent);
                              Vozvrat[tstr & "chek"] = Vozvrat[tstr & "chek"] + 1*percent;
                              Vozvrat[tstr & "sum"] = Vozvrat[tstr & "sum"] + sumvozvrat;
                            end;
                            if (sumoborot!=0) then begin
                              Oborot[tstr & "chek"] = Oborot[tstr & "chek"] + 1*percent;
                              Oborot[tstr & "sum"] = Oborot[tstr & "sum"] + sumoborot;
                            end;
                            j = rwcnt2;
                          end;
                          if (IVrw.stp==kInvoiceRowTypeNormal) then begin
                            artcnt = artcnt + 1;
                            if (artcnt==artqty) then begin
                             sumbase = rmbpart - printedrmb;
                            end else begin
                              //sumbase = round(IVrw.Sum/IVr.Sum4*recivedmoneybase,SetRoundModeD(2));
                              sumbase = round(IVrw.Sum*recivedmoneybase/IPrw.RecVal,SetRoundModeD(2));
                              printedrmb = printedrmb + sumbase;
                            end;
                            if (IVrw.Quant<0) then begin
                              Vozvrat[tstr & "naim"] = Vozvrat[tstr & "naim"] - IVrw.Quant*percent;
                              sumvozvrat = sumvozvrat + sumbase;
                            end else begin
                              Oborot[tstr & "naim"] = Oborot[tstr & "naim"] + IVrw.Quant*percent;
                              sumoborot = sumoborot + sumbase;
                            end;
                          end;
                          if (IVrw.stp==kInvoiceRowTypeGiftVoucherSold) then begin
                            artcnt = artcnt + 1;
                            giftf = false;
                            for (k=0;k<rwcnt2;k=k+1) begin
                              matrowget(IVr,k,tIVrw);
                              if (((tIVrw.PayMode=="G") or (tIVrw.PayMode=="GS")) and (tIVrw.stp==kInvoiceRowTypeCreditCardPayment)) then begin
                                giftf = true;
                                k = rwcnt2;
                              end;
                            end;
                            if (!giftf) then begin
                              if (artcnt==artqty) then begin
                                sumbase = recivedmoneybase - printedrmb;
                              end else begin
                                //sumbase = round(IVrw.Sum/IVr.Sum4*recivedmoneybase,SetRoundModeD(2));
                                sumbase = round(IVrw.Sum*recivedmoneybase/IPrw.RecVal,SetRoundModeD(2));
                                printedrmb = printedrmb + sumbase;
                              end;
                              Oborot[tstr & "naim"] = Oborot[tstr & "naim"] + 1*percent;
                              sumoborot = sumoborot + sumbase;
                            end;
                          end;
                        end;
                        if (sumvozvrat!=0) then begin
                        	logtext(0,"Vozvrat 06 + " & 1*percent);
                          Vozvrat[tstr & "chek"] = Vozvrat[tstr & "chek"] + 1*percent;
                          Vozvrat[tstr & "sum"] = Vozvrat[tstr & "sum"] + sumvozvrat;
                        end;
                        if (sumoborot!=0) then begin
                          Oborot[tstr & "chek"] = Oborot[tstr & "chek"] + 1*percent;
                          Oborot[tstr & "sum"] = Oborot[tstr & "sum"] + sumoborot;
                        end;
                        printedprepval = printedprepval + rmbpart;
                      end;
                    end;
                  end;
                  if (AbsoluteVal(recivedmoneybase)>AbsoluteVal(printedprepval)) then begin
                    /*if (IPrw.CustCode=="FOB36") then begin
                      tstr = store & ";" & month & ";FOB36;";
                    end else begin
                      tstr = store & ";" & month & ";STORE;";
                      if (ConsultInArr["STORE"]==false) then begin
                        ConsultInArr["STORE"] = true;
                        ConsultArr[CAi] = "STORE";
                        CAi = CAi + 1;
                        ConsultName["STORE"] = "STORE";
                      end;
                    end;*/
                    tstr = "";
                    if (left(IPrw.CustCode,3)=="FOB") then begin//Edit-------------------Vitalii 15:52 13.11.2017
                      CUr.Code = IPrw.CustCode;
                      readfirstmain(CUr,1,true);
                      if (CUr.CustCat=="STORE") then begin
                        tstr = store & ";" & month & ";FOB36;";
                      end;
                    end;
                    if (blank(tstr)) then begin
                      tstr = store & ";" & month & ";STORE;";
                      if (ConsultInArr["STORE"]==false) then begin
                        ConsultInArr["STORE"] = true;
                        ConsultArr[CAi] = "STORE";
                        CAi = CAi + 1;
                        ConsultName["STORE"] = "STORE";
                      end;
                    end;
                    sumbase = recivedmoneybase - printedprepval;
                    if (sumbase>0) then begin
                      Oborot[tstr & "sum"] = Oborot[tstr & "sum"] + sumbase;
                    end else begin
                      Vozvrat[tstr & "sum"] = Vozvrat[tstr & "sum"] + sumbase;
                    end;
                  end;
                end;
              end;
            end;
          end;
        end;
      end;
    end;
  end;
  
  reportName = "DaysCumulativeExcelRn";
	if(windowsmode==1)then begin
		fileToSave = RepSpec.f6;
	end else begin
		fileToSave = "/" & RepSpec.f6;
	end;
	deletefolder(Left(fileToSave,(len(fileToSave) - 5)));
  for (MAi=0;MAi<MonthArr.length;MAi=MAi+1) begin
    for (LAi=0;LAi<LocArr.length;LAi=LAi+1) begin
      if (MonthLoc[MonthArr[MAi] & ";" & LocArr[LAi]]) then begin
        sheetNames[qtyOfSheets] = UpperCase(left(MonthName(StringToDate("1/" & left(MonthArr[MAi],(len(MonthArr[MAi]) - 5)) & "/2000")),3)) & right(MonthArr[MAi],4) & " " & LocName[LocArr[LAi]];
        qtyOfSheets = qtyOfSheets + 1;
      end;
    end;
  end;
  
  logtext(0,"DaysCumulativeExcel qtyOfSheets " & qtyOfSheets);
  
  if (qtyOfSheets==0) then begin
    emptyf = true;
    sheetNames[qtyOfSheets] = "Empty";
    qtyOfSheets = qtyOfSheets + 1;
  end;
  
  
  //-------------------Начало форматирования Excel файла. Данные для отчета уже собраны выше
  
	sheetColls[0] = 2.86;
	sheetColls[1] = 27.71;
	sheetColls[2] = 12.14;
	sheetColls[3] = 9.14;
	sheetColls[4] = 9.14;
	sheetColls[5] = 12.14;
	sheetColls[6] = 9.14;
	sheetColls[7] = 9.14;
  sheetColls[8] = 12.14;
	
	numOfUniqueSharedStrings = 0;
	numOfSharedStrings = 0;
	XmlXlsxWorkBegin(fileToSave,reportName);
	CreateSheetsXLSX(qtyOfSheets,sheetNames,fileToSave,0,true);
  if (emptyf) then begin
    sheetnum = sheetnum + 1;
    SetSheetsCols(sheetnum,sheetColls,lvlArray,fileToSave);
    BeginSheetData(sheetnum,fileToSave);
    EndSheetData(sheetnum,fileToSave);
    MergeCells(sheetnum,fileToSave,mergeCell,qtyMergeCell);
    EndSheet(sheetnum,fileToSave,0);
  end;
	sheetnum = 0;
	
	logtext(0,"DaysCumulativeExcel MonthArr length " & MAi);

	
  for (MAi=0;MAi<MonthArr.length;MAi=MAi+1) begin
    for (LAi=0;LAi<LocArr.length;LAi=LAi+1) begin
    if (MonthLoc[MonthArr[MAi] & ";" & LocArr[LAi]]) then begin
        sheetnum = sheetnum + 1;
        SetSheetsCols(sheetnum,sheetColls,lvlArray,fileToSave);
        BeginSheetData(sheetnum,fileToSave);
          mergeCell[0] = "C6:E6";
          mergeCell[1] = "F6:H6";
          mergeCell[2] = "I6:I7";
          mergeCell[3] = "B6:B7";
          qtyMergeCell = 4;
          rownum = 1;
          colnum = 3;
          BeginRow(sheetnum,fileToSave,rownum,0,blankval);
            style = 2;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,"Отчет за день с накопительным эффектом",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
          EndRow(sheetnum,fileToSave,rownum);
          rownum = rownum + 1;
          colnum = 2;
          BeginRow(sheetnum,fileToSave,rownum,0,blankval);
            style = 3;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,LocName[LocArr[LAi]],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
          EndRow(sheetnum,fileToSave,rownum);
          colnum = 2;
          BeginRow(sheetnum,fileToSave,rownum,0,blankval);
            style = 3;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,startdate & ":" & enddate,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
          EndRow(sheetnum,fileToSave,rownum);
          rownum = rownum + 1;
          colnum = 2;
          BeginRow(sheetnum,fileToSave,rownum,0,blankval);
            style = 16;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,"Имя консультанта",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            style = 11;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,"Оборот",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            style = 12;
            qtyOfEmpStr = 1;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
            style = 13;
            qtyOfEmpStr = 1;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
            style = 11;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,"Возвраты",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            style = 12;
            qtyOfEmpStr = 1;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
            style = 13;
            qtyOfEmpStr = 1;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
            style = 14;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,"Сумма",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
          EndRow(sheetnum,fileToSave,rownum);
          colnum = 2;
          BeginRow(sheetnum,fileToSave,rownum,0,blankval);
            style = 17;
            qtyOfEmpStr = 1;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
            style = 7;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,"Приход",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            style = 8;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,"Кол. чеков",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            style = 9;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,"Кол. наим.",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            style = 7;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,"Возврат",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            style = 8;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,"Кол. чеков",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            style = 9;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,"Кол. наим.",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
            style = 15;
            qtyOfEmpStr = 1;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
          EndRow(sheetnum,fileToSave,rownum);
          for (CAi=0;CAi<ConsultArr.length;CAi=CAi+1) begin
            tstr = LocArr[LAi] & ";" & MonthArr[MAi] & ";" & ConsultArr[CAi] & ";";
            colnum = 2;
            BeginRow(sheetnum,fileToSave,rownum,0,blankval);
              style = 4;
              StringCell(sheetnum,fileToSave,colnum,rownum,style,ConsultName[ConsultArr[CAi]],SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
              style = 5;
              NumericCell(sheetnum,fileToSave,colnum,rownum,style,Oborot[tstr & "sum"]);
              style = 18;
              NumericCell(sheetnum,fileToSave,colnum,rownum,style,Oborot[tstr & "chek"]);
              style = 19;
              NumericCell(sheetnum,fileToSave,colnum,rownum,style,Oborot[tstr & "naim"]);
              style = 5;
              NumericCell(sheetnum,fileToSave,colnum,rownum,style,Vozvrat[tstr & "sum"]);
              style = 18;
              NumericCell(sheetnum,fileToSave,colnum,rownum,style,Vozvrat[tstr & "chek"]);
              style = 19;
              NumericCell(sheetnum,fileToSave,colnum,rownum,style,Vozvrat[tstr & "naim"]);
              style = 6;
              NumericCell(sheetnum,fileToSave,colnum,rownum,style,Oborot[tstr & "sum"] + Vozvrat[tstr & "sum"]);
            EndRow(sheetnum,fileToSave,rownum);
          end;
          colnum = 2;
          BeginRow(sheetnum,fileToSave,rownum,0,blankval);
            style = 10;
            qtyOfEmpStr = 8;
            EmptyCell(sheetnum,fileToSave,colnum,rownum,style,qtyOfEmpStr);
          EndRow(sheetnum,fileToSave,rownum);
          colnum = 2;
          BeginRow(sheetnum,fileToSave,rownum,0,blankval);
            style = 3;
            StringCell(sheetnum,fileToSave,colnum,rownum,style,"FOB",SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings);
          EndRow(sheetnum,fileToSave,rownum);
          colnum = 3;
          BeginRow(sheetnum,fileToSave,rownum,0,blankval);
            style = 20;
            tstr = LocArr[LAi] & ";" & MonthArr[MAi] & ";FOB36;";
            NumericCell(sheetnum,fileToSave,colnum,rownum,style,Oborot[tstr & "sum"]);
            style = 21;
            NumericCell(sheetnum,fileToSave,colnum,rownum,style,Oborot[tstr & "chek"]);
            style = 22;
            NumericCell(sheetnum,fileToSave,colnum,rownum,style,Oborot[tstr & "naim"]);
            style = 23;
            NumericCell(sheetnum,fileToSave,colnum,rownum,style,Vozvrat[tstr & "sum"]);
            style = 22;
            NumericCell(sheetnum,fileToSave,colnum,rownum,style,Vozvrat[tstr & "chek"]);
            style = 22;
            NumericCell(sheetnum,fileToSave,colnum,rownum,style,Vozvrat[tstr & "naim"]);
            style = 24;
            NumericCell(sheetnum,fileToSave,colnum,rownum,style,Oborot[tstr & "sum"] + Vozvrat[tstr & "sum"]);
          EndRow(sheetnum,fileToSave,rownum);
        EndSheetData(sheetnum,fileToSave);
        MergeCells(sheetnum,fileToSave,mergeCell,qtyMergeCell);
        EndSheet(sheetnum,fileToSave,0);
      end;
    end;
  end;
  FillSharedStrings(fileToSave,SharedStrings,numOfUniqueSharedStrings,numOfSharedStrings,mas);
	ConvertToXLSX(fileToSave,true);
	MilliSleep(5000);
	LogProcTime("DaysCumulativeExcel",getcurtick()-curtick);
  return;
end;

global 
procedure DaysCumulativeExcelRn(record RcVc RepSpec)//RepSpec  - объект передаваемый в отчет из пользовательского интерфейса с определением стартовых данных
begin
  string 250 filename,tstr,errstr,tstr2;
  boolean testf;
  record ObjVc Objr;//Объекты
  integer i,char;
  
  testf = true;
  logtext(0,"Report DaysCumulativeExcelRn");
  if nonblank(RepSpec.ObjStr) then begin
    Objr.Code = RepSpec.ObjStr;
    if readfirstmain(Objr,1,true) then begin
      if (Objr.OTCode!="STORE") then begin
        testf = false;
        errstr = "Объект не соответствует типу STORE";
      end;
    end else begin
      testf = false;
      errstr = "Магазин не найден";
    end;
  end;
  if testf then begin
    tstr = "DaysCumul";
    if nonblank(RepSpec.ObjStr) then begin
      tstr2 = "";
      for (i=0;i<Len(RepSpec.ObjStr);i=i+1) begin
        char = Asc(Mid(RepSpec.ObjStr,i,1));
        if (((char>47) and (char<58)) or 
            ((char>64) and (char<91)) or 
            ((char>96) and (char<123))) then begin
          tstr2 = tstr2 & Chr(char);
        end;
      end;
      tstr = tstr & "_" & tstr2;
    end;
    tstr = tstr & "_" & CurrentUser & "_" & DateToString(CurrentDate,"DDMMYYYY") & StrReplace(CurrentTime,":","");
    filename = tstr & ".xlsx";
    RepSpec.f6 = filename;
    DaysCumulativeExcel(RepSpec);//Запуск отчета
    StartReportNoHeaderJob("Отчет за день с накопительным эффектом");
    StartFormat(15);
      OutString(0,"DblImagesExcel",RepSpec.f7 & filename,false);
    EndFormat;
    EndJob;
  end else begin
    StartReportNoHeaderJob("Отчет за день с накопительным эффектом");
      StartFormat(15);
        OutString(0,0,errstr,false);
      EndFormat;
    EndJob;
  end;
	
  return;
end;