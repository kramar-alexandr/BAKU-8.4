//server-only
external procedure LogProcTime(string,longint);

SetLangMode(LangRussian,"RUS",0);


global procedure CLInRepRn(record RcVc RepSpec)
begin
	record CLInVc CLInr;
	row CLInVc CLInrw;
	date sd,ed;
	boolean TrHs,testf,foundf;
	integer i,mtrw;
	record CLCorspVc CLCor;
	string 200 paymodes,location;
	longint curtick;
	
	curtick = getcurtick();
	location = RepSpec.f1;
	/*switch(location)begin
		case"CARTIER":		paymodes = "B1,K1,L1,T1,S1";
		case"CHOPARD":		paymodes = "B2,K2,L2,T2,S2";
		case"RCOL1":			paymodes = "B4,K4,L4,T4,S4";
		case"RCOL2":			paymodes = "B5,K5,L5,T5,S5";
		case"RC_DG":			paymodes = "B3,K3,L3,T3,S3";
		case"TIMEPIECES":	paymodes = "B6,K6,L6,T6,S6";
		case"GRAFF":	paymodes = "B7,K7,L7,T7,S7";
		case"ELLUX":	paymodes = "B8,K8,L8,T8,S8";
	end;*/
	
	sd = RepSpec.sStartDate;
	ed = RepSpec.sEndDate;
	
	StartReportNoHeaderJob("Отчет по приходам");
		startformat(15);
			outstring(0,0,location,false);
		endformat;
		startformat(15);
			outstring(0,0,"Отчет по приходам",false);
		endformat;
		startformat(15);
			outstring(0,0,"Начало периода:",false);
			outstring(75,0,sd,false);
		endformat;
		startformat(15);
			outstring(0,0,"Конец периода:",false);
			outstring(75,0,ed,false);
		endformat;
		startformat(15);
			outstring(0,0,"Дата",false);
			outstring(75,0,"Статья",false);
			outstring(150,0,"Описание статьи ",false);
			outstring(225,0,"Сумма прихода",false);
			outstring(300,0,"Валюта",false);
			outstring(375,0,"Комментарий",false);
		endformat;
		
		TrHs = true;
		CLInr.TransDate = sd;
		while(loopkey("TransDate",CLInr,1,TrHs))begin
			testf = true;
			if(CLInr.TransDate>ed)then begin TrHs = false; testf = false; end;
			if(CLInr.OKFlag==0)then begin testf = false; end;
			if(nonblank(RepSpec.f2) and !setinset(RepSpec.f2,CLInr.Objects))then begin testf = false; end;// Edit ************************** BPI Ukraine - KramarAlexandr - 02, 14 01 2020 y. at 3:16:13 PM
			
			
			if(testf)then begin
				mtrw = matrowcnt(CLInr);
				For(i=0;i<mtrw;i=i+1) begin
	  			matrowget(CLInr,i,CLInrw);
	  			foundf = true;
	  			if(nonblank(paymodes) and setinset(CLInr.PayMode,paymodes)==false)then begin foundf = false; end;
	  			
	  			if(foundf)then begin
						startformat(15);
							outstring(0,0,CLInr.TransDate,false);
							outstring(75,0,CLInrw.CorspCode,false);
							CLCor.Code = CLInrw.CorspCode;
							readfirstmain(CLCor,1,true);
							if(CLCor.Comment!=CLInrw.Comment)then begin
								outstring(150,0,CLCor.Comment,false);
							end else begin
								outstring(150,0,"",false);
							end;
							outstring(225,0,CLInrw.Sum,false);
							outstring(300,0,CLInr.CurncyCode,false);
							outstring(375,0,CLInrw.Comment,false);
						endformat;
	  			end;
				end; 
			end;
		end;
		
	endjob;
	LogProcTime("CLInRepRn",getcurtick() - curtick);
return;
end;


global procedure CLOutRepRn(record RcVc RepSpec)
begin
	record CLOutVc CLOutr;
	row CLOutVc CLOutrw;
	date sd,ed;
	boolean TrHs,testf,foundf;
	integer i,mtrw;
	record CLCorspVc CLCor;
	string 200 paymodes,location;
	record PMBlock PMb;
	row PMBlock PMrw;
	integer pmmtrw,j;
	string 200 tstr;
	longint curtick;
	val basesum;
	
	curtick = getcurtick();
	blockload(PMb);
	pmmtrw = matrowcnt(PMb);
	location = RepSpec.f1;
	/*switch(location)begin
		case"CARTIER":		paymodes = "B1,K1,L1,T1,S1,O1,I1,D1,C1";
		case"CHOPARD":		paymodes = "B2,K2,L2,T2,S2,O1,I2,D1,C1";
		case"RCOL1":			paymodes = "B4,K4,L4,T4,S4,O1,I4,D1,C1";
		case"RCOL2":			paymodes = "B5,K5,L5,T5,S5,O1,I5,D1,C1";
		case"RC_DG":			paymodes = "B3,K3,L3,T3,S3,O1,I3,D1,C1";
		case"TIMEPIECES":	paymodes = "B6,K6,L6,T6,S6,O1,I6,D1,C1";
		case"GRAFF":	    paymodes = "B7,K7,L7,T7,S7,O1,I7,D1,C1";
		case"ELLUX":	    paymodes = "B8,K8,L8,T8,S8,O1,I8,D1,C1";
	end;*/
	
	sd = RepSpec.sStartDate;
	ed = RepSpec.sEndDate;
	
	StartReportNoHeaderJob("Отчет по расходам");
		startformat(15);
			outstring(0,0,location,false);
		endformat;
		startformat(15);
			outstring(0,0,"Отчет по расходам",false);
		endformat;
		startformat(15);
			outstring(0,0,"Начало периода:",false);
			outstring(75,0,sd,false);
		endformat;
		startformat(15);
			outstring(0,0,"Конец периода:",false);
			outstring(75,0,ed,false);
		endformat;
		startformat(15);
			outstring(0,0,"Дата",false);
			outstring(75,0,"Статья",false);
			outstring(150,0,"Описание статьи ",false);
			outstring(225,0,"Сумма расхода",false);
			outstring(300,0,"Валюта",false);
			outstring(300,0,"Основная",false);
			outstring(375,0,"Способ оплаты",false);
			outstring(450,0,"Комментарий",false);
		endformat;
		
		TrHs = true;
		CLOutr.TransDate = sd;
		while(loopkey("TransDate",CLOutr,1,TrHs))begin
			testf = true;
			if(CLOutr.TransDate>ed)then begin TrHs = false; testf = false; end;
			if(CLOutr.OKFlag==0)then begin testf = false; end;
			if(nonblank(RepSpec.f2) and !setinset(RepSpec.f2,CLOutr.Objects))then begin testf = false; end;// Edit ************************** BPI Ukraine - KramarAlexandr - 02, 14 01 2020 y. at 3:16:13 PM
			
			if(testf)then begin
				mtrw = matrowcnt(CLOutr);
				For(i=0;i<mtrw;i=i+1) begin
	  			matrowget(CLOutr,i,CLOutrw);
	  			foundf = true;
	  			if(nonblank(paymodes) and setinset(CLOutr.PayMode,paymodes)==false)then begin foundf = false; end;
	  			
	  			if(foundf)then begin
						startformat(15);
							outstring(0,0,CLOutr.TransDate,false);
							outstring(75,0,CLOutrw.CorspCode,false);
							CLCor.Code = CLOutrw.CorspCode;
							readfirstmain(CLCor,1,true);
							if(CLCor.Comment!=CLOutrw.Comment)then begin
								outstring(150,0,CLCor.Comment,false);
							end else begin
								outstring(150,0,"",false);
							end;
							outstring(225,0,CLOutrw.Sum,false);
							outstring(300,0,CLOutr.CurncyCode,false);
							basesum = CLOutrw.Sum;
							if(CLOutr.CurncyCode!="AZN")then begin
								basesum = basesum/CLOutr.FrRate*CLOutr.ToRateB1;
							end;
							outstring(325,0,basesum,false);
							For(j=0;j<pmmtrw;j=j+1) begin
	  						matrowget(PMb,j,PMrw);
	  						if(PMrw.Code==CLOutr.PayMode)then begin
	  							outstring(375,0,PMrw.Comment,false);
	  						end;
							end; 
							outstring(450,0,CLOutrw.Comment,false);
						endformat;
	  			end;
				end; 
			end;
		end;
		
	endjob;
	LogProcTime("CLOutRepRn",getcurtick() - curtick);
return;
end;