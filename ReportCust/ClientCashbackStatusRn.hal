//server-onlyexternal function val AbsoluteVal(val);external procedure LogProcTime(string,longint);SetLangMode(LangRussian,"RUS",0);globalprocedure ClientCashbackStatusRn(record RcVc RepSpec)begin  Integer rw,i,rwcnt;  record LoyaltyCardVc LoyaltyCardr,LoyaltyCard2r;  record LCCashbackLevelVc LCCBLr;  row LCCashbackLevelVc LCCBLrw;  record PointsHistVc PHr;  record LCMemberLevelVc LCMemberLevelr;  Boolean testf,testf1,TrHs,TrHs1,upperLevelFound;  val sumToUpperLevel,percent,spentPoints,curentlevel;	longint curtick;		curtick = getcurtick();  StartReportJob("Статус cashback по клиенту");  rw = 1;  if (NonBlank(RepSpec.f1)) then begin    Header(rw,"Клиент: " & RepSpec.f1,1);    rw = rw + 1;  end;  EndHeader;    //SetRepCol(2,80);  //SetRepCol(5,150);  //SetRepCol(3,160);  //SetRepCol(4,240);      if (NonBlank(RepSpec.f1)) then begin    LoyaltyCardr.CustCode = RepSpec.f1;    TrHs = true;    while (LoopKey("CustCode",LoyaltyCardr,1,TrHs)) begin      testf = true;      if (LoyaltyCardr.CustCode!=RepSpec.f1) then begin testf = false; TrHs = false; end;      if (LoyaltyCardr.Closed==1) then begin testf = false; end;      if (testf) then begin        LCCBLr.LCMLevel = LoyaltyCardr.LCMLevel;        testf = ReadFirstMain(LCCBLr,1,true);        if (testf) then begin          rwcnt = MatRowCnt(LCCBLr);          for (i=0;i<rwcnt;i=i+1) begin            MatRowGet(LCCBLr,i,LCCBLrw);            if (LoyaltyCardr.CashbackLevelPoints<LCCBLrw.FromPoints) then begin              upperLevelFound = true;              sumToUpperLevel = LCCBLrw.FromPoints - LoyaltyCardr.CashbackLevelPoints;              percent = LCCBLrw.CashbackPercent;              rwcnt = i;            end;            if (LoyaltyCardr.CashbackLevelPoints>=LCCBLrw.FromPoints) then begin              curentlevel = LCCBLrw.CashbackPercent;            end;          end;        end;      end;      if (testf) then begin        spentPoints = blankval;        TrHs1 = true;        PHr.CustCode = RepSpec.f1;        //PHr.LMCardNr = LoyaltyCardr.SerNr;        while (LoopKey("CustCode",PHr,1,TrHs1)) begin          testf1 = true;          if (PHr.CustCode!=RepSpec.f1) then begin testf1 = false; TrHs1 = false; end;          if(PHr.LMCardNr!=LoyaltyCardr.SerNr)then begin          	LoyaltyCard2r.SerNr = PHr.LMCardNr;          	if(readfirstmain(LoyaltyCard2r,1,true))then begin          		if(LoyaltyCard2r.LCMLevel!="CASACOIN")then begin          			testf1 = false;          		end;          	end else begin          		testf1 = false;          	end;          end;          //if (PHr.CustCode!=RepSpec.f1 or PHr.LMCardNr!=LoyaltyCardr.SerNr) then begin testf1 = false; TrHs1 = false; end;          if (PHr.FWBalance!=BlankVal or PHr.Points>0 or PHr.FileName!="IVVc") then begin testf1 = false; end;          if (testf1) then begin            spentPoints = spentPoints + AbsoluteVal(PHr.Points);          end;        end; RESETLOOP(PHr);        LCMemberLevelr.Code = LoyaltyCardr.LCMLevel;        ReadFirstMain(LCMemberLevelr,1,true);        StartFormat(15);          OutString(15,0,"Программа лояльности: " & LCMemberLevelr.Comment,false);        EndFormat;        Gray_Divider(0,1);        StartFormat(15);          OutString(30,0,"Бонусов доступных для использования: " & LoyaltyCardr.PointsBalance,false);        EndFormat;        StartFormat(15);          OutString(30,0,"Накопленная сумма покупок: " & LoyaltyCardr.PointsBalanceTotal,false);        EndFormat;        StartFormat(15);          OutString(30,0,"Накоплено бонусов итого: " & (LoyaltyCardr.PointsBalance + spentPoints),false);        EndFormat;        StartFormat(15);          OutString(30,0,"Потрачено бонусов итого: " & spentPoints,false);        EndFormat;        StartFormat(15);          OutString(30,0,"Текущий уровень " & curentlevel & "%",false);        EndFormat;        if (upperLevelFound) then begin          StartFormat(15);            OutString(30,0,"Осталось накопить до следующего уровня " & percent & "%: " & sumToUpperLevel & " AZN",false);          EndFormat;        end else begin          StartFormat(15);            OutString(30,0,"Накоплено баллов до максимального уровня ",false);          EndFormat;        end;        Gray_Divider(0,1);      end;    end;  end;      EndJob;  LogProcTime("ClientCashbackStatusRn",getcurtick() - curtick);  return;end;