//server-only
external function Boolean IsEnterprise();
external function Boolean FindICS(string,string,string,string,var record ICSVc);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external function val MulRateToBase2(var string,val,val,val,val,val,val,roundmode);
external procedure HTCusts(string, string, var string);
external procedure HTArts(string, string, var string);
external procedure HTCustCat(string,var string);
external procedure HTSaleMan(string, var string);
external procedure HT2Per(Date, Date , var string);
external function Boolean SetInSet2(string,string);
external procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);
external procedure CntPOSCurrencies(var Array string,var Array Boolean,var Integer); 
external procedure ExtractObj(string,var Integer,var string);
external function string 50 GetGender(integer);
external procedure LogProcTime(string,longint);

SetLangMode(LangRussian,"RUS",0);


function val CountCost(string ACode, string FName, LongInt TrNr, integer ARow) 
BEGIN
val total;
record ItemHistvc IHr;
boolean TrHs, testf;
	total = 0;
	IHr.FileName = FName;
	IHr.TransNr = TrNr;
	IHr.Row = ARow;
    TrHs = true;
		while (LoopKey("FNTransNr",IHr,3,TrHs)) begin
			testf = true;
			if (IHr.ArtCode!=ACode or  IHr.FileName!=FName or IHr.TransNr!=TrNr or IHr.Row!=ARow) then begin TrHs = false; testf = false; end;

			if (testf) then begin
				if (IHr.Qty>0) then begin
					total = total - IHr.TotCostPrice;
				end else begin
					total = total + IHr.TotCostPrice;
				end;
			end;
		
		end;

CountCost = total;
  RETURN;
END; 

global
procedure CustCompRn(record RcVc RepSpec) //Edit ************************** Sasha2, Tuesday, 25 June 2013 {
BEGIN
  record CUVc CUr;
  record CSVc CSr;
  record CCatVc CCatR;
  record IVvc IVr; //Edit ************************** Sasha2, Thursday, 20 June 2013
  row IVvc IVrw; //Edit ************************** Sasha2, Thursday, 20 June 2013
  record ItemHistvc IHr; //Edit ************************** Sasha2, Thursday, 20 June 2013
  record Uservc Userr; //Edit ************************** Sasha2, Thursday, 20 June 2013
  record  CompaniesBlock Companiesb; //Edit ************************** Sasha2, Tuesday, 25 June 2013
  row  CompaniesBlock Companiesrw; //Edit ************************** Sasha2, Tuesday, 25 June 2013
  record INvc INr;
  record DIvc DIr;
  Boolean TrHs,testf,TrHsCu,testfcu,testf2;
  string 255 frcc,tocc;
  string 255 customer,key,classification,tempGroup,storeGroup; 
  integer keyCount, pos,posGroup; 
  Boolean TS,testf1,print; 
  val cost,tempCost,finalCost,finalProfit,finalSum,tempProfit,tempSum,tempRent,finalRent,ivfr,ivto,fr,to1,to2,br1,br2; 
  Integer rwcnt,i,j,rentCount,oldcomp;  
  string 20 curncy; 
  Array string 50 carncy;
  Array Boolean achangecrncyf;
  Integer acrncnt,blcnt;
  string 255 brand,type;
  vector Boolean excludeCustomer,lcout; //Edit***************************Sasha2,9:37 05.07.2017
  integer curcmp;
  array Integer fieldPos;
	longint curtick;
	
	curtick = getcurtick();

	curcmp = currentcompany;
  CntPOSCurrencies(carncy,achangecrncyf,acrncnt);
  curncy = carncy[0];
  BlockLoad(Companiesb);
  blcnt = MatRowCnt(Companiesb);
  frcc = FirstInRange(RepSpec.f1,20);
  tocc = LastInRange(RepSpec.f1,20);


  startreportnoheaderjob("Статистика клиент-компания");
  customer = RepSpec.f1;

	Startformat(15);
		outstring(60,0,"Период:",true);
		outstring(130,0,RepSpec.sStartDate & chr(58) & RepSpec.sEndDate,true);	
	endformat;

 	if (NonBlank(RepSpec.f1) or nonblank(RepSpec.f3)) then begin
		Startformat(15);
			outstring(60,0,"Клиент:",true);
			outstring(130,0,RepSpec.f1,true);	
		endformat;
	end else begin;
		Startformat(15);
			outstring(160,0,"КЛИЕНТ ИЛИ КЛАССИФИКАЦИЯ НЕ ЗАДАНЫ. ВЫБЕРИТЕ КЛИЕНТА!",true);
			goto CustErrorEnd;
		endformat;
	end; 
	if (NonBlank(RepSpec.f3)) then begin
		Startformat(15);
			outstring(60,0,"Классификация:",true);
			outstring(130,0,RepSpec.f3,true);	
		endformat;
	end;

	if (NonBlank(RepSpec.f2)) then begin
		Startformat(15);
			outstring(60,0,"Компания:",true);
			ExtractObj(RepSpec.f2,posGroup,tempGroup);
			while (nonblank(tempGroup)) begin
					for (j=1;j<=blcnt;j=j+1) begin
							MatRowGet(Companiesb,j-1,Companiesrw);
							if (tempGroup==Companiesrw.CompCode) then begin 
								Startformat(15);
									outstring(130,0,Companiesrw.CompName,true) 
								endformat;
							end;		
					end;										 																		
				ExtractObj(RepSpec.f2,posGroup,tempGroup);
			end;
		endformat;
	end else begin;
		Startformat(15);
			outstring(60,0,"Компания:",true);
			outstring(130,0,"Все компании",true);	
		endformat;
	end;
	if(nonblank(RepSpec.f4))then begin
		Startformat(15);
			outstring(60,0,"Обьект сч/ф:",true);
			outstring(130,0,RepSpec.f4,true);	
		endformat;
	end;
	if(nonblank(RepSpec.f5))then begin
		Startformat(15);
			outstring(60,0,"Обьект товара:",true);
			outstring(130,0,RepSpec.f5,true);	
		endformat;
	end;
  
  pos = 0;
  fieldPos[0] = pos; pos = pos + 40;
  fieldPos[1] = pos; pos = pos + 30;
  fieldPos[2] = pos; pos = pos + 40;
  fieldPos[3] = pos; pos = pos + 40;
  fieldPos[4] = pos; pos = pos + 30;
  fieldPos[5] = pos; pos = pos + 50;
  fieldPos[6] = pos; pos = pos + 40;
  fieldPos[7] = pos; pos = pos + 40;
  fieldPos[8] = pos; pos = pos + 20;
  fieldPos[9] = pos; pos = pos + 30;
  fieldPos[10] = pos; pos = pos + 40;
  fieldPos[11] = pos; pos = pos + 10;
  fieldPos[12] = pos; pos = pos + 10;
  fieldPos[13] = pos; pos = pos + 10;
  fieldPos[14] = pos; pos = pos + 10;
  fieldPos[15] = pos; pos = pos + 10;
  fieldPos[16] = pos; pos = pos + 10;
  fieldPos[17] = pos; pos = pos + 10;
  fieldPos[18] = pos; pos = pos + 10;
  fieldPos[19] = pos; pos = pos + 10;
  fieldPos[20] = pos; pos = pos + 10;

	Startformat(15);
		outstring(fieldPos[0],0,"Склад",false);
		outstring(fieldPos[1],0,"№ сч/ф.",false);
		outstring(fieldPos[2],0,"Дата сч/ф.",false);
		outstring(fieldPos[3],0,"Время сч/ф.",false);
		outstring(fieldPos[4],0,"Код товара",false);
		outstring(fieldPos[5],0,"Бренд",false);
		outstring(fieldPos[6],0,"Тип изделия",false);
		outstring(fieldPos[7],0,"Название товара",false);
		outstring(fieldPos[8],0,"Цена",false);
		outstring(fieldPos[9],0,"% скидки",false);
		outstring(fieldPos[10],0,"Сумма AZN",false);

		outstring(fieldPos[11],0,"Пол",false);
		outstring(fieldPos[12],0,"Код клиента",false);
		outstring(fieldPos[13],0,"ФИО клиента",false);
		outstring(fieldPos[14],0,"Моб.телефон",false);
		outstring(fieldPos[15],0,"Доп.телефон",false);
		outstring(fieldPos[16],0,"Телефон",false);
		outstring(fieldPos[17],0,"E-mail",false);
		outstring(fieldPos[18],0,"Адрес",false);
    outstring(fieldPos[19],0,"Накопительная карта",false);
		outstring(fieldPos[20],0,"Баллов",false);

endformat;

	Black_Divider(0,1); 
	
	CUr.Code = customer;
	TrHsCu = true;
	while(loopmain(CUr,1,TrHsCu))begin
		testfcu = true;
		if(nonblank(customer) and CUr.Code!=customer)then begin TrHsCu = false; testfcu = false; end;
		if(nonblank(RepSpec.f3) and SetInSet(RepSpec.f3,CUr.Classification)==false)then begin testfcu = false; end;
		
		finalSum = 0;
		posGroup = 0;
		storeGroup = "";
		oldcomp = CurrentCompany;
		if(testfcu)then begin
			if (nonblank(RepSpec.f2)) then begin
				ExtractObj(RepSpec.f2,posGroup,tempGroup);
					while (nonblank(tempGroup)) begin
							storeGroup = storeGroup  & tempGroup& chr(44);										 																		
						ExtractObj(RepSpec.f2,posGroup,tempGroup);
					end;
			end;
																	 
			for (j=1;j<=blcnt;j=j+1) begin
				SetCompany(j,false);
				tempSum = 0;
				testf = true;
				MatRowGet(Companiesb,j-1,Companiesrw);
				if (nonblank(RepSpec.f2) and (SetInSet2(Companiesrw.CompCode,storeGroup)==false)) then begin testf = false; end;
				
				if (testf) then begin	

					TS = true;
					IVr.CustCode = CUr.Code;
					IVr.InvDate = RepSpec.sStartDate;
					key = "CustDate";
					keyCount = 2;
		
						if (ReadFirstKey("CustDate",IVr,2,false)) then begin
							if ((IVr.CustCode==CUr.Code and IVr.InvDate>=RepSpec.sStartDate and IVr.InvDate<=RepSpec.sEndDate)==false) then begin TS = false; end;
						end else begin
							TS = false;
						end;
					//end;
	
					while (LoopKey(key,IVr,keyCount,TS)) begin
					testf1 = true;
						if (IVr.CustCode!=CUr.Code) then begin TS = false; testf1 = false; end;			
						if (IVr.OKFlag==0) then begin testf1 = false; end;
						if (IVr.Invalid==1) then begin testf1 = false; end;
						if(nonblank(RepSpec.f4) and !setinset(RepSpec.f4,IVr.Objects))then begin testf1 = false; end;// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 28 November 2017 11:37:29
						
						
						If(RepSpec.sStartDate>IVr.TransDate) then begin testf1 = false; end;
						If(IVr.TransDate>RepSpec.sEndDate) then begin TS = false; testf1 = false; end;
						if (testf1) then begin
							ivfr = 1; ivto = 1;
							fr = 1; to1 = 1;
							ivfr = IVr.FrRate;
							ivto = IVr.ToRateB1;

							if(ivfr==0 or ivto==0)then begin
								ivfr = 1; ivto = 1;
							end;
							GetFullCurncyRate(curncy,IVr.TransDate,fr,to1,to2,br1,br2);
							if(fr==0 or to1==0)then begin
								fr = 1; to1 = 1;
							end;
						  rwcnt = MatRowCnt(IVr);
							for (i=0;i<rwcnt;i=i+1) begin
							  MatRowGet(IVr,i,IVrw);
							  testf2 = true;
							  if(nonblank(RepSpec.f5) and !setinset(RepSpec.f5,IVrw.Objects))then begin testf2 = false; end;// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 28 November 2017 11:38:55
							  if(IVrw.stp!=kInvoiceRowTypeNormal)then begin testf2 = false; end;// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 28 November 2017 11:39:13
							  
								if (testf2) then begin
									Startformat(15);
										MatRowGet(Companiesb,CurrentCompany-1,Companiesrw);
										outstring(fieldPos[0],0,IVr.Location,false);
										outstring(fieldPos[1],0,IVr.SerNr,false);
										outstring(fieldPos[2],0,IVr.InvDate,false);
										outstring(fieldPos[3],0,IVr.TransTime,false);
										outstring(fieldPos[4],0,IVrw.ArtCode,false);
										INr.Code = IVrw.ArtCode;
										ReadFirstMain(INr,1,true);
										pos = 0;
										brand = "";
										type = "";
										ExtractObj(INr.DispGroups,pos,classification);
										while (NonBlank(classification)) begin
											DIr.Code = classification;
											if (ReadFirstMain(DIr,1,true)) then begin
												if (DIr.CType=="BRAND") then begin
													brand = DIr.Name;
												end;
												if (DIr.CType=="TYPE") then begin
													type = DIr.Name;
												end;
											end;
											if (NonBlank(brand) and NonBlank(type)) then begin
												pos = len(INr.DispGroups);
											end;
											ExtractObj(INr.DispGroups,pos,classification);
										end;
										outstring(fieldPos[5],0,brand,false);
										outstring(fieldPos[6],0,type,false);	
										outstring(fieldPos[7],0,IVrw.Spec,false);												
										outstring(fieldPos[8],0,IVrw.Price,false);

										if(Blank(IVrw.vRebate) or IVrw.vRebate==0)then begin
											outstring(fieldPos[9],0,"0" & chr(37),false);
										end else begin
											outstring(fieldPos[9],0,IVrw.vRebate & chr(37),false);
										end;

										if(IVr.CurncyCode!=curncy)then begin 
											outstring(fieldPos[10],0,IVrw.Sum/ivfr*ivto,false);
											finalSum = finalSum + IVrw.Sum/ivfr*ivto;
											tempSum = tempSum + IVrw.Sum/ivfr*ivto;
										end else begin
											outstring(fieldPos[10],0,IVrw.Sum,false);
											finalSum = finalSum + IVrw.Sum;
											tempSum = tempSum + IVrw.Sum;
										end;
										
										outstring(fieldPos[11],0,GetGender(CUr.Gender),false);
										outstring(fieldPos[12],0,CUr.Code,false);
								    outstring(fieldPos[13],0,CUr.Name,false);
								    outstring(fieldPos[14],0,CUr.Mobile,false);
								    outstring(fieldPos[15],0,CUr.AltPhone,false);
								    outstring(fieldPos[16],0,CUr.Phone,false);
								    outstring(fieldPos[17],0,CUr.eMail,false);
								    outstring(fieldPos[18],0,CUr.InvAddr0,false);
                    if(lcout[IVr.SerNr]==false)then begin
                      outstring(fieldPos[19],0,IVr.LoyaltyCardNr,false);
                      outstring(fieldPos[20],0,IVr.Points,false);
                      lcout[IVr.SerNr] = true;
                    end;
									endformat;											
								end;
							end; 
						end;
					end;
          RESETLOOP(IVr);
					if (tempSum!=0 and RepSpec.Media!=mtExcel) then begin
						Gray_Divider(0,1);
						Startformat(15);
							outstring(fieldPos[0],0,"",false);
							outstring(fieldPos[1],0,"",false);
							outstring(fieldPos[2],0,"",false);
							outstring(fieldPos[3],0,"",false);
							outstring(fieldPos[4],0,"",false);
							outstring(fieldPos[5],0,"",false);
							outstring(fieldPos[6],0,"",false);
							outstring(fieldPos[7],0,"",false);
							outstring(fieldPos[8],0,"Итог по компании:" & CUr.Code,false);
							outstring(fieldPos[9],0,Companiesrw.CompName,false);
							outstring(fieldPos[10],0,tempSum,false);
							outstring(fieldPos[11],0,"",false);
          		outstring(fieldPos[12],0,"",false);
          		outstring(fieldPos[13],0,"",false);
          		outstring(fieldPos[14],0,"",false);
          		outstring(fieldPos[15],0,"",false);
          		outstring(fieldPos[16],0,"",false);
          		outstring(fieldPos[17],0,"",false);
          		outstring(fieldPos[18],0,"",false);
						EndFormat;
						Gray_Divider(0,1);
					end;
				end;
			end;
		
			ResetCompany(oldcomp);
			if((nonblank(RepSpec.f1) or finalSum!=0) and RepSpec.Media!=mtExcel)then begin
				Black_Divider(0,1);
					Startformat(15);
						outstring(fieldPos[0],0,"",false);
						outstring(fieldPos[1],0,"",false);
						outstring(fieldPos[2],0,"",false);
						outstring(fieldPos[3],0,"",false);
						outstring(fieldPos[4],0,"",false);
						outstring(fieldPos[5],0,"",false);
						outstring(fieldPos[6],0,"",false);
						outstring(fieldPos[7],0,"",false);
						outstring(fieldPos[8],0,"Итог по выбранным компаниям:" & CUr.Code,false);
						outstring(fieldPos[9],0,"",false);
						outstring(fieldPos[10],0,finalSum,false);
						outstring(fieldPos[11],0,"",false);
        		outstring(fieldPos[12],0,"",false);
        		outstring(fieldPos[13],0,"",false);
        		outstring(fieldPos[14],0,"",false);
        		outstring(fieldPos[15],0,"",false);
        		outstring(fieldPos[16],0,"",false);
        		outstring(fieldPos[17],0,"",false);
        		outstring(fieldPos[18],0,"",false);
					EndFormat;
			end;
			Black_Divider(0,1);
		end;
	end;

	CustErrorEnd:;
  endjob;//Edit ************************** Sasha2, Tuesday, 25 June 2013 }
	resetcompany(curcmp);
  LogProcTime("CustCompRn",getcurtick() - curtick);
  RETURN;
END;
