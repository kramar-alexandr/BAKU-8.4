//server-only
external procedure YcToStr(Integer,var string);
external procedure FindNLAccBal(string,string,string,Integer,Date,Date,Integer,Integer,Boolean,string,Integer,string,string,var val);
external procedure GetObjs(string,string,var string);
external function val cur2cur(String,String,Date,Val);
external function val cur2b1(String,Date,Val);
external function LongInt DateDiff(Date,Date);
external function val AbsoluteVal(val);
remote function val ItemInStock(var record INVc,string);
external procedure LogProcTime(string,longint);

SetLangMode(LangRussian,"RUS",0);



global
procedure SKURn(record RcVc RepSpec)
BEGIN
	record INVc INr;
	array string 200 abrands, aLocation,abrandsname;
	record DIVc DIr;
	record CompaniesBlock CBb;
	boolean testf,TrHs,foundf,TrHs1,testf1;
	integer i, oldcomp, compcnt, comp, brndcnt, lccnt, j;
	record IVVc IVr;
	row IVVc IVrw;
	record ItemStatusVc ISr;
	vector LongInt vBrandLocProdInStock, vBrandProd;
	vector boolean vBrandf,vBrandItem,vBrandItemInStock;
	vector string 255 vBrandLocProdLoc;
	boolean trhs2;
	longint curtick;
	
	curtick = getcurtick();
	StartReportNoHeaderJob("Отчет SKU");
	
		oldcomp = CurrentCompany;
		brndcnt = 0;
		blockload(CBb);
		compcnt = matrowcnt(CBb);
		for(comp=0;comp<compcnt;comp=comp+1)begin
			if(comp==0)then begin
				abrands[brndcnt] = "SW";
				abrandsname[brndcnt] = "SWAROWSKI";
				brndcnt = brndcnt + 1;
			end;
			SetCompany(comp+1,false);
			DIr.CType = "BRAND";
			testf = true;
			while(LoopKey("CType",DIr,1,testf))begin
				testf = true;
				if(DIr.CType!="BRAND")then begin testf = false; end;
				if(testf)then begin
					if(vBrandf[DIr.Code]==false)then begin
						abrands[brndcnt] = DIr.Code;
						abrandsname[brndcnt] = DIR.Name;
						brndcnt = brndcnt + 1;
						vBrandf[DIr.Code] = true;
					end;
				end;
			end;
			resetloop(DIr);
			
			resetloop(INr);
			INr.Code = "";
			while(LoopMain(INr,1,true))begin
				if(comp==0)then begin
					INr.DispGroups = "SW";
				end;
				For(i=0;i<brndcnt;i=i+1) begin
	  			if(setinset(abrands[i],INr.DispGroups))then begin
	  				if(vBrandItem[INr.Code & ";" & abrands[i]]==false)then begin
							vBrandProd[abrands[i]] = vBrandProd[abrands[i]] + 1;
							vBrandItem[INr.Code & ";" & abrands[i]] = true;
	  				end;
	  				if(vBrandItemInStock[INr.Code & ";" & abrands[i]]==false)then begin
	  					resetloop(ISr);
	  					ISr.Code = INr.Code;
	  					ISr.Location = "";
	  					trhs2 = true;
	  					while(loopmain(ISr,2,trhs2))begin
	  						if(ISr.Code!=INr.Code)then begin
	  							trhs2 = false;
	  						end;
	  						if(ISr.Instock>0 and ISr.Location!=";;;" and trhs2)then begin
	  							vBrandLocProdInStock[abrands[i]] = vBrandLocProdInStock[abrands[i]] + 1;
	  							if(setinset(ISr.Location,vBrandLocProdLoc[abrands[i]])==false)then begin
	  								vBrandLocProdLoc[abrands[i]] = vBrandLocProdLoc[abrands[i]] & "," & ISr.Location;
	  							end;
	  							vBrandItemInStock[INr.Code & ";" & abrands[i]] = true;
	  						end;
	  					end;
	  				end;
	  			end;
				end; 
				
				/*DIr.CType = "BRAND";
				while(LoopKey("CType",DIr,1,true))begin
					logtext(0,"ent3");
					testf = true;
					if(DIr.CType!="BRAND")then begin testf = false; end;
					if(testf)then begin
						if(setinset(DIr.Name,INr.DispGroups))then begin
							logtext(0,"ent4");
							if(blank(vBrandProd[DIr.Name]))then begin
								logtext(0,"ent5");
								vBrandProd[DIr.Name] = 1;
								abrands[brndcnt] = DIr.Name;
								brndcnt = brndcnt + 1;
							end else begin
								vBrandProd[DIr.Name] = vBrandProd[DIr.Name] + 1;
							end;
						end;
					end;
				end;*/
			end;
		end;
		ResetCompany(oldcomp);

		StartFormat(15);
			OutString(0,0,"Бренд",False);
			OutString(50,0,"Количество наименований тов.",False);
			OutString(300,0,"В наличии",False);
		endformat;
		for(i=0;i<brndcnt;i=i+1)begin
			StartFormat(15);
				OutString(0,0,abrandsname[i],False);
				OutString(50,0,vBrandProd[abrands[i]],False);
				OutString(100,0,vBrandLocProdInStock[abrands[i]],False);
				OutString(100,0,vBrandLocProdLoc[abrands[i]],False);
			endformat;
		end;
	endjob;
	LogProcTime("SKURn",getcurtick() - curtick);
	RETURN;
END;