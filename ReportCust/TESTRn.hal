//server-only
external procedure LogProcTime(string,longint);
remote function string 255 GetCompanyShortCode(string);
remote procedure PUVc_PasteCostPrice(var record PUVc,Integer);




global procedure TEST1Rn(record RcVc RepSpec)
begin
	
RepSpec.Media = mtFile;
	StartReportNoheaderJob("Информация о клиентах");
	
	startformat(15);
		OutString(0,0,"Код",false);
		OutString(130,0,"Наименование",false);
		OutString(300,0,"Телефон",false);
		OutString(300,0,"Доп. телефон",false);
		OutString(300,0,"Моб. телефон",false);
		OutString(300,0,"eMail",false);
		OutString(300,0,"Скидка",false);
		OutString(300,0,"Дата создания",false);
		OutString(300,0,"Создан в магазине(склад)",false);
		OutString(300,0,"Название",false);
		OutString(300,0,"Комментарий к созданию",false);
		OutString(300,0,"Комментарий",false);
		OutString(300,0,"Отключен от рассылки",false);
		OutString(300,0,"Статус",false);
		OutString(300,0,"Адрес",false);
	endformat;	
	endjob;
return;
end;


global procedure TESTRn(record RcVc RepSpec)
begin
	
RepSpec.Media = mtHttpWindow;
RepSpec.repname = "TEST1Rn";
RunReport(RepSpec,0); 

return;
end;



global webpublic updating procedure WebTESTIDCreatedPOpricesRn()  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 17:10 20.02.2020
begin
	record SHVc SHr;
	row SHVc SHrw;
	record ItemHistVc IHr, locPUIH;
	record POVc POr;
	row POVc POrw;
	boolean testf, TrHs, ORrowf, SHErrorf;
	integer i, FIFOcnt, POComp, v, ecvcnt;
	record ConsItemVc CIr;
	vector val vItemFifo, vItemHTotCostPr, vItemPosQty;
	record ORVc ORr;
	row ORVc ORrw;
	record RlinkVc RLr;
	LongInt PUSerNr, AllItems, GoodPOs, BadPos;
	record ECVendFobSetBlaock ECVFSBb;
	row ECVendFobSetBlaock ECVFSBrw;
	record PUVc PUr;
	row PUVc PUrw;
	string 255 CompString, problemPos;
	
	if (SetCompany(18,false)) then begin
		SHr.SerNr = -1;
		AllItems = 0;
		GoodPOs = 0;
		BadPos = 0;
		while (loopmain(SHr,1,true)) begin
			SHErrorf = false;
			ORrowf = false;
			ORr.SerNr = SHr.OrderNr;
			if(ReadFirstMain(ORr,1,true))then begin
				testf = true;
				for (i=0;i<matrowcnt(SHr);i=i+1) begin
					matrowget(SHr,i,SHrw);
					IHr.FileName = "SHVc";
					IHr.TransNr = SHr.SerNr;
					IHr.Row = i;
					TrHs = true;
					FIFOcnt = 0;
					CIr.Code = SHrw.ArtCode;
					if (SHrw.LCPOrowNr>0) then begin
						if(ReadFirstMain(CIr,1,true))then begin 
							vItemPosQty[CIr.LocCode & "##" & SHrw.LCPOrowNr & "_" & SHr.SerNr] = SHrw.Ship;
							while (LoopBackKey("FNTransNr",IHr,3,TrHs)) begin
								if(IHr.FileName!="SHVc")then begin TrHs = false; end;
								if(IHr.TransNr!=SHr.SerNr)then begin TrHs = false; end;
								if(IHr.Row!=i)then begin TrHs = false; end;
								if(IHr.ArtCode==SHrw.ArtCode and TrHs)then begin
									FIFOcnt = FIFOcnt + 1;
									vItemFifo[CIr.LocCode & "##" & SHrw.LCPOrowNr & "_" & SHr.SerNr] = vItemFifo[CIr.LocCode & "##" & SHrw.LCPOrowNr & "_" & SHr.SerNr] + IHr.TotCostPriceCurncy / (IHr.Qty * -1);
									vItemHTotCostPr[CIr.LocCode & "##" & SHrw.LCPOrowNr & "_" & SHr.SerNr] = vItemHTotCostPr[CIr.LocCode & "##" & SHrw.LCPOrowNr & "_" & SHr.SerNr] + IHr.TotCostPrice / (IHr.Qty * -1);
									// if (SHrw.LCPOrowNr<1) then begin
										// logtext(0,SHr.SerNr & "  SerNr");
										// logtext(0,CIr.LocCode & "  LocCode");
										// logtext(0,SHrw.LCPOrowNr & "  LCPOrowNr");
										// logtext(0,(IHr.TotCostPriceCurncy / (IHr.Qty * -1)) & "  Fifo");
										// logtext(0,vItemFifo[CIr.LocCode & "_" & SHrw.LCPOrowNr & "_" & SHr.SerNr] & "  resultVector");
									// end;
								end;
							end;
							if (SHrw.LCPOrowNr > 0) then begin
								ORrowf = true;
							end;
							ResetLoop (IHr);
							vItemFifo[CIr.LocCode & "##" & SHrw.LCPOrowNr & "_" & SHr.SerNr] = vItemFifo[CIr.LocCode & "##" & SHrw.LCPOrowNr & "_" & SHr.SerNr] / FIFOcnt;
							vItemHTotCostPr[CIr.LocCode & "##" & SHrw.LCPOrowNr & "_" & SHr.SerNr] = vItemHTotCostPr[CIr.LocCode & "##" & SHrw.LCPOrowNr & "_" & SHr.SerNr] / FIFOcnt;
						end;
					end else begin
						if(ReadFirstMain(CIr,1,true))then begin 
							vItemPosQty[CIr.LocCode & "##" & i & "_" & SHr.SerNr] = SHrw.Ship;
							while (LoopBackKey("FNTransNr",IHr,3,TrHs)) begin
								if(IHr.FileName!="SHVc")then begin TrHs = false; end;
								if(IHr.TransNr!=SHr.SerNr)then begin TrHs = false; end;
								if(IHr.Row!=i)then begin TrHs = false; end;
								if(IHr.ArtCode==SHrw.ArtCode and TrHs)then begin
									FIFOcnt = FIFOcnt + 1;
									vItemFifo[CIr.LocCode & "##" & i & "_" & SHr.SerNr] = vItemFifo[CIr.LocCode & "##" & i & "_" & SHr.SerNr] + IHr.TotCostPriceCurncy / (IHr.Qty * -1);
									vItemHTotCostPr[CIr.LocCode & "##" & i & "_" & SHr.SerNr] = vItemHTotCostPr[CIr.LocCode & "##" & i & "_" & SHr.SerNr] + IHr.TotCostPrice / (IHr.Qty * -1);
									// if (SHrw.LCPOrowNr<1) then begin
										// logtext(0,SHr.SerNr & "  SerNr");
										// logtext(0,CIr.LocCode & "  LocCode");
										// logtext(0,SHrw.LCPOrowNr & "  LCPOrowNr");
										// logtext(0,(IHr.TotCostPriceCurncy / (IHr.Qty * -1)) & "  Fifo");
										// logtext(0,vItemFifo[CIr.LocCode & "_" & SHrw.LCPOrowNr & "_" & SHr.SerNr] & "  resultVector");
									// end;
								end;
							end;
							if (SHrw.LCPOrowNr > 0) then begin
								ORrowf = true;
							end;
							ResetLoop (IHr);
							vItemFifo[CIr.LocCode & "##" & i & "_" & SHr.SerNr] = vItemFifo[CIr.LocCode & "##" & i & "_" & SHr.SerNr] / FIFOcnt;
							vItemHTotCostPr[CIr.LocCode & "##" & i & "_" & SHr.SerNr] = vItemHTotCostPr[CIr.LocCode & "##" & i & "_" & SHr.SerNr] / FIFOcnt;
						end;
					end;
				end;
				matrowget (ORr,0,ORrw);
				POComp = ORrw.ECReservComp;
				if(POComp<=0)then begin
					BlockLoad(ECVFSBb);
					ecvcnt = matrowcnt(ECVFSBb);
					for(v=0;v<ecvcnt;v=v+1)begin
						matrowget (ECVFSBb,v,ECVFSBrw);
						if(ECVFSBrw.VendName==ORr.CustCode)then begin
							POComp = ECVFSBrw.CompanyNr;
							v = ecvcnt;
						end;
					end;
				end;
				if(ReadRecordLink(SHr,1,PUr,RLr))then begin
					PUSerNr = PUr.SerNr;
					// logtext(0,POSerNr & " POSerNr");
					// logtext(0,POComp & " POComp");
					if (SetCompany(POComp,false)) then begin
						PUr.SerNr = PUSerNr;
						if (ReadFirstMain(PUr,1,true)) then begin
							// logtext(0,POr.SerNr);
							for (i=0;i<matrowcnt(PUr);i=i+1) begin
								matrowget (PUr,i,PUrw);
								problemPos = "";
								if (ORrowf) then begin
									// logtext(0,POrw.ArtCode);
									if (PUrw.UPrice!=vItemFifo[PUrw.ArtCode & "##" & i + 1 & "_" & SHr.SerNr]/* or vItemPosQty[PUrw.ArtCode & "##" & i + 1 & "_" & SHr.SerNr]!=PUrw.Quant*/) then begin
										AllItems = AllItems + 1;
										if (!SHErrorf) then begin
											if (!SetInset(GetCompanyShortCode(POComp),CompString)) then begin
												if(nonblank(CompString))then begin CompString = CompString & ","; end;
												CompString = CompString & GetCompanyShortCode(POComp);
											end;
											WebOutString("SH_No_" & SHr.SerNr);
											WebOutString(" _     PU_No_ " & PUr.SerNr & " Company: " & GetCompanyShortCode(POComp));
											WebOutString("<BR>");
											SHErrorf = true;
										end;
										locPUIH.FileName = "PUVc";
										locPUIH.TransNr = PUr.SerNr;
										locPUIH.Row = i;
										CIr.Code = SHrw.ArtCode;
										if (ReadFirstKey("FNTransNr",locPUIH,3,true)) then begin
											if (locPUIH.Qty != locPUIH.RemQty) then begin
												problemPos = " Problem \(" & (locPUIH.Qty - locPUIH.RemQty) & " units shipped\)";
												BadPos = BadPos + 1;
											end else begin
												problemPos = " Good: " & (locPUIH.Qty - locPUIH.RemQty) & " units shipped";
												GoodPOs = GoodPOs + 1;
											end;
										end;
										WebOutString("________error_______" & PUrw.ArtCode & "_____SH_Price_=_" & vItemFifo[PUrw.ArtCode & "##" & i + 1 & "_" & SHr.SerNr] & "_PU_Price_=_" & PUrw.UPrice & /*"_____SH_Quant_=_" & vItemPosQty[PUrw.ArtCode & "##" & i + 1 & "_" & SHr.SerNr] & "_PU_Quant_=_" & PUrw.Quant & */"_______\(status_PO_Iterator_=_" & ORrowf & " row " & i + 1 & "\)" & problemPos);
										WebOutString("<BR>");
									// end else begin
										// WebOutString("____________________" & PUrw.ArtCode & "_____SH_Price_=_" & vItemFifo[PUrw.ArtCode & "_" & i + 1 & "_" & SHr.SerNr] & "_PO_Price_=_" & PUrw.Price & "\(status_PO_Iterator_=_" & ORrowf & "\)");
										// WebOutString("<BR>");
									end;
								end else begin
									// logtext(0,POrw.ArtCode);
									if (PUrw.UPrice!=vItemFifo[PUrw.ArtCode & "##" & i & "_" & SHr.SerNr]/* or vItemPosQty[PUrw.ArtCode & "##" & i & "_" & SHr.SerNr]!=PUrw.Quant*/) then begin
										AllItems = AllItems + 1;
										if (!SHErrorf) then begin
											if (!SetInset(GetCompanyShortCode(POComp),CompString)) then begin
												if(nonblank(CompString))then begin CompString = CompString & ","; end;
												CompString = CompString & GetCompanyShortCode(POComp);
											end;
											
											WebOutString("SH_No_" & SHr.SerNr);
											WebOutString("  _    PU_No_ " & PUr.SerNr & " Company: " & GetCompanyShortCode(POComp));
											WebOutString("<BR>");
											SHErrorf = true;
										end;
										locPUIH.FileName = "PUVc";
										locPUIH.TransNr = PUr.SerNr;
										locPUIH.Row = i;
										CIr.Code = SHrw.ArtCode;
										if (ReadFirstKey("FNTransNr",locPUIH,3,true)) then begin
											if (locPUIH.Qty != locPUIH.RemQty) then begin
												problemPos = " Problem \(" & (locPUIH.Qty - locPUIH.RemQty) & " units shipped\)";
												BadPos = BadPos + 1;
											end else begin
												problemPos = " Good: " & (locPUIH.Qty - locPUIH.RemQty) & " units shipped";
												GoodPOs = GoodPOs + 1;
											end;
										end;
										WebOutString("________error_______" & PUrw.ArtCode & "_____SH_Price_=_" & vItemFifo[PUrw.ArtCode & "##" & i & "_" & SHr.SerNr] & "_PU_Price_=_" & PUrw.UPrice & /*"_____SH_Quant_=_" & vItemPosQty[PUrw.ArtCode & "##" & i & "_" & SHr.SerNr] & "_PU_Quant_=_" & PUrw.Quant & */"_______\(status_PO_Iterator_=_" & ORrowf & "\)" & problemPos);
										WebOutString("<BR>");
									// end else begin
										// WebOutString("____________________" & PUrw.ArtCode & "_____SH_Price_=_" & vItemFifo[PUrw.ArtCode & "_" & -1 & "_" & SHr.SerNr] & "_PO_Price_=_" & PUrw.Price & "\(status_PO_Iterator_=_" & ORrowf & "\)");
										// WebOutString("<BR>");
									end;
								end;
							end;
						end;
					end;
					ResetCompany (18);
				end;
			end;
		end;
		WebOutString("<BR>");
		WebOutString("Problem_companies:" & CompString);
		WebOutString("<BR>");
		WebOutString("All positions: " & AllItems);
		WebOutString("<BR>");
		WebOutString("Problem positions: " & BadPos);
		WebOutString("<BR>");
		WebOutString("Good positions: " & GoodPOs);
	end;
	
	
	
	
 // weboutstring("");
 // WebOutString("<BR>");
end;









 // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 17:11 20.02.2020
// global webpublic updating procedure WebTESTIDCreatedPOpricesMn() Don't delete!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// begin
	// record SHVc SHr;
	// row SHVc SHrw;
	// record ItemHistVc IHr, locPUIH, oldlocPUIH;
	// record POVc POr;
	// row POVc POrw;
	// boolean testf, TrHs, ORrowf, SHErrorf, testf2;
	// integer i, FIFOcnt, POComp, v, ecvcnt;
	// record ConsItemVc CIr;
	// vector val vItemFifo, vItemHTotCostPr, vItemPosQty;
	// record ORVc ORr;
	// row ORVc ORrw;
	// record RlinkVc RLr;
	// LongInt PUSerNr, AllItems, GoodPOs, BadPos;
	// record ECVendFobSetBlaock ECVFSBb;
	// row ECVendFobSetBlaock ECVFSBrw;
	// record PUVc PUr;
	// row PUVc PUrw;
	// string 255 CompString, problemPos;
	
	// if (SetCompany(18,false)) then begin
		// SHr.SerNr = -1;
		// AllItems = 0;
		// GoodPOs = 0;
		// BadPos = 0;
		// while (loopmain(SHr,1,true)) begin
			// SHErrorf = false;
			// ORrowf = false;
			// ORr.SerNr = SHr.OrderNr;
			// if(ReadFirstMain(ORr,1,true))then begin
				// testf = true;
				// for (i=0;i<matrowcnt(SHr);i=i+1) begin
					// matrowget(SHr,i,SHrw);
					// IHr.FileName = "SHVc";
					// IHr.TransNr = SHr.SerNr;
					// IHr.Row = i;
					// TrHs = true;
					// FIFOcnt = 0;
					// CIr.Code = SHrw.ArtCode;
					// if (SHrw.LCPOrowNr>0) then begin
						// if(ReadFirstMain(CIr,1,true))then begin 
							// vItemPosQty[CIr.LocCode & "##" & SHrw.LCPOrowNr & "_" & SHr.SerNr] = SHrw.Ship;
							// while (LoopBackKey("FNTransNr",IHr,3,TrHs)) begin
								// if(IHr.FileName!="SHVc")then begin TrHs = false; end;
								// if(IHr.TransNr!=SHr.SerNr)then begin TrHs = false; end;
								// if(IHr.Row!=i)then begin TrHs = false; end;
								// if(IHr.ArtCode==SHrw.ArtCode and TrHs)then begin
									// FIFOcnt = FIFOcnt + 1;
									// vItemFifo[CIr.LocCode & "##" & SHrw.LCPOrowNr & "_" & SHr.SerNr] = vItemFifo[CIr.LocCode & "##" & SHrw.LCPOrowNr & "_" & SHr.SerNr] + IHr.TotCostPriceCurncy / (IHr.Qty * -1);
									// vItemHTotCostPr[CIr.LocCode & "##" & SHrw.LCPOrowNr & "_" & SHr.SerNr] = vItemHTotCostPr[CIr.LocCode & "##" & SHrw.LCPOrowNr & "_" & SHr.SerNr] + IHr.TotCostPrice / (IHr.Qty * -1);
									// // if (SHrw.LCPOrowNr<1) then begin
										// // logtext(0,SHr.SerNr & "  SerNr");
										// // logtext(0,CIr.LocCode & "  LocCode");
										// // logtext(0,SHrw.LCPOrowNr & "  LCPOrowNr");
										// // logtext(0,(IHr.TotCostPriceCurncy / (IHr.Qty * -1)) & "  Fifo");
										// // logtext(0,vItemFifo[CIr.LocCode & "_" & SHrw.LCPOrowNr & "_" & SHr.SerNr] & "  resultVector");
									// // end;
								// end;
							// end;
							// if (SHrw.LCPOrowNr > 0) then begin
								// ORrowf = true;
							// end;
							// ResetLoop (IHr);
							// vItemFifo[CIr.LocCode & "##" & SHrw.LCPOrowNr & "_" & SHr.SerNr] = vItemFifo[CIr.LocCode & "##" & SHrw.LCPOrowNr & "_" & SHr.SerNr] / FIFOcnt;
							// vItemHTotCostPr[CIr.LocCode & "##" & SHrw.LCPOrowNr & "_" & SHr.SerNr] = vItemHTotCostPr[CIr.LocCode & "##" & SHrw.LCPOrowNr & "_" & SHr.SerNr] / FIFOcnt;
						// end;
					// end else begin
						// if(ReadFirstMain(CIr,1,true))then begin 
							// vItemPosQty[CIr.LocCode & "##" & i & "_" & SHr.SerNr] = SHrw.Ship;
							// while (LoopBackKey("FNTransNr",IHr,3,TrHs)) begin
								// if(IHr.FileName!="SHVc")then begin TrHs = false; end;
								// if(IHr.TransNr!=SHr.SerNr)then begin TrHs = false; end;
								// if(IHr.Row!=i)then begin TrHs = false; end;
								// if(IHr.ArtCode==SHrw.ArtCode and TrHs)then begin
									// FIFOcnt = FIFOcnt + 1;
									// vItemFifo[CIr.LocCode & "##" & i & "_" & SHr.SerNr] = vItemFifo[CIr.LocCode & "##" & i & "_" & SHr.SerNr] + IHr.TotCostPriceCurncy / (IHr.Qty * -1);
									// vItemHTotCostPr[CIr.LocCode & "##" & i & "_" & SHr.SerNr] = vItemHTotCostPr[CIr.LocCode & "##" & i & "_" & SHr.SerNr] + IHr.TotCostPrice / (IHr.Qty * -1);
									// // if (SHrw.LCPOrowNr<1) then begin
										// // logtext(0,SHr.SerNr & "  SerNr");
										// // logtext(0,CIr.LocCode & "  LocCode");
										// // logtext(0,SHrw.LCPOrowNr & "  LCPOrowNr");
										// // logtext(0,(IHr.TotCostPriceCurncy / (IHr.Qty * -1)) & "  Fifo");
										// // logtext(0,vItemFifo[CIr.LocCode & "_" & SHrw.LCPOrowNr & "_" & SHr.SerNr] & "  resultVector");
									// // end;
								// end;
							// end;
							// if (SHrw.LCPOrowNr > 0) then begin
								// ORrowf = true;
							// end;
							// ResetLoop (IHr);
							// vItemFifo[CIr.LocCode & "##" & i & "_" & SHr.SerNr] = vItemFifo[CIr.LocCode & "##" & i & "_" & SHr.SerNr] / FIFOcnt;
							// vItemHTotCostPr[CIr.LocCode & "##" & i & "_" & SHr.SerNr] = vItemHTotCostPr[CIr.LocCode & "##" & i & "_" & SHr.SerNr] / FIFOcnt;
						// end;
					// end;
				// end;
				// matrowget (ORr,0,ORrw);
				// POComp = ORrw.ECReservComp;
				// if(POComp<=0)then begin
					// BlockLoad(ECVFSBb);
					// ecvcnt = matrowcnt(ECVFSBb);
					// for(v=0;v<ecvcnt;v=v+1)begin
						// matrowget (ECVFSBb,v,ECVFSBrw);
						// if(ECVFSBrw.VendName==ORr.CustCode)then begin
							// POComp = ECVFSBrw.CompanyNr;
							// v = ecvcnt;
						// end;
					// end;
				// end;
				// if(ReadRecordLink(SHr,1,PUr,RLr))then begin
					// PUSerNr = PUr.SerNr;
					// // logtext(0,POSerNr & " POSerNr");
					// // logtext(0,POComp & " POComp");
					// if (SetCompany(POComp,false)) then begin
						// PUr.SerNr = PUSerNr;
						// if (ReadFirstMain(PUr,1,true)) then begin
							// // logtext(0,POr.SerNr);
							// for (i=0;i<matrowcnt(PUr);i=i+1) begin
								// matrowget (PUr,i,PUrw);
								// problemPos = "";
								// testf2 = false;
								// if (ORrowf) then begin
									// // logtext(0,POrw.ArtCode);
									// if (PUrw.UPrice!=vItemFifo[PUrw.ArtCode & "##" & i + 1 & "_" & SHr.SerNr]) then begin
										// AllItems = AllItems + 1;
										// if (!SHErrorf) then begin
											// if (!SetInset(GetCompanyShortCode(POComp),CompString)) then begin
												// if(nonblank(CompString))then begin CompString = CompString & ","; end;
												// CompString = CompString & GetCompanyShortCode(POComp);
											// end;
											// WebOutString("PU_No_ " & PUr.SerNr & " Company: " & GetCompanyShortCode(POComp));
											// WebOutString("<BR>");
											// SHErrorf = true;
										// end;
										// locPUIH.FileName = "PUVc";
										// locPUIH.TransNr = PUr.SerNr;
										// locPUIH.Row = i;
										// CIr.Code = SHrw.ArtCode;
										// if (ReadFirstKey("FNTransNr",locPUIH,3,true)) then begin
											// if (locPUIH.Qty == locPUIH.RemQty) then begin
												// RecordCopy(oldlocPUIH,locPUIH);
												// locPUIH.TotCostPriceCurncy = vItemFifo[PUrw.ArtCode & "##" & i + 1 & "_" & SHr.SerNr] * locPUIH.Qty;
												// locPUIH.RemCostPriceCurncy = vItemFifo[PUrw.ArtCode & "##" & i + 1 & "_" & SHr.SerNr] * locPUIH.RemQty;
												// locPUIH.TotCostPrice = vItemHTotCostPr[PUrw.ArtCode & "##" & i + 1 & "_" & SHr.SerNr] * locPUIH.Qty;
												// locPUIH.RemCostPrice = vItemHTotCostPr[PUrw.ArtCode & "##" & i + 1 & "_" & SHr.SerNr] * locPUIH.RemQty;
												// if(recordupdate(oldlocPUIH,locPUIH,true)==0)then begin
													// testf2 = true;
												// end;
											// end;
										// end else begin
											// // testf2 = true;
										// end;
										// if (testf2) then begin
											// WebOutString("PU_row_No_= " & i + 1 & " ArtCode: " & PUrw.ArtCode & " | Old UPrice = " & PUrw.UPrice & "New UPrice = " & vItemFifo[PUrw.ArtCode & "##" & i + 1 & "_" & SHr.SerNr] & " | Old CostPrice = " & PUrw.CostPrice & "New CostPrice = " & vItemHTotCostPr[PUrw.ArtCode & "##" & i + 1 & "_" & SHr.SerNr] & " |");
											// WebOutString("<BR>");
											// PUrw.UPrice = vItemFifo[PUrw.ArtCode & "##" & i + 1 & "_" & SHr.SerNr];
											// PUrw.CostPrice = vItemHTotCostPr[PUrw.ArtCode & "##" & i + 1 & "_" & SHr.SerNr];
											// matrowput(PUr,i,PUrw);
											// PUVc_PasteCostPrice(PUr,i);
											// matrowget(PUr,i,PUrw);
											// matrowput(PUr,i,PUrw);
										// end;
									// end;
								// end else begin
									// if (PUrw.UPrice!=vItemFifo[PUrw.ArtCode & "##" & i & "_" & SHr.SerNr]) then begin
										// AllItems = AllItems + 1;
										// if (!SHErrorf) then begin
											// if (!SetInset(GetCompanyShortCode(POComp),CompString)) then begin
												// if(nonblank(CompString))then begin CompString = CompString & ","; end;
												// CompString = CompString & GetCompanyShortCode(POComp);
											// end;
											
											// WebOutString("PU_No_ " & PUr.SerNr & " Company: " & GetCompanyShortCode(POComp));
											// WebOutString("<BR>");
											// SHErrorf = true;
										// end;
										// locPUIH.FileName = "PUVc";
										// locPUIH.TransNr = PUr.SerNr;
										// locPUIH.Row = i;
										// CIr.Code = SHrw.ArtCode;
										// if (ReadFirstKey("FNTransNr",locPUIH,3,true)) then begin
											// if (locPUIH.Qty == locPUIH.RemQty) then begin
												// RecordCopy(oldlocPUIH,locPUIH);
												// locPUIH.TotCostPriceCurncy = vItemFifo[PUrw.ArtCode & "##" & i & "_" & SHr.SerNr] * locPUIH.Qty;
												// locPUIH.RemCostPriceCurncy = vItemFifo[PUrw.ArtCode & "##" & i & "_" & SHr.SerNr] * locPUIH.RemQty;
												// locPUIH.TotCostPrice = vItemHTotCostPr[PUrw.ArtCode & "##" & i & "_" & SHr.SerNr] * locPUIH.Qty;
												// locPUIH.RemCostPrice = vItemHTotCostPr[PUrw.ArtCode & "##" & i & "_" & SHr.SerNr] * locPUIH.RemQty;
												// if(recordupdate(oldlocPUIH,locPUIH,true)==0)then begin
													// testf2 = true;
												// end;
											// end;
										// end else begin
											// // testf2 = true;
										// end;
										
										// if (testf2) then begin
											// WebOutString("PU_row_No_= " & i + 1 & " ArtCode: " & PUrw.ArtCode & " | Old UPrice = " & PUrw.UPrice & "New UPrice = " & vItemFifo[PUrw.ArtCode & "##" & i & "_" & SHr.SerNr] & " | Old CostPrice = " & PUrw.CostPrice & "New CostPrice = " & vItemHTotCostPr[PUrw.ArtCode & "##" & i & "_" & SHr.SerNr] & " |");
											// WebOutString("<BR>");

											// PUrw.UPrice = vItemFifo[PUrw.ArtCode & "##" & i & "_" & SHr.SerNr];
											// PUrw.CostPrice = vItemHTotCostPr[PUrw.ArtCode & "##" & i & "_" & SHr.SerNr];
											// matrowput(PUr,i,PUrw);
											// PUVc_PasteCostPrice(PUr,i);
											// matrowget(PUr,i,PUrw);
											// matrowput(PUr,i,PUrw);
										// end;
									// end;
								// end;
							// end;
							// RecordStore(PUr,true);
						// end;
					// end;
					// ResetCompany (18);
				// end;
			// end;
		// end;
	// end;
// end;





 // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- Anton Preisinger 17:11 20.02.2020

global webpublic updating procedure WebTESTIDCreatedPOQtyRn()
begin
	record SHVc SHr;
	row SHVc SHrw;
	record ItemHistVc IHr, locPUIH;
	record POVc POr;
	row POVc POrw;
	boolean testf, TrHs, ORrowf, SHErrorf;
	integer i, FIFOcnt, POComp, v, ecvcnt;
	record ConsItemVc CIr;
	vector val vItemFifo, vItemHTotCostPr, vItemPosQty;
	record ORVc ORr;
	row ORVc ORrw;
	record RlinkVc RLr;
	LongInt PUSerNr, AllItems, GoodPOs, BadPos;
	record ECVendFobSetBlaock ECVFSBb;
	row ECVendFobSetBlaock ECVFSBrw;
	record PUVc PUr;
	row PUVc PUrw;
	string 255 CompString, problemPos;
	
	if (SetCompany(18,false)) then begin
		SHr.SerNr = -1;
		AllItems = 0;
		GoodPOs = 0;
		BadPos = 0;
		while (loopmain(SHr,1,true)) begin
			SHErrorf = false;
			ORrowf = false;
			ORr.SerNr = SHr.OrderNr;
			if(ReadFirstMain(ORr,1,true))then begin
				testf = true;
				for (i=0;i<matrowcnt(SHr);i=i+1) begin
					matrowget(SHr,i,SHrw);
					IHr.FileName = "SHVc";
					IHr.TransNr = SHr.SerNr;
					IHr.Row = i;
					TrHs = true;
					FIFOcnt = 0;
					CIr.Code = SHrw.ArtCode;
					if (SHrw.LCPOrowNr>0) then begin
						ORrowf = true;
						if(ReadFirstMain(CIr,1,true))then begin 
							vItemPosQty[CIr.LocCode & "##" & SHrw.LCPOrowNr & "_" & SHr.SerNr] = SHrw.Ship;
						end;
					end else begin
						if(ReadFirstMain(CIr,1,true))then begin 
							vItemPosQty[CIr.LocCode & "##" & i & "_" & SHr.SerNr] = SHrw.Ship;
						end;
					end;
				end;
				matrowget (ORr,0,ORrw);
				POComp = ORrw.ECReservComp;
				if(POComp<=0)then begin
					BlockLoad(ECVFSBb);
					ecvcnt = matrowcnt(ECVFSBb);
					for(v=0;v<ecvcnt;v=v+1)begin
						matrowget (ECVFSBb,v,ECVFSBrw);
						if(ECVFSBrw.VendName==ORr.CustCode)then begin
							POComp = ECVFSBrw.CompanyNr;
							v = ecvcnt;
						end;
					end;
				end;
				if(ReadRecordLink(SHr,1,PUr,RLr))then begin
					PUSerNr = PUr.SerNr;
					// logtext(0,POSerNr & " POSerNr");
					// logtext(0,POComp & " POComp");
					if (SetCompany(POComp,false)) then begin
						PUr.SerNr = PUSerNr;
						if (ReadFirstMain(PUr,1,true)) then begin
							// logtext(0,POr.SerNr);
							for (i=0;i<matrowcnt(PUr);i=i+1) begin
								matrowget (PUr,i,PUrw);
								problemPos = "";
								if (ORrowf) then begin
									// logtext(0,POrw.ArtCode);
									if (vItemPosQty[PUrw.ArtCode & "##" & i + 1 & "_" & SHr.SerNr]!=PUrw.Quant) then begin
										AllItems = AllItems + 1;
										if (!SHErrorf) then begin
											if (!SetInset(GetCompanyShortCode(POComp),CompString)) then begin
												if(nonblank(CompString))then begin CompString = CompString & ","; end;
												CompString = CompString & GetCompanyShortCode(POComp);
											end;
											WebOutString("SH_No_" & SHr.SerNr);
											WebOutString("  _    PU_No_ " & PUr.SerNr & " Company: " & GetCompanyShortCode(POComp));
											WebOutString("<BR>");
											SHErrorf = true;
										end;
										locPUIH.FileName = "PUVc";
										locPUIH.TransNr = PUr.SerNr;
										locPUIH.Row = i;
										CIr.Code = SHrw.ArtCode;
										if (ReadFirstKey("FNTransNr",locPUIH,3,true)) then begin
											if (locPUIH.Qty != locPUIH.RemQty) then begin
												problemPos = " Problem \(" & (locPUIH.Qty - locPUIH.RemQty) & " units shipped\)";
												BadPos = BadPos + 1;
											end else begin
												problemPos = " Good: " & (locPUIH.Qty - locPUIH.RemQty) & " units shipped";
												GoodPOs = GoodPOs + 1;
											end;
										end;
										WebOutString("________error_______" & PUrw.ArtCode & "_____SH_Quant_=_" & vItemPosQty[PUrw.ArtCode & "##" & i + 1 & "_" & SHr.SerNr] & "_PU_Quant_=_" & PUrw.Quant & "_______\(status_PO_Iterator_=_" & ORrowf & " row " & i + 1 & "\)" & problemPos);
										WebOutString("<BR>");
									// end else begin
										// WebOutString("____________________" & PUrw.ArtCode & "_____SH_Price_=_" & vItemFifo[PUrw.ArtCode & "_" & i + 1 & "_" & SHr.SerNr] & "_PO_Price_=_" & PUrw.Price & "\(status_PO_Iterator_=_" & ORrowf & "\)");
										// WebOutString("<BR>");
									end;
								end else begin
									// logtext(0,POrw.ArtCode);
									if (vItemPosQty[PUrw.ArtCode & "##" & i & "_" & SHr.SerNr]!=PUrw.Quant) then begin
										AllItems = AllItems + 1;
										if (!SHErrorf) then begin
											if (!SetInset(GetCompanyShortCode(POComp),CompString)) then begin
												if(nonblank(CompString))then begin CompString = CompString & ","; end;
												CompString = CompString & GetCompanyShortCode(POComp);
											end;
											
											WebOutString("SH_No_" & SHr.SerNr);
											WebOutString("  _    PU_No_ " & PUr.SerNr & " Company: " & GetCompanyShortCode(POComp));
											WebOutString("<BR>");
											SHErrorf = true;
										end;
										locPUIH.FileName = "PUVc";
										locPUIH.TransNr = PUr.SerNr;
										locPUIH.Row = i;
										CIr.Code = SHrw.ArtCode;
										if (ReadFirstKey("FNTransNr",locPUIH,3,true)) then begin
											if (locPUIH.Qty != locPUIH.RemQty) then begin
												problemPos = " Problem \(" & (locPUIH.Qty - locPUIH.RemQty) & " units shipped\)";
												BadPos = BadPos + 1;
											end else begin
												problemPos = " Good: " & (locPUIH.Qty - locPUIH.RemQty) & " units shipped";
												GoodPOs = GoodPOs + 1;
											end;
										end;
										WebOutString("________error_______" & PUrw.ArtCode & "_____SH_Quant_=_" & vItemPosQty[PUrw.ArtCode & "##" & i & "_" & SHr.SerNr] & "_PU_Quant_=_" & PUrw.Quant & "_______\(status_PO_Iterator_=_" & ORrowf & "\)" & problemPos);
										WebOutString("<BR>");
									// end else begin
										// WebOutString("____________________" & PUrw.ArtCode & "_____SH_Price_=_" & vItemFifo[PUrw.ArtCode & "_" & -1 & "_" & SHr.SerNr] & "_PO_Price_=_" & PUrw.Price & "\(status_PO_Iterator_=_" & ORrowf & "\)");
										// WebOutString("<BR>");
									end;
								end;
							end;
						end;
					end;
					ResetCompany (18);
				end;
			end;
		end;
		WebOutString("<BR>");
		WebOutString("Problem_companies: " & CompString);
		WebOutString("<BR>");
		WebOutString("All positions: " & AllItems);
		WebOutString("<BR>");
		WebOutString("Problem positions: " & BadPos);
		WebOutString("<BR>");
		WebOutString("Good positions: " & GoodPOs);
	end;
	
	
	
	
 // weboutstring("");
 // WebOutString("<BR>");
end;






