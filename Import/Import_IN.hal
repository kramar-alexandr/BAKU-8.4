remote function Boolean StockTakeVc_PasteArtCode(var record StockTakeVc,Integer,Integer,var string);


external procedure NextM4Number(string,var string);
//server-only
global
updating procedure INImportIn()		//Edit----------------------Dima  10.02.2015
begin
  record INVc INr,INr2;
	record ITVc ITr;
	record DIVc DIr,DIr2;
  string 70 code,wholeCode,type,group;
  string 200 name;


	while (TestEOF()==false) begin
			wholeCode = ImportField;
			name = ImportField;
			group = ImportField;
			type = ImportField;
	
			if(nonblank(wholeCode) and nonblank(name) and nonblank(group) and nonblank(type)) then begin

				code = Right(wholeCode,Len(wholeCode)-2);
				INr.Code = code;				
				if (ReadFirstMain(INr,1,true)) then begin
					INr.Code = code;
					INr.Name = name;
					RecordStore(INr,true);
				end else begin	
					RecordNew(INr);
					INr.Code = wholeCode;
					INr.Name = name;
					RecordStore(INr,true);
				end;	
			
					ReadFirstMain(INr,1,true);

					ITr.Comment = group;
					if (ReadFirstKey("Comment",ITr,1,true)) then begin
							INr.Group = ITr.Code;
							RecordStore(INr,true);
					end;

					DIr.Name = group;
					if (ReadFirstKey("Name",DIr,1,true)  and (DIr.CType =="BRAND")) then begin
							DIr2.Name = type;
							if (ReadFirstKey("Name",DIr2,1,true) and (DIr2.CType=="TYPE")) then begin
									INr.DispGroups = DIr.Code & "," & DIr2.Code;
									RecordStore(INr,true);									
							end;							
					end;
				end;
			if (NextImportLine(true)) then begin end;
	end;		

return;
end;



global
updating procedure INImport2In()		//Edit----------------------Dima  10.02.2015
begin
  record INVc INr,INr2;
	record ITVc ITr;
	record DIVc DIr,DIr2,DIr3;
  string 70 code,type,group,collection;
  string 200 name;


	while (TestEOF()==false) begin
			code = ImportField;
			name = ImportField;
			group = ImportField;
			type = ImportField;
			collection = ImportField;
	
			if(nonblank(code) and nonblank(name)) then begin

				INr.Code = code;				
				if (ReadFirstMain(INr,1,true)==false) then begin
					RecordNew(INr);
				end;
					INr.Code = code;
					INr.Name = name;
					RecordStore(INr,true);

					ITr.Comment = group;
					if (ReadFirstKey("Comment",ITr,1,true)) then begin
							INr.Group = ITr.Code;
							RecordStore(INr,true);
					end;

					DIr.Name = group;
					if (ReadFirstKey("Name",DIr,1,true)  and (DIr.CType =="BRAND")) then begin
							DIr2.Name = type;
							if (ReadFirstKey("Name",DIr2,1,true) and (DIr2.CType=="TYPE")) then begin
									DIr3.Name = collection;
									if (ReadFirstKey("Name",DIr3,1,true) and (DIr3.CType=="LINE")) then begin
											INr.DispGroups = DIr.Code & "," & DIr2.Code  & "," & DIr3.Code;
											RecordStore(INr,true);	
									end;								
							end;							
					end;
				end;
			if (NextImportLine(true)) then begin end;
	end;		

return;
end;

global
updating procedure UpdateCUrPhonenIn()		//Edit----------------------Dima  10.02.2015
begin
  record CUVc CUr;
  string 200 phone,phone1,phone2,curcode;
  boolean upd;

	while (TestEOF()==false) begin
			curcode = ImportField;
			phone = ImportField;
			phone1 = ImportField;
			phone2 = ImportField;
	
			if(nonblank(curcode)) then begin
				if(nonblank(phone) or nonblank(phone1) or nonblank(phone2))then begin
					CUr.Code = curcode;
					if(readfirstmain(CUr,1,true))then begin
						upd = false;
						if(nonblank(phone) and phone!=CUr.Phone)then begin
							CUr.Phone = phone;
							upd = true;
						end;
						if(nonblank(phone1) and phone1!=CUr.AltPhone)then begin
							CUr.AltPhone = phone1;
							upd = true;
						end;
						if(nonblank(phone2) and phone2!=CUr.Mobile)then begin
							CUr.Mobile = phone2;
							upd = true;
						end;
						if(upd)then begin
							recordstore(CUr,true);
						end;
					end;
				end;				
			end;
			if (NextImportLine(true)) then begin end;
	end;		

return;
end;

/*global
updating procedure INImportDiscountGroupIn()		//Edit----------------------Dima  10.02.2015
begin
  record INVc INr;
	record ITVc ITr,ITr2;
  string 70 code,discount;
  string 3 ending;
	boolean TrHs;


	while (TestEOF()==false) begin
			code = ImportField;
			discount = ImportField;

			if (discount=="70%") then begin
					ending = "7%";
			end  else begin
				if (discount=="50%") then begin
					ending = "5%";
				end  else begin
					ending = "3%";
				end;
			end;		

	
			if(nonblank(code) and nonblank(discount)) then begin

				INr.Code = code;				
				if (ReadFirstMain(INr,1,true)) then begin

						ITr.Code = INr.Group;
						if (ReadFirstMain(ITr,1,true)) then begin
									ITr2.Comment = ITr.Comment;
									TrHs= true;
									while (LoopKey("Comment",ITr2,1,TrHs) ) begin	
											if (ITr2.Comment!=ITr.Comment) then begin	
												TrHs = false;
											end;	

											if (TrHs and (Right(ITr2.Code,2)==ending) ) then begin
												INr.Group = ITr2.Code;
												RecordStore(INr,true);
												TrHs = false;
											end;
									end;
									RESETLOOP(ITr2);
						end;

				end;
			end;
			if (NextImportLine(true)) then begin end;
	end;		

return;
end;*/

global
updating procedure INImportDiscountGroupIn()		//Edit----------------------Dima  10.02.2015
begin
  record INVc INr;
	record ITVc ITr,ITr2;
  string 70 code,discount;
  string 3 ending;
	boolean TrHs;


	while (TestEOF()==false) begin
			code = ImportField;
			discount = ImportField;


			if(nonblank(code) /*and nonblank(discount)*/) then begin

				INr.Code = code;				
				if (ReadFirstMain(INr,1,true)) then begin
						INr.RebGroup = left(discount,20);
						RecordStore(INr,true);
				end else begin
					INr.Code = "0" & code;	
						if (ReadFirstMain(INr,1,true)) then begin
							INr.RebGroup = left(discount,20);
							RecordStore(INr,true);
					end;
				end;
			end;
			if (NextImportLine(true)) then begin end;
	end;		

return;
end;



global
updating procedure INColorSizeImportIn()		//Edit----------------------Dima  29.04.2015
begin
  record INVc INr,INr2;
  string 100 code,colour,size;
  string 200 name;


	while (TestEOF()==false) begin
			code = ImportField;
			name = ImportField;
			size = ImportField;
			colour = ImportField;
			
			if(nonblank(code) and nonblank(name)) then begin

				INr.Code = code;				
				if (ReadFirstMain(INr,1,true)) then begin
		
					INr.Name = name;
					if(nonblank(colour))then begin
						INr.Colour = colour;
					end;
					if(nonblank(size))then begin
						INr.Size = size;
					end;
					RecordStore(INr,true);

				end;
			end;	
			if (NextImportLine(true)) then begin end;
	end;		

return;
end;

global 
updating procedure ReplaceBarCodeIn()
begin
	record INVc INr;
  string 100 itemCode;
  string 200 eanCode;


	while (TestEOF()==false) begin
		itemCode = ImportField;
		eanCode = ImportField;
		
		if(nonblank(itemCode) and nonblank(eanCode)) then begin
			INr.Code = itemCode;				
			if (ReadFirstMain(INr,1,true)) then begin
	      if (blank(INr.BarCode) or INr.BarCode!=eanCode) then begin
	        INr.BarCode = eanCode;
	        RecordStore(INr,true);
	      end;
			end;
		end;	
		if (NextImportLine(true)) then begin end;
	end;	
	

return;
end;

global 
updating procedure ImportDuplicatesIn()
begin
	record VaucherVc Vr;
  string 255 OrigCode,DupCode,BrandName, BrandCode;
	integer OrComp;
	record ItemDuplicatesVc IDr, OldIDr, thisIDr;
	record BPIBrandVc BPIBrandr;

	OrComp = CurrentCompany;
	SetCompany(1,false);

	while (TestEOF()==false) begin
		BrandCode = "";
		OrigCode = "";
		DupCode = "";
		BrandName = ImportField;
		BPIBrandr.Name = BrandName;
		if (ReadFirstKey("Name",BPIBrandr,1,true)) then begin
			BrandCode = BPIBrandr.Code;
			OrigCode = ImportField;
			DupCode = ImportField;
			if(nonblank(BrandCode) and nonblank(OrigCode) and nonblank(DupCode)) then begin
				thisIDr.OrigCode = OrigCode;
				thisIDr.DupCode = DupCode;
				thisIDr.OrigBrandCode = BrandCode;
				thisIDr.DupBrandCode = BrandCode;
				if (!ReadFirstMain(thisIDr,4,true)) then begin
					recordnew(IDr);
					IDr.OrigCode = OrigCode;
					IDr.DupCode = DupCode;
					IDr.OrigBrandCode = BrandCode;
					recordStore(IDr,true);
					recordcopy(OldIDr,IDr);
					IDr.DupBrandCode = BrandCode;
					logtext(0,recordUpdate(OldIDr,IDr,true));
				end;
			end;
		end;
		if (NextImportLine(true)) then begin end;
	end;	
	ResetCompany(OrComp);

return;
end;




global 
updating procedure ImportClearDuplicatesIn()
begin
	record VaucherVc Vr;
  string 255 OrigCode,DupCode,BrandName, BrandCode;
	integer OrComp;
	record ItemDuplicatesVc IDr, OldIDr, thisIDr;
	record BPIBrandVc BPIBrandr;

	OrComp = CurrentCompany;
	SetCompany(1,false);

	while (TestEOF()==false) begin
		BrandCode = "";
		OrigCode = "";
		DupCode = "";
		BrandName = ImportField;
		BPIBrandr.Name = BrandName;
		if (ReadFirstKey("Name",BPIBrandr,1,true)) then begin
			BrandCode = BPIBrandr.Code;
			OrigCode = ImportField;
			DupCode = ImportField;
			if(nonblank(BrandCode) and nonblank(OrigCode) and nonblank(DupCode)) then begin
				thisIDr.OrigCode = OrigCode;
				thisIDr.DupCode = DupCode;
				thisIDr.OrigBrandCode = BrandCode;
				thisIDr.DupBrandCode = BrandCode;
				if (ReadFirstMain(thisIDr,4,true)) then begin
					recorddelete(thisIDr);
				end;
			end;
		end;
		if (NextImportLine(true)) then begin end;
	end;	
	ResetCompany(OrComp);

return;
end;









global updating procedure IHFixINVc()
begin
	string 50 trSerNr,trArtCode,trFileName,trTransNr,trRow,trStockAffectf,trRemQty,trSource,trTotCostPrice,trSerialNr,trInvalid,trSerNrPerLoc,trVECode,trConsigStock,trWillBePurged,trTREOStock,trCurncyCode,trTotCostPriceCurncy,trRemCostPriceCurncy,trInDate,trInFileName;
	record ItemHistVc IHr;
	
	while (TestEOF()==false) begin
		trSerNr = ImportField;
		trArtCode = ImportField;
		trFileName = ImportField;
		trTransNr = ImportField;
		trRow = ImportField;
		trStockAffectf = ImportField;
		trRemQty = ImportField;
		trSource = ImportField;
		trTotCostPrice = ImportField;
		trSerialNr = ImportField;
		trInvalid = ImportField;
		trSerNrPerLoc = ImportField;
		trVECode = ImportField;
		trConsigStock = ImportField;
		trWillBePurged = ImportField;
		trTREOStock = ImportField;
		trCurncyCode = ImportField;
		trTotCostPriceCurncy = ImportField;
		trRemCostPriceCurncy = ImportField;
		trInDate = ImportField;
		trInFileName = ImportField;
		
		if(trStockAffectf=="1")then begin 
			if(nonblank(trFileName) and nonblank(trTransNr) and nonblank(trRow))then begin
				IHr.FileName = trFileName;
				IHr.TransNr = stringtolongint(trTransNr);
				IHr.Row = stringtoint(trRow);
				if(readfirstkey("FNTransNr",IHr,3,true))then begin
					
					
					if(nonblank(trTotCostPrice))then begin
						if(IHr.TotCostPrice!=evaltoval(trTotCostPrice))then begin
							logtext(0,trArtCode & " " & IHr.TotCostPrice & " " & trTotCostPrice);
						end;
					end;
					
				end else begin
					logtext(0,"ERROR " & trArtCode & trFileName & trTransNr & trRow);
				end;
				
			end;
		end;
		
		if (NextImportLine(true)) then begin end;
	end;	

return;
end;

global
updating procedure ImpINvcIn() // Edit Dima ************* 2018-02-16 01:32 PM
begin
	record INVc INr;
	row	INVc	INrw;
	integer		i, mtrw;
	string 255	SN;
	string 255	SN1;
	string 255	DESC;
	string 255	ShortName;
	string 255	PN;
	string 255	Model;
	string 255	Colour;
	string 255	UnitOfMeasure;
	string 255	QtyInStock;
	string 255	QtyInUnit;
	string 255	AveragePriceUSD;
	string 255	AveragePriceEuro;
	string 255	MfrNo;
	string 255	Category;
	string 255	ConditionCode;
	string 255	Bulk;
	string 255	Indx;
	string 255	Discontinued;
	string 255	Lock;
	string 255	FA;
	string 255	DateUpdated;
	string 255	OnOrder;
	string 255	OrderDate;
	string 255	ReorderLevel;
	string 255	PoNo;
	record DIVC	DIr;
	boolean		TrHs;
	boolean 	Found;
	string 255	last_color;
	string 255 	last_model;
	
	last_color = "CL00000";
	last_model = "ML00000";
	while (TestEOF()==false) begin
		SN = ImportField;
		SN1 = ImportField;
		DESC = ImportField;
		ShortName = ImportField;
		PN = ImportField;
		Model = ImportField;
		Colour = ImportField;
		UnitOfMeasure = ImportField;
		QtyInStock = ImportField;
		QtyInUnit = ImportField;
		AveragePriceUSD = ImportField;
		AveragePriceEuro = ImportField;
		MfrNo = ImportField;
		Category = ImportField;
		ConditionCode = ImportField;
		Bulk = ImportField;
		Indx = ImportField;
		Discontinued = ImportField;
		Lock = ImportField;
		FA = ImportField;
		DateUpdated = ImportField;
		OnOrder = ImportField;
		OrderDate = ImportField;
		ReorderLevel = ImportField;
		PoNo = ImportField;
		INr.Code = SN;
		if (readfirstmain(INr,1,true)==false) then begin
			RecordNew(INr);
		end;
		INr.Code = SN;
		INr.Name = DESC;
		if (blank(INr.Name)) then begin
			INr.Name = "BLANK NAME";
		end;			
		if (blank(ShortName)) then begin
			INrw.Text = "BLANK SHORT NAME";
		end else begin
			INrw.Text = ShortName;
		end;
		matrowput(INr,0,INrw);
		INrw.Text = "";
		INrw.Text = Discontinued & "," & Lock & "," & FA & "," & Bulk;
		matrowput(INr,1,INrw);
		INr.Unittext = UnitOfMeasure;
		if(nonblank(QtyInUnit))then begin
			INr.Conversion1 = StringToVal(QtyInUnit,M45Val);
		end;
		INr.AlternativeCode = PN;
		INr.DispGroups = "GOODS";
		if (nonblank(Colour)) then begin
			TrHs = true;
			DIr.Name = Colour;
			Found = false;
			while (loopkey("Name",DIr,1,TrHs)) begin
				if (DIr.Name!=Colour) then begin
					TrHs = false;
				end;
				if (DIr.CType=="COLOUR" and TrHs) then begin
					TrHs = false;
					Found = true;
					INr.DispGroups = INr.DispGroups & "," & DIr.Code;
				end;
			end;
			ResetLoop(DIr);
			if (Found==false) then begin
				NextM4Number(last_color,last_color);
				
				while(readfirstmain(DIr,1,true)==true)begin
					NextM4Number(last_color,last_color);
					DIr.Code = last_color;
				end;
				RecordNew(DIr);
				DIr.Code = last_color;
				DIr.Name = Colour;
				DIr.CType = "COLOUR";
				RecordStore(DIr,true);
				INr.DispGroups = INr.DispGroups & "," & DIr.Code;
			end;
		end;
		if (nonblank(Model)) then begin
			DIr.Name = Model;
			Found = false;
			TrHs = true;
			while (loopkey("Name",DIr,1,TrHs)) begin
				if (DIr.Name!=Model) then begin
					TrHs = false;
				end;
				if (DIr.CType=="MODEL" and TrHs) then begin
					TrHs = false;
					Found = true;
					INr.DispGroups = INr.DispGroups & "," & DIr.Code;
				end;
			end;
			ResetLoop(DIr);
			if (Found==false) then begin
				NextM4Number(last_model,last_model);
				
				while(readfirstmain(DIr,1,true)==true)begin
					NextM4Number(last_model,last_model);
					DIr.Code = last_model;
				end;
				RecordNew(DIr);
				DIr.Code = last_model;
				DIr.Name = Model;				
				DIr.CType = "MODEL";
				RecordStore(DIr,true);
				INr.DispGroups = INr.DispGroups & "," & DIr.Code;
			end;
		end;
		if (nonblank(MfrNo)) then begin
			/*DIr.Name = MfrNo;
			Found = false;
			TrHs = true;
			while (loopkey("Name",DIr,1,TrHs)) begin
				if (DIr.Name!=MfrNo) then begin
					TrHs = false;
				end;
				if (DIr.CType=="BRAND" and TrHs) then begin
					TrHs = false;
					Found = true;
				end;
			end;
			ResetLoop(DIr);
			if (Found==false) then begin
				RecordNew(DIr);
				DIr.Name = MfrNo;
				DIr.Code = MfrNo;
				DIr.CType = "BRAND";
				logtext(0, DIr.Code & " " & DIr.CType);
				RecordStore(DIr,true);
			end;*/
			INr.DispGroups = INr.DispGroups & "," & MfrNo;
		end;
		if (nonblank(Category)) then begin
			DIr.Code = Category;
			if(readfirstmain(DIr,1,true)==false)then begin
				RecordNew(DIr);
				DIr.Name = Category;
				DIr.Code = Category;
				DIr.CType = "CAT";
				RecordStore(DIr,true);
			end;
			INr.DispGroups = INr.DispGroups & "," & DIr.Code;
		end;
		if (nonblank(INr.Code)) then begin
			logtext(0,INr.Code & " | " & INr.Name & " | " & INr.DispGroups);
			RecordStore(INr,true);
		end;
		if (NextImportLine(true)) then begin end;
	end;
	return;
end;


global
updating procedure StockTakeIn()		//Edit----------------------Dima  29.04.2015
begin
  record INVc INr,INr2;
  string 100 code,colour,size;
  string 200 qty,inwarn;
	record StockTakeVc STr;
	row StockTakeVc STrw;
	integer i,mtrw,k;
	
	recordnew(STr);
	while (TestEOF()==false) begin
		code = ImportField;
		qty = ImportField;

		if(nonblank(code)) then begin
			clearrow(STr,STrw,1);
			STrw.ArtCode = code;
			matrowput(STr,k,STrw);
			StockTakeVc_PasteArtCode(STr,k,1,inwarn);
			matrowget(STr,k,STrw);
			STrw.Qty = stringtoint(qty);
			matrowput(STr,k,STrw);
			k=k+1;
			if(k>4999)then begin
				STr.SerNr = NextSerNr("StockTakeVc",CurrentDate,-1,false,"");
				recordstore(STr,true);
				recordnew(STr);
				k=0;
			end;
		end;	
		if (NextImportLine(true)) then begin end;
	end;
	STr.SerNr = NextSerNr("StockTakeVc",CurrentDate,-1,false,"");
	recordstore(STr,true);
			

return;
end;

global 
updating procedure TransBacToRosIn()
begin
	record INVc INr,IN2r,tmpINr,IN3r;
	integer fromcomp, tocomp;
  string 100 code;

  fromcomp = 5;
	tocomp = 7;
    
	logtext(0,"Start");
	if(CurrentCompany==fromcomp) then begin
		while (TestEOF()==false) begin
			code = ImportField;
			INr.Code = code;
			if(ReadFirstMain(INr,1,true)) then begin
				SetCompany(tocomp,false);
				logtext(0,"needtocreate" & INr.Code);
				recordcopy(IN2r,INr);
				recordnew(tmpINr);
				IN2r.UUID = tmpINr.UUID;
				IN3r.Code = IN2r.Code;
				If(ReadFirstMain(IN3r,1,true)==false) then begin
					logtext(0,"create" & INr.Code);
					RecordStore(IN2r,true);
				end;	
				setcompany(fromcomp,false);
			end;
			if (NextImportLine(true)) then begin end;
		end;
	end;	
	logtext(0,"END");
return;
end;

global
updating procedure ImportCRMIDIn()		//Edit----------------------Dima  29.04.2015
begin
  record GlobalStoresVc GSr;
	string 255 code,id;
	
	while (TestEOF()==false) begin
		code = ImportField;
		id = ImportField;

		if(nonblank(code)) then begin
			GSr.Code = code;
			if(nonblank(id))then begin
				if(readfirstmain(GSr,1,true))then begin
					if(GSr.CRMid!=id)then begin
						logtext(0,"New GSrid " & GSr.CRMid & " -> " & id);
					end;
					GSr.CRMid = id;
					recordstore(GSr,true);
				end;
			end;
		end;
		if (NextImportLine(true)) then begin end;
	end;
			

return;
end;



global
updating procedure UpdateBPIBrandsIn()		//Edit----------------------Dima  29.04.2015
begin
  record BPIBrandVc BPIr;
	string 255 code,id,elevel,deliv,supp,prodtime;
	
	while (TestEOF()==false) begin
		code = ImportField;
		elevel = ImportField;
		deliv = ImportField;
		supp = ImportField;
		prodtime = ImportField;
		
		BPIr.Code = code;
		if(readfirstmain(BPIr,1,true))then begin
			BPIr.DeliveryWay = stringtoint(deliv);
			BPIr.DeliveryFrom = stringtoint(supp);
			BPIr.PlanShipDaysMin = stringtoint(prodtime);
			if(nonblank(elevel))then begin
				BPIr.ELevel = evaltoval(elevel);
			end;
			if(BPIr.PlanShipDays<BPIr.PlanShipDaysMin)then begin
				BPIr.PlanShipDays = BPIr.PlanShipDaysMin;
			end;
			switch(BPIr.DeliveryWay)begin
				case 0:BPIr.CalculatedLeadTime = 4 + (BPIr.PlanShipDays * BPIr.DeliveryFrom) + 5 + 3;
				case 1:BPIr.CalculatedLeadTime = 4 + (BPIr.PlanShipDays * BPIr.DeliveryFrom) + 19 + 5;
				case 2:BPIr.CalculatedLeadTime = 4 + (BPIr.PlanShipDays * BPIr.DeliveryFrom) + 90;
			end;
			logtext(0,BPIr.Code & " _ " & BPIr.Name);
			recordstore(BPIr,true);
		end;
		
		if (NextImportLine(true)) then begin end;
	end;
			

return;
end;


global
updating procedure UpdateBPIBrandsVEIn()		//Edit----------------------Dima  29.04.2015
begin
  record BPIBrandVc BPIr;
	string 255 code,id,elevel,deliv,supp,prodtime,vendor;
	
	while (TestEOF()==false) begin
		code = ImportField;
		vendor = ImportField;

		BPIr.Code = code;
		if(readfirstmain(BPIr,1,true))then begin
			if(blank(BPIr.Vendor))then begin
				BPIr.Vendor = vendor;
			end else begin
				BPIr.Vendor = BPIr.Vendor & "," & vendor;
			end;
			logtext(0,BPIr.Code & " _ " & BPIr.Vendor);
			recordstore(BPIr,true);
		end;
		
		if (NextImportLine(true)) then begin end;
	end;
			

return;
end;

global
updating procedure BPIBrandsGroupIn()		//Edit----------------------Dima  29.04.2015
begin
  record BPIBrandVc BPIr;
	string 255 name,id,elevel,deliv,supp,prodtime,group;
	vector string 255 BBrCodes;
	integer i;
	
	BPIr.Code = "";
	while(loopMain(BPIr,1,true))begin
		BPIr.StockGroup = "";
		BBrCodes[BPIr.Name] = BPIr.Code;
		recordstore(BPIr,true);
	end;
	i = 0;
	while (TestEOF()==false) begin
		i=i+1;
		name = ImportField;
		group = ImportField;

		BPIr.Code = BBrCodes[name];
		if(readfirstmain(BPIr,1,true))then begin
			BPIr.StockGroup = group;
			logtext(0,BPIr.Code & " _ " & BPIr.StockGroup & " " & i);
			recordstore(BPIr,true);
		end;
		
		if (NextImportLine(true)) then begin end;
	end;
			

return;
end;

global
updating procedure PositionToINIn()		//Edit----------------------Dima  29.04.2015
begin
	string 255 code,stelaj,polka;
	record INVc INr;
	record BarcodeVc Barcoder;
	boolean foundf;
	
	while (TestEOF()==false) begin
		code = ImportField;
		stelaj = ImportField;
		polka = ImportField;
		
		if(nonblank(code))then begin
			foundf = true;
			INr.Code = code;
			if(readfirstmain(INr,1,true)==false)then begin
				INr.BarCode = code;
				if(readfirstkey("BarCode",INr,1,true)==false)then begin
					Barcoder.Barcode = code;
					if(readfirstmain(Barcoder,1,true))then begin
						INr.Code = Barcoder.Itemcode;
						if(readfirstmain(INr,1,true)==false)then begin
							foundf = false;
							logtext(0,code & " not found ");
						end;
					end;
				end;
			end;
		
			if(foundf and nonblank(INr.Code))then begin
				INr.Department = stelaj;
				INr.InvCode = polka;
				recordstore(INr,true);
			end;
		end;
		
		if (NextImportLine(true)) then begin end;
	end;
			

return;
end;






global
updating procedure PaymentTermForBrandIn()		//Edit----------------------Dima  29.04.2015
begin
	string 255 codeBr,codePT;
	record CUVc CUr;
	record BPIBrandVc BPIBrandr;
	boolean foundf;
	
	
	// CUr.VEPayDeal
	
	
	while (TestEOF()==false) begin
		codeBr = "";
		codePT = "";
		codeBr = ImportField;
		codePT = ImportField;
		
		if (nonblank(codeBr) and nonblank(codePT)) then begin
			BPIBrandr.Code = codeBr;
			if (ReadFirstMain(BPIBrandr,1,true)) then begin
				if (nonblank(BPIBrandr.Vendor)) then begin
					CUr.Code = BPIBrandr.Vendor;
					CUr.VEType = 1;
					if (ReadFirstKey("VEActCode",CUr,2,true)) then begin
						CUr.VEPayDeal = codePT;
						if (RecordStore(CUr,true)) then begin
							logtext(0,CUr.Code & " Updated " & CUr.VEPayDeal);
						end;
					end;
				end else begin
					logtext(0," Vendor not found, BRND Code: " & BPIBrandr.Code);
				end;
			end else begin
				logtext(0," Brand not found, BRND Code: " & codeBr);
			end;
		end;
		
		if (NextImportLine(true)) then begin end;
	end;

return;
end;












global webpublic updating procedure WebOpenCoinIV()
begin
	record IVVc IVr;
	boolean TrHs;
	
	setcompany(25,false);
	IVr.InvDate = stringtodate("29/11/2019");
	TrHs = true;
	while(loopkey("InvDate",IVr,1,TrHs))begin
		if(IVr.InvDate!=stringtodate("29/11/2019"))then begin TrHs = false; end;
		
		if(TrHs)then begin
			if(blank(IVr.SalesGroup))then begin
				switch(IVr.MachineName)begin
					case"CC1":IVr.SalesGroup = "GCC1";recordstore(IVr,true);
					case"CC2":IVr.SalesGroup = "GCC2";recordstore(IVr,true);
					case"CC21":IVr.SalesGroup = "GCC21";recordstore(IVr,true);
					case"CC22":IVr.SalesGroup = "GCC22";recordstore(IVr,true);
				end;
			end;
		end;
	end;

return;
end;